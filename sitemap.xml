<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.8">
  <compound kind="file">
    <name>ex_network.h</name>
    <path>examples/</path>
    <filename>ex__network_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__network_8h" name="n_network.h" local="yes" import="no" module="no" objc="no">nilorea/n_network.h</includes>
    <includes id="n__network__msg_8h" name="n_network_msg.h" local="yes" import="no" module="no" objc="no">nilorea/n_network_msg.h</includes>
    <includes id="n__thread__pool_8h" name="n_thread_pool.h" local="yes" import="no" module="no" objc="no">nilorea/n_thread_pool.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_DATA</name>
      <anchorfile>ex__network_8h.html</anchorfile>
      <anchor>a3666813bd7c31381b68c7cdbb3512d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_net_datas</name>
      <anchorfile>ex__network_8h.html</anchorfile>
      <anchor>a6f950bd6cd1d0314572ecae401ac1883</anchor>
      <arglist>(N_STR *str, N_STR **hostname, N_STR **data)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>manage_client</name>
      <anchorfile>ex__network_8h.html</anchorfile>
      <anchor>a2af070d97fced1a0eadad90c6aa4903b</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>send_net_datas</name>
      <anchorfile>ex__network_8h.html</anchorfile>
      <anchor>a97064904e9c2be2094c349413ff348fc</anchor>
      <arglist>(NETWORK *netw, N_STR *data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>nilorea.h</name>
    <path>include/</path>
    <filename>nilorea_8h.html</filename>
    <includes id="n__3d_8h" name="n_3d.h" local="no" import="no" module="no" objc="no">nilorea/n_3d.h</includes>
    <includes id="n__common_8h" name="n_common.h" local="no" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__config__file_8h" name="n_config_file.h" local="no" import="no" module="no" objc="no">nilorea/n_config_file.h</includes>
    <includes id="n__exceptions_8h" name="n_exceptions.h" local="no" import="no" module="no" objc="no">nilorea/n_exceptions.h</includes>
    <includes id="n__games_8h" name="n_games.h" local="no" import="no" module="no" objc="no">nilorea/n_games.h</includes>
    <includes id="n__hash_8h" name="n_hash.h" local="no" import="no" module="no" objc="no">nilorea/n_hash.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="no" import="no" module="no" objc="no">nilorea/n_list.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="no" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__network_8h" name="n_network.h" local="no" import="no" module="no" objc="no">nilorea/n_network.h</includes>
    <includes id="n__network__msg_8h" name="n_network_msg.h" local="no" import="no" module="no" objc="no">nilorea/n_network_msg.h</includes>
    <includes id="n__nodup__log_8h" name="n_nodup_log.h" local="no" import="no" module="no" objc="no">nilorea/n_nodup_log.h</includes>
    <includes id="n__pcre_8h" name="n_pcre.h" local="no" import="no" module="no" objc="no">nilorea/n_pcre.h</includes>
    <includes id="n__signals_8h" name="n_signals.h" local="no" import="no" module="no" objc="no">nilorea/n_signals.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="no" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <includes id="n__thread__pool_8h" name="n_thread_pool.h" local="no" import="no" module="no" objc="no">nilorea/n_thread_pool.h</includes>
    <includes id="n__time_8h" name="n_time.h" local="no" import="no" module="no" objc="no">nilorea/n_time.h</includes>
    <includes id="n__user_8h" name="n_user.h" local="no" import="no" module="no" objc="no">nilorea/n_user.h</includes>
    <includes id="n__zlib_8h" name="n_zlib.h" local="no" import="no" module="no" objc="no">nilorea/n_zlib.h</includes>
  </compound>
  <compound kind="file">
    <name>n_3d.h</name>
    <path>include/nilorea/</path>
    <filename>n__3d_8h.html</filename>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">n_log.h</includes>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <class kind="struct">PHYSICS</class>
    <member kind="define">
      <type>#define</type>
      <name>copy_point</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga55ea8f9ffbf8113d1404c6f497891958</anchor>
      <arglist>(__src_, __dst_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOVE_INTER</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gafd490454081da9fd11b3a8564a1b1e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOVE_SIMU</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gaeca89443b9e6938674997d41a89dd7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOVE_STOPPED</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga37296420ee4666a035fbc7773e5d63b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR3D_COLLINEAR</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga1553548da310962d8aac7f06896d015a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR3D_DO_INTERSECT</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga4aa4f8e93ec25da82dbef99b4dcca990</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR3D_DONT_INTERSECT</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga6f567ec1eef50b1902b47b3d67b0cece</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR3D_SET</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga0d342c376c3e3125c8fb97bcbe7f93c0</anchor>
      <arglist>(VECTOR, X, Y, Z)</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>VECTOR3D</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga4cbdd7084ea2076595f397a969feba63</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga436d6582b13cb4a7a52e5814236ae5f0</anchor>
      <arglist>(VECTOR3D *p1, VECTOR3D *p2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gadc7a001ab64c72a43243175e56a86264</anchor>
      <arglist>(PHYSICS *object, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position_nb</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga5a40d51963e17af619b6a3c36c687462</anchor>
      <arglist>(PHYSICS *object, int it, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position_reverse</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga7644cdf589832471424103293b68f77b</anchor>
      <arglist>(PHYSICS *object, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position_reverse_nb</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gaa8021a03baa26410f81f6fcdf77da564</anchor>
      <arglist>(PHYSICS *object, int it, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_angle_between</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga523b38d99b808d695819e5d42c91b182</anchor>
      <arglist>(VECTOR3D *vec1, VECTOR3D *vec2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_dot_product</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga08fa4eb6d167cc941fe6cfd5d21b255d</anchor>
      <arglist>(VECTOR3D *vec1, VECTOR3D *vec2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vector_intersect</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gafc35e47713f26cce316cc85dd85354b7</anchor>
      <arglist>(VECTOR3D *p0, VECTOR3D *p1, VECTOR3D *p2, VECTOR3D *p3, VECTOR3D *px)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_normalize</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gab69467787b1b55290585366a20cf82cb</anchor>
      <arglist>(VECTOR3D *vec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_aabb.h</name>
    <path>include/nilorea/</path>
    <filename>n__aabb_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <class kind="struct">AABB3D</class>
    <member kind="typedef">
      <type>double</type>
      <name>AABB_VALUE</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga2e8c97586d46ff176f473eceb0e56b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>AABB3D</type>
      <name>createAABB3D</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga43ab841f201f07c553777742c856fb26</anchor>
      <arglist>(AABB_VALUE xMin, AABB_VALUE yMin, AABB_VALUE zMin, AABB_VALUE xMax, AABB_VALUE yMax, AABB_VALUE zMax)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doAABB3DsIntersect</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga11fb7be12781cebf853e040aa6011877</anchor>
      <arglist>(AABB3D box1, AABB3D box2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPointInsideAABB3D</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga2c1c28d9cb85d4507f492bab1bfa136c</anchor>
      <arglist>(AABB3D box, AABB_VALUE x, AABB_VALUE y, AABB_VALUE z)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_allegro5.h</name>
    <path>include/nilorea/</path>
    <filename>n__allegro5_8h.html</filename>
    <member kind="function">
      <type>int</type>
      <name>get_keyboard</name>
      <anchorfile>group___a_l_l_e_g_r_o5.html</anchorfile>
      <anchor>ga89b632f62c41b87b68e83a086e302247</anchor>
      <arglist>(ALLEGRO_USTR *str, ALLEGRO_EVENT event)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_anim.h</name>
    <path>include/nilorea/</path>
    <filename>n__anim_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">n_log.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">n_str.h</includes>
    <class kind="struct">ANIM_DATA</class>
    <class kind="struct">ANIM_FRAME</class>
    <class kind="struct">ANIM_GFX</class>
    <class kind="struct">ANIM_LIB</class>
    <member kind="function">
      <type>int</type>
      <name>add_bmp_to_lib</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga4cf34c94b752318abd8d5b856b062a13</anchor>
      <arglist>(ANIM_LIB *lib, unsigned int pos, char *file, char *resfile)</arglist>
    </member>
    <member kind="function">
      <type>ANIM_LIB *</type>
      <name>create_anim_library</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga81c2c337d299fe619c2fada4e261181d</anchor>
      <arglist>(char *name, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delete_bmp_from_lib</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga358bc55590e5dcdecf5ae5299ffd12dc</anchor>
      <arglist>(ANIM_LIB *lib, unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_anim_lib</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>gacbbe4efe3e6f10bd7d47e82a11f62b7b</anchor>
      <arglist>(ANIM_LIB **lib)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>draw_anim</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga4f778dfddf8d3015fe1be3e5a13a636a</anchor>
      <arglist>(ANIM_DATA *data, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_anim</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>gab4c26f5aa2303d73fd7b4a4ff4f3899f</anchor>
      <arglist>(ANIM_DATA *data, unsigned int delta_t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_base64.h</name>
    <path>include/nilorea/</path>
    <filename>n__base64_8h.html</filename>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_base64_decode</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga24442d2563cc006d307273b236d0e515</anchor>
      <arglist>(N_STR *bufcoded)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_base64_encode</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga8bf1d83b3f1c485357a9ddc6ee5eb7c4</anchor>
      <arglist>(N_STR *string)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>n_isalpha</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga7dfc6b4d37b7a367238da83f2839e9e4</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>n_islower</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga4754b8b773a929548fe2aad386859bb5</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>n_isupper</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga2fd423ac5899e997358227574358a42e</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_tolower</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga06f46dcc4684717a4fcc1b3aa0d43c57</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_toupper</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga39ec073874feeaf9f85384015acd8a58</anchor>
      <arglist>(char c)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_common.h</name>
    <path>include/nilorea/</path>
    <filename>n__common_8h.html</filename>
    <includes id="n__log_8h" name="n_log.h" local="no" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__enum_8h" name="n_enum.h" local="no" import="no" module="no" objc="no">nilorea/n_enum.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>__EXTENSIONS__</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab27cf1abd092548f1c51632e6ae35a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__n_assert</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga4ecf5d80299a4ca1dc13c3a19610db11</anchor>
      <arglist>(__ptr, __ret)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_nstr</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gaf0e29edead3f943a4ac241c5724e1384</anchor>
      <arglist>(__PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_nstrp</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gaab20080a93a62a08872d89824c4bad5d</anchor>
      <arglist>(__PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_str</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga55b9404f7bc9d3a3ead2f0103331a87e</anchor>
      <arglist>(__PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_strp</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga854188aa71e84f7d6222a7489a591e18</anchor>
      <arglist>(__PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_strw</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab4ed0ba398b0b3af910cc20e83be92bc</anchor>
      <arglist>(__PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Alloca</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga9b5f7ec4665998fd701e37404b731239</anchor>
      <arglist>(__ptr, __size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BYTEORDER_BIG_ENDIAN</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga92cc12b19b23eb27798b62d2d2f4e59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BYTEORDER_LITTLE_ENDIAN</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga3188941b4d65de46471a2e1259fc0ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CALL_RETRY</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga9961907f2207345d0509e51f44063dcd</anchor>
      <arglist>(__retvar, __expression, __max_tries, __delay)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>checkerror</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gac1ba27872d9628ba6bd9b3f3637c7d91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONCAT</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga88fa737059e67b4b17ec980e5877361e</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONCAT_BUILDER</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab5cf9772871f6212ae61eed9a8085e30</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga3da44afeba217135a680a7477b5e3ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>endif</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gaa0c1167bb311135eecf24a0e7c885b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>equal_if</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga2507d4d96edcb14310f82085f71dbaaa</anchor>
      <arglist>(__a, __cond, __b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALL_THROUGH</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga38dadd06badcc5b7cca444a551604399</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCE_INLINE</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gac032d233a8ebfcd82fd49d0824eefb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Free</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gae62e40d702e99a7760ba1de7451dff51</anchor>
      <arglist>(__ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FreeNoLog</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga079dc7a6a7e7c54bb714d8bb2afdd022</anchor>
      <arglist>(__ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GET</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga982a66f513611f7f83ebfa4b4ecf1df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>get_error</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga3371dcfcd6c525e34365b24a8fa771b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>htonll</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga9f4bf0773c45ad9a9753a1b784a13fbb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>iffalse</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga87abdb5c0b624dcece1581948069c7d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ifnull</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gaa5f3b6f21277a9bca948a416513d2ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>iftrue</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gac09d070286c09d3eec91a0d5b6ac934a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ifzero</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga79f7ceea3d6646ba0da25f4c3718b1ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>init_error_check</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gad61c57fd5997c83a0963edee62a8ac8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>init_lock</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga0499ff5244b948781a28466e35282c55</anchor>
      <arglist>(__rwlock_mutex)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Malloc</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga46bf052fc99248347a1dcf89bc0757c6</anchor>
      <arglist>(__ptr, __struct, __size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_CHDIR</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga4bc75ab84b64cc33d9b965464623624d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_CLOSE</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga55dfdd7e9a9821fd5f9625ae41889686</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_DOUBLE_FORK</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga32b3a5b8badb960c65dbe2ef8a25ef59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_SETSID</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga6ffe0c4d51a62cf699d5a7843f5b974c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_SIGCHLD_HANDLER</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga5dd19041e566b3570809b28a65c9a1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_SIGCHLD_IGN</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga377a043238ac834707be06de92ef0647</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_STD_REDIRECT</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga62a4404f6b93780e7faf838f83b62d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_UMASK</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga0eb2535c92dffb71fa91e4cbb8fdbec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>next_even</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab071667c91455646ba461bab87153182</anchor>
      <arglist>(__val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>next_odd</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga91f8e341935aec2e93df1fc823de9172</anchor>
      <arglist>(__val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ntohll</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga3cfcf123d4ead264289232f91f2c9ca5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PAUSED</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga734b46dfd78fbf6fc938a6f9115f2cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>randomize</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga05621aa5175411737c0f4c83fdaabbf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>read_lock</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gaeba0ec63ec0aa6803e9a601b645b5cbf</anchor>
      <arglist>(__rwlock_mutex)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Realloc</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gad648c6926fba90c2f092a5dd93d16a77</anchor>
      <arglist>(__ptr, __struct, __size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Reallocz</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga8b90b68c45c5c6f8d0bfbbabb5dc91ab</anchor>
      <arglist>(__ptr, __struct, __old_size, __size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RUNNING</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga6fb7181d994ee98e735494be55809708</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>rw_lock_destroy</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga68d60dda02e374e8d2e38deb9aecadcd</anchor>
      <arglist>(__rwlock_mutex)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RWLOCK_LOGLEVEL</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gadc3b03aa67a4fbc1c653968b267ef431</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga59da1d65e87a723efe808dbabb4fc205</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STOPPED</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gae888d76ec9e058aa47eeaaa7917a470d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STOPWANTED</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga727b9108a0176d661faa6f725e9d2769</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>unlock</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga9bbd6f2ada0efec0afcdcaa60cc20474</anchor>
      <arglist>(__rwlock_mutex)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>write_lock</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gabf9cebcdf845c2c9b879a608be4c9dce</anchor>
      <arglist>(__rwlock_mutex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>file_exist</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gae51b692bea533096e5839a3dc5500780</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_computer_name</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga67485891fad679694c6c74285c47c246</anchor>
      <arglist>(char *computer_name, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_prog_dir</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab277acf7b61b1226c3cbb1811c1359e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_prog_name</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga121f484b21cd361e6fa84b1720762922</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log_environment</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga0b2464c1461e1fda88346e99bcbd7a9f</anchor>
      <arglist>(int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_abort</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gacaf9e791d31308d5d43c0322b03ee322</anchor>
      <arglist>(char const *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_daemonize</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gad5e50936af9a3d6e4a23b33a90d7c66c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_daemonize_ex</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gac6d3a290c95fa17ddeea32956cc9b16b</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>n_get_file_extension</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga846a5d59871d3009ee6a7b158745b804</anchor>
      <arglist>(char path[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>N_HIDE_STR</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga34a5c334f51b8d04689aae82258992b1</anchor>
      <arglist>(char *buf,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sigchld_handler</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga7ec144a9a628442e52b80210bc8364ad</anchor>
      <arglist>(int sig)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sigchld_handler_installer</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gacc0e695cf13f0eb3a00d5a1304508a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>pid_t</type>
      <name>system_nb</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga7f94f8b09f7295ebe555617ffdac59db</anchor>
      <arglist>(const char *command, int *infp, int *outfp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_config_file.h</name>
    <path>include/nilorea/</path>
    <filename>n__config__file_8h.html</filename>
    <includes id="n__hash_8h" name="n_hash.h" local="yes" import="no" module="no" objc="no">n_hash.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">n_str.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">n_log.h</includes>
    <class kind="struct">CONFIG_FILE</class>
    <class kind="struct">CONFIG_FILE_SECTION</class>
    <member kind="define">
      <type>#define</type>
      <name>config_endfor</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga2d2b6213151d9b9c50149149cffea041</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>config_foreach</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>gaa56fa5c30fab08e7145ab2640e12cde5</anchor>
      <arglist>(__config, __section_name, __key, __val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFIG_SECTION_HASH_TABLE_LEN</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga3ed215f5c5f97f94ae329eca4c35e7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CONFIG_LINE_LEN</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga7186273cd88640b740b6333cd98ae243</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_config_file</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga5c6e573bf39871c909dcd71c9bcc13b4</anchor>
      <arglist>(CONFIG_FILE **cfg_file)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_config_section_value</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga8a974512566d42e72223876c8af53377</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *section_name, size_t section_position, char *entry, size_t entry_position)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nb_config_file_sections</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>gad45c7fe12c0acb44f6f54befa3e364b9</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *section_name)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nb_config_file_sections_entries</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga1d4b7fa2d464616f3a5ac0641e952804</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *section_name, size_t section_position, char *entry)</arglist>
    </member>
    <member kind="function">
      <type>CONFIG_FILE *</type>
      <name>load_config_file</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga0206fadb78039ac602fc0696b27b85a6</anchor>
      <arglist>(char *filename, int *errors)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_config_file</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga1b22438cb7d7a274b748d49e555f7f50</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_crypto.h</name>
    <path>include/nilorea/</path>
    <filename>n__crypto_8h.html</filename>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>n_mathmod</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga37acef425eff0f48c69ef284bbf9378e</anchor>
      <arglist>(__a, __b)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_decode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga2e26b8c1f8bdf96057904eaa1c7bc92c</anchor>
      <arglist>(N_STR *string, N_STR *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_decode_file</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gaad821764c722b2e469ab5c54278c6023</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *rootkey)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_decode_file_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga1be4bd0f3b4410ebe4cd4240b804338c</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_decode_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga6c11d1e142ec3b1617128d1425f46174</anchor>
      <arglist>(N_STR *input_data, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_encode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga91ad0ccfda4700a5bc1a7a85488d60b2</anchor>
      <arglist>(N_STR *string, N_STR *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_encode_file</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga95f517e677af864def2a14af9196d596</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *rootkey)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_encode_file_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga5ed58e0fb772ca9e2a8b9679b29c08d7</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_encode_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga08551983c3b919de08ad1c35e0819d28</anchor>
      <arglist>(N_STR *input_data, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_get_answer</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga39a0e0c7d46e5adece091d682fcc87bd</anchor>
      <arglist>(N_STR *root_key, N_STR *question)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_get_question</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gae9d3c2b1247c0c79267521bcfcaf9079</anchor>
      <arglist>(size_t question_size)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_get_rootkey</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gaced1d3aa9c799ea8bde399f864f3c8fa</anchor>
      <arglist>(size_t rootkey_size)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_quick_decode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gaf9f2b64e60dd5e79279cc32ac7ff8886</anchor>
      <arglist>(N_STR *encoded_question)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_quick_encode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga26872672f67b7c89b6fa9fa01d59ac00</anchor>
      <arglist>(N_STR *decoded_question)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_enum.h</name>
    <path>include/nilorea/</path>
    <filename>n__enum_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DECLARE_ENUM</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga266b4f5d6f1e76c7eeef977e56cc3bde</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DECLARE_FUNCTION</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga377972fbae05d71dc8fabb1c1877911a</anchor>
      <arglist>(__N_ENUM_FUNCTION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DEFINE_FUNCTION_FROMSTRING</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga964177636600e258e32a8e012d7a007c</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DEFINE_FUNCTION_FROMSTRING_EX</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaaa8085ccfc20546b0018f9b632b0e4f2</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DEFINE_FUNCTION_ISSTRINGVALID</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga2105eb154565384ade84819bacf2887f</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DEFINE_FUNCTION_ISVALID</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gab3b5dd061164258de176f7ffa32fe145</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DEFINE_FUNCTION_TOSTRING</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gabf6a172751734c61d3a085d2d84ad2c1</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_FUNCTION_FROMSTRING</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga3a40084aa4bdf489237d2437c0d4f68e</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_FUNCTION_FROMSTRING_EX</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaccb1c4c04fcc83762dfb9b97f435e069</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_FUNCTION_ISSTRINGVALID</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga63ef0e997e10478272e01be3e9e79b12</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_FUNCTION_ISVALID</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga457e9b5dfd4600f929d19dbd2677ebae</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_FUNCTION_TOSTRING</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaf27507c501fad25c140309888736763d</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_CASE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga15b8c5b39d53fd3feeec705f26838457</anchor>
      <arglist>(element_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_COMPARE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga611385c769937552a14ddc6844ed1cc9</anchor>
      <arglist>(element_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_COMPARE_EX</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga4976594d1caebbc9650ed6fb2d14b647</anchor>
      <arglist>(element_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_ENUM_ELEMENT</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga44ac43fb5c85d2e40005dbdf51b9a74f</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_FROMSTRING_COMPARE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga3c89e08bc779d815e66dcc9f8870e481</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_FROMSTRING_COMPARE_EX</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga9c316b8c7098a29d612f20fd8af29fca</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_ISSTRINGVALID_COMPARE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gae3044692829a9375b5adf420dc3b2dd8</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_ISVALID_CASE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaa03912305f1c13c17b4a210b86b6640c</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_TOSTRING_CASE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga9b3d5b92ca460075d6c62b4a9050ae4e</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_UNKNOWN_VALUE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga84ad941920c5aadc7673145666b830d8</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_ENUM_DECLARE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga5e228b797b1b9eaba4cde8fbd0bf67e6</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_ENUM_DEFINE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaa8f74897a9d29d0a5e3465a63a532668</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_ENUM_ENTRY</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaea85b76e3e616598be8af94c93581532</anchor>
      <arglist>(class, method)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_exceptions.h</name>
    <path>include/nilorea/</path>
    <filename>n__exceptions_8h.html</filename>
    <class kind="struct">ExceptionContextList</class>
    <member kind="define">
      <type>#define</type>
      <name>ARRAY_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gabc660e09e2c417997846e1cb4dbad16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Catch</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gac211d2a791b3dbdf25ffcaa8f8ab47b8</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CatchAll</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gab41d12224c2a8a71eae37b6fd220e65b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIVZERO_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gadde7ae9cb7a05cd3556323c73255d296</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EndTry</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gafe2b5d1eabd8fc42c0f9b705f7ffd5ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GENERAL_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga7c281c3c51b0c8d457ab24de9e05a40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gabde388354010f32706dda5f3b7877c6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OVERFLOW_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga228aeb917ba34e655f8b33f33ea08df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARSING_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gab7d2e60cf7a0d9526792ab07f5ea1d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Throw</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga0193ae08c69e967b76172464d544db04</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Try</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga7a2b8ccf41cff483bac8e86ac7feff9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_exception</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga040ac853d9c68fa155c04bc20c51e3cb</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_exception</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gad0ba3a133eaeab182a4ed4e64dd44a85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>ExceptionContextList *</type>
      <name>__Exceptions</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga8778d850622ce846f599b34fa2f40cc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_files.h</name>
    <path>include/nilorea/</path>
    <filename>n__files_8h.html</filename>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">nilorea/n_list.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <class kind="struct">N_FILE_INFO</class>
    <member kind="function">
      <type>void</type>
      <name>n_free_file_info</name>
      <anchorfile>group___n___f_i_l_e_s.html</anchorfile>
      <anchor>gaba9ea91ca9b32e1690af2345a0bc1391</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_scan_dir</name>
      <anchorfile>group___n___f_i_l_e_s.html</anchorfile>
      <anchor>gab9ee9adcfef9402898e287664829ceef</anchor>
      <arglist>(const char *dir, LIST *result, const int recurse)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_fluids.h</name>
    <path>include/nilorea/</path>
    <filename>n__fluids_8h.html</filename>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">nilorea/n_list.h</includes>
    <includes id="n__thread__pool_8h" name="n_thread_pool.h" local="yes" import="no" module="no" objc="no">nilorea/n_thread_pool.h</includes>
    <class kind="struct">N_FLUID</class>
    <class kind="struct">N_FLUID_THREAD_PARAMS</class>
    <member kind="define">
      <type>#define</type>
      <name>_z</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga600f1725bfa6a715da65daeb83d3125f</anchor>
      <arglist>(__fluid, __componant)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_zd</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gad422c2ed5e4306e7f61afbf88e88ab0d</anchor>
      <arglist>(__fluid, __value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_n_fluid</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gaed3b9ded2024759357ae1ba942f978c2</anchor>
      <arglist>(N_FLUID **fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_advectSmoke</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga809d22be5668d07181fb9999b52bf56f</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_advectVel</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gafb7618eec92414d3d74933b4e982fc62</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>n_fluid_avgU</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga6d61b152b1deafabfb977b7d3181f70d</anchor>
      <arglist>(N_FLUID *fluid, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>n_fluid_avgV</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga09cbf3ce58daef2dc1d874d1571d0898</anchor>
      <arglist>(N_FLUID *fluid, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_draw</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga386df773d1b7d98ffd6c1d2f98cf5091</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_extrapolate</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga7f32b5a83ee253026673b6baef3ab4c3</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>ALLEGRO_COLOR</type>
      <name>n_fluid_getSciColor</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga7f30f7cfedc3a79d484ad155a96f1db0</anchor>
      <arglist>(N_FLUID *fluid, double val, double minVal, double maxVal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_integrate</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gadfa079fd795393db4c9ed68aa7338ca2</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_resetObstacles</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gacb82683a9afbf14c7b2b043451d4cffa</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>n_fluid_sampleField</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga746c88f5fa990a5d43602d595b587437</anchor>
      <arglist>(N_FLUID *fluid, double x, double y, uint32_t field)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_setObstacle</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gadfddee52df3d3270958f38d8127c6672</anchor>
      <arglist>(N_FLUID *fluid, double x, double y, double vx, double vy, double r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_simulate</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga690a4558c5b3d5eafdf1d7b64af5858f</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_simulate_threaded</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga580ecc1e497035ce47b272309fcf22c8</anchor>
      <arglist>(N_FLUID *fluid, THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_solveIncompressibility</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga8e25eb0a7b98e8ccc135703f584db37c</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>N_FLUID *</type>
      <name>new_n_fluid</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gaff6f6732139e8c294f6affe1d594e8d2</anchor>
      <arglist>(double density, double gravity, size_t numIters, double dt, double overRelaxation, size_t sx, size_t sy)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_games.h</name>
    <path>include/nilorea/</path>
    <filename>n__games_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">n_log.h</includes>
    <includes id="n__time_8h" name="n_time.h" local="yes" import="no" module="no" objc="no">n_time.h</includes>
    <class kind="struct">GAME_ENV</class>
    <member kind="define">
      <type>#define</type>
      <name>CPU_USE_FULL</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ga84d4d6cd71758c35c7aefbb8e3684c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPU_USE_LESS</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ga5bb1d90aeda09d9646e3c19f632251d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPU_USE_NICE</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>gaf442dcd3e6a11816794a1150ac94bbde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy_game_env</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ga47fd0bb7f6db4234af06b5ebafb18837</anchor>
      <arglist>(GAME_ENV **game)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_game_env</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>gab086402feba2e0fe1845453a8d899bf6</anchor>
      <arglist>(GAME_ENV **game)</arglist>
    </member>
    <member kind="function">
      <type>GAME_ENV *</type>
      <name>load_game_config</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>gaa343f04284422e7cfafa561b82c8f4f3</anchor>
      <arglist>(char *config_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_gui.h</name>
    <path>include/nilorea/</path>
    <filename>n__gui_8h.html</filename>
    <includes id="n__allegro5_8h" name="n_allegro5.h" local="no" import="no" module="no" objc="no">nilorea/n_allegro5.h</includes>
    <includes id="n__common_8h" name="n_common.h" local="no" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="no" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="no" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="no" import="no" module="no" objc="no">nilorea/n_list.h</includes>
    <includes id="n__hash_8h" name="n_hash.h" local="no" import="no" module="no" objc="no">nilorea/n_hash.h</includes>
    <includes id="n__trees_8h" name="n_trees.h" local="no" import="no" module="no" objc="no">nilorea/n_trees.h</includes>
    <class kind="struct">N_GUI_DIALOG</class>
    <class kind="struct">N_GUI_LAYOUT</class>
    <class kind="struct">N_GUI_TOKEN</class>
    <class kind="struct">N_GUI_TOKENIZER</class>
    <class kind="struct">N_GUI_WIDGET</class>
    <member kind="define">
      <type>#define</type>
      <name>N_ENUM_N_GUI_TOKEN</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gaf2afa0b732e332f496e61d1bff2a2f4d</anchor>
      <arglist>(_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_GUI_MAX_TOKEN_SIZE</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gaa28cc091550f66481cc38b9804a83743</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>N_ENUM_DECLARE</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga507018ef1e5fe4e5b5aee8d9fa0a5ec6</anchor>
      <arglist>(N_ENUM_N_GUI_TOKEN, __N_GUI_TOKEN)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_gui_init_tokenizer</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gae99c392c9fb96c015d63b94c85daa1b3</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer, const char *input)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_gui_is_eof</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga8d8625d7ac14319879e0047d7136f3a2</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer)</arglist>
    </member>
    <member kind="function">
      <type>N_GUI_DIALOG *</type>
      <name>n_gui_load_dialog</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gaa001a67d3dfbe86cd0681e7754d3b7c0</anchor>
      <arglist>(char *html, char *css)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_gui_next_char</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga1f0db0c4346487cfd4bd609490ba6d4a</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer)</arglist>
    </member>
    <member kind="function">
      <type>N_GUI_TOKEN</type>
      <name>n_gui_next_token</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gafcfdcbab5869f058444bb97336349281</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer, bool *inside_open_tag)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_gui_peek_char</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga9f1d350ceb9a6bc872de0dc60b4501fe</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_gui_print_token</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga32d003db7bacada0232ee36eb8b544d6</anchor>
      <arglist>(N_GUI_TOKEN token)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_hash.h</name>
    <path>include/nilorea/</path>
    <filename>n__hash_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">n_list.h</includes>
    <class kind="union">HASH_DATA</class>
    <class kind="struct">HASH_NODE</class>
    <class kind="struct">HASH_TABLE</class>
    <member kind="define">
      <type>#define</type>
      <name>HASH_CLASSIC</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaaf679be9dbe3da9e0b18126584fc276f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_DOUBLE</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga567061089afaa05f04d40a1e076a5705</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_INT</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gae5cab5caf80df2b545b79010e58c930e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_PTR</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga380f9944f2162350b1fc52f1e20cf47c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_STRING</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga610bced429f9d429f9b54d69135e9253</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_TRIE</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gac2850d8278af32c2e76e7ab856902bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_UNKNOWN</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gafd04f4d8463ac67a011caef42b109595</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>hash_val</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaeb031d4f0f896b1802b9c27e62f28d14</anchor>
      <arglist>(node, type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_VAL</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga8e695e90d977acedccfe2e79148cf29e</anchor>
      <arglist>(node, type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ht_foreach</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga072f117e6bd9fdde0d39776764b8784e</anchor>
      <arglist>(__ITEM_, __HASH_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HT_FOREACH</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaf1c2ece096867efb7c26d301f160176c</anchor>
      <arglist>(__ITEM_, __HASH_,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HT_FOREACH_R</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga23715b66af50d3cfa4ca46649274f283</anchor>
      <arglist>(__ITEM_, __HASH_, __ITERATOR,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ht_foreach_r</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2d5dc4bd5bcf119740bd59199cae7a4c</anchor>
      <arglist>(__ITEM_, __HASH_, __ITERATOR_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MurmurHash</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga39d803f4f98826a27d1fb06c547c4038</anchor>
      <arglist>(__key, __len, __seed, __out)</arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>HASH_VALUE</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga6c86061eb14e5e2f9643af9880afd2a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga22a943135dbcdb1611b40ce0547111ce</anchor>
      <arglist>(HASH_TABLE **table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga5d2235e91b2b6b70129246897442f8d5</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>LIST *</type>
      <name>ht_get_completion_list</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga65d64120ef6c7fc1a08e6870b00996db</anchor>
      <arglist>(HASH_TABLE *table, const char *keybud, size_t max_results)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_double</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga502f7dbc79e94de757ef1cab4fb73559</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_int</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2ad18ed107f9e01ff8c7ef666293034f</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE *val)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>ht_get_node</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gab06eec66b0398db0948d911383816277</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>ht_get_node_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2defd7b222fb9cf155d0287b56e90c50</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ht_get_optimal_size</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga77abac901ee0e46a85c45c4203a2e44b</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga009f66a508dcea120e0cd2b34805e5a2</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_ptr_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gafc8e7f91865edfe1cb18639f16e72c46</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value, void **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_string</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga833854027692b398d675388aa548e892</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_table_collision_percentage</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga484b7c7f330914d21fafbf582713fc07</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>ht_node_type</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga1392981a507905d028136bc0b92aa48b</anchor>
      <arglist>(HASH_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_optimize</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gadf9786c2b5844999ebb011ab56746047</anchor>
      <arglist>(HASH_TABLE **table)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ht_print</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga62ef2a517efcbc464f0103995f28c3e8</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_double</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga6d77292f765050e2afc7735218ff242b</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_int</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga97d04c1584c2c3a794143a6362fd96c8</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gacca20eb3be4375556ac43122405dceda</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_ptr_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga0ee0ebca02acb68a78c91fc8dfb30ef3</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value, void *val, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_string</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga90fe9fc425a2077cffd1f4aa68cb6c6a</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_string_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaee367d5c4ee2479096ab943cacb1464e</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_remove</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2dc87273d3e6b3492d88f2bd7288102e</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_remove_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga9fc743323b4302e50c95df26ca57d468</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_resize</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga941824c3bad16549d062908475ff36a6</anchor>
      <arglist>(HASH_TABLE **table, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>LIST *</type>
      <name>ht_search</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga16446a54727b375dfd0c92704dc39995</anchor>
      <arglist>(HASH_TABLE *table, int(*node_is_matching)(HASH_NODE *node))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MurmurHash3_x64_128</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga9bac809d8768dc7f07d1049be596f931</anchor>
      <arglist>(const void *key, const size_t len, const uint64_t seed, void *out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MurmurHash3_x86_128</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga9485f626bdfb456f4ad53453f635b4e9</anchor>
      <arglist>(const void *key, const size_t len, const uint32_t seed, void *out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MurmurHash3_x86_32</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaed0f585f6848a774ec3d58a89a7940f0</anchor>
      <arglist>(const void *key, const size_t len, const uint32_t seed, void *out)</arglist>
    </member>
    <member kind="function">
      <type>HASH_TABLE *</type>
      <name>new_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga3890b11d41766a859d4e55976ec02acb</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>HASH_TABLE *</type>
      <name>new_ht_trie</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gab4f188252880ce2d4f5b1082775b7385</anchor>
      <arglist>(size_t alphabet_size, size_t alphabet_offset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_iso_engine.h</name>
    <path>include/nilorea/</path>
    <filename>n__iso__engine_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">n_log.h</includes>
    <class kind="struct">CELL</class>
    <class kind="struct">MAP</class>
    <member kind="define">
      <type>#define</type>
      <name>BLCK</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gae0863acc1b854b0f522caf85f9651f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_ABILITY</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gac3020f81c4af6587694d3068728560db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_MUSIC</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga86e6af08f2c7a754c9ad414fd17a6e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_OBJECT</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga7300ffd75554bf5829e66684e9d66841</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_TILE</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga942503317c8fd73c07f63baff1f41fa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWIM</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga154a04fc36112a0bbaf49752569165e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WALK</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga4083fcbe80d42575b0336ddbf4ebc622</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>camera_to_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga525e12d4a6810091df368bebfead7432</anchor>
      <arglist>(MAP **map, int tx, int ty, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>camera_to_scr</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga78d7a5ad73f85f937963b3619f65b0d7</anchor>
      <arglist>(MAP **map, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>create_empty_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gafbd6e8d63e4a9bffb9bae939e6f33d95</anchor>
      <arglist>(MAP **map, char *name, int XSIZE, int YSIZE, int TILEW, int TILEH, int nbmaxobjects, int nbmaxgroup, int nbmaxanims, int nbtiles, int nbanims)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>draw_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gadbfcc4dbd27990aa04aa68b3434480ef</anchor>
      <arglist>(MAP *map, BITMAP *bmp, int destx, int desty, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gafa40b1cd0683fd3a0088d759b8f4a57b</anchor>
      <arglist>(MAP **map)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_value</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga2021990e7c7fa6c4589752a771aa48f3</anchor>
      <arglist>(MAP *map, int type, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga4d6c75959391f3afd98d81a1773ffe84</anchor>
      <arglist>(MAP **map, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>save_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga045b27c2f11572951f654b62ede9baa0</anchor>
      <arglist>(MAP *map, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ScreenToMap</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gadfbec14d5cfbe60a7034d59022a97cb3</anchor>
      <arglist>(int mx, int my, int *Tilex, int *Tiley, BITMAP *mousemap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_value</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga8366c42e9ace1872eaad8efda0e9a244</anchor>
      <arglist>(MAP *map, int type, int x, int y, int value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_kafka.h</name>
    <path>include/nilorea/</path>
    <filename>n__kafka_8h.html</filename>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__network_8h" name="n_network.h" local="yes" import="no" module="no" objc="no">nilorea/n_network.h</includes>
    <class kind="struct">N_KAFKA</class>
    <class kind="struct">N_KAFKA_EVENT</class>
    <member kind="define">
      <type>#define</type>
      <name>N_KAFKA_EVENT_CREATED</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gade5799ed950dfdd5e090dba268b0e07b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_KAFKA_EVENT_ERROR</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga1b5022c7a65f9c85bbf2804a3da07c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_KAFKA_EVENT_OK</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga11ab59456abb5928280f41a57eaa833b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_KAFKA_EVENT_QUEUED</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaea95b9288487b68851b20e2d9b5d550e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_KAFKA_EVENT_WAITING_ACK</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga560e6b3170b43d0b31ff794923d4e12f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_add_header</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga9e626e04be1ebeaf66f4690ddf9ab996</anchor>
      <arglist>(N_KAFKA_EVENT *event, N_STR *key, N_STR *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_add_header_ex</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga02c9289324eed7dae0f404f128a2a626</anchor>
      <arglist>(N_KAFKA_EVENT *event, char *key, size_t key_length, char *value, size_t value_length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_kafka_delete</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gafe936c186c71e469556dcdb352d94697</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_dump_unprocessed</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga09d26dcdf88d9ed197b887ac73aac5ec</anchor>
      <arglist>(N_KAFKA *kafka, char *directory)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_event_destroy</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga7a0a6d08bd00098b411d243c65534aa6</anchor>
      <arglist>(N_KAFKA_EVENT **event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_kafka_event_destroy_ptr</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga84613bb586cff1a0584656556b5ad267</anchor>
      <arglist>(void *event)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_get_event</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga0e9dae2d98bf5324af1b460b2599f1c7</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>n_kafka_get_schema_from_char</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga2bc6a0682f46b656bba51e8ee29b43b9</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>n_kafka_get_schema_from_nstr</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gab21424947e9b6e88a8adcd0488449899</anchor>
      <arglist>(N_STR *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_get_status</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gab453f1e6a379817d36d540d41ec377dd</anchor>
      <arglist>(N_KAFKA *kafka, int *nb_queued, int *nb_waiting, int *nb_error)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA *</type>
      <name>n_kafka_load_config</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga4cd1e248364550d5c17f6320ff68d047</anchor>
      <arglist>(char *config_file, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_load_unprocessed</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga85fbd895edbc1e30be58e8c52c33e329</anchor>
      <arglist>(N_KAFKA *kafka, char *directory)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA *</type>
      <name>n_kafka_new</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gae6d98c08b5722169f89ed163da77a610</anchor>
      <arglist>(int64_t poll_timeout, int64_t poll_interval, size_t errstr_len)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gac903845a2fb184abee410a713c3890f9</anchor>
      <arglist>(int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event_from_char</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaaf3a94133f843704a780b74aa03ed7ca</anchor>
      <arglist>(char *string, size_t written, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event_from_file</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gae1089b7890f335af01618cfa736b2022</anchor>
      <arglist>(char *filename, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event_from_string</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaff933a80c25dd942e8363ea19edcf551</anchor>
      <arglist>(N_STR *string, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_new_headers</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga25ac2b613c382318a74e9076b7336349</anchor>
      <arglist>(N_KAFKA_EVENT *event, size_t count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_poll</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga6553559587621a3667ed71565db20926</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_produce</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaad8abd310e8055d6f99dacc841e5bde8</anchor>
      <arglist>(N_KAFKA *kafka, N_KAFKA_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_put_schema_in_char</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga6167f6e8b0e9d485797bc524162cbf3f</anchor>
      <arglist>(char *string, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_put_schema_in_nstr</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga365ccb4d2d1601cd9d7c11fcf4acc1c9</anchor>
      <arglist>(N_STR *string, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_start_pooling_thread</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gab5930c8ff78f4a853b5a5c140414aec0</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_stop_pooling_thread</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaa5e76f5452306e99a18eb31d59aa4df1</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_list.h</name>
    <path>include/nilorea/</path>
    <filename>n__list_8h.html</filename>
    <class kind="struct">LIST</class>
    <class kind="struct">LIST_NODE</class>
    <member kind="define">
      <type>#define</type>
      <name>link_node</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga720a8cd6c95044b33d3c952e5dadebc3</anchor>
      <arglist>(__NODE_1, __NODE_2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>list_foreach</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga55cdaac0dd0f4f4d687607e6679a4634</anchor>
      <arglist>(__ITEM_, __LIST_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>list_pop</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga1b74755b55e46d1f993985b5979029bd</anchor>
      <arglist>(__LIST_, __TYPE_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>list_shift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga1109e1a0b5996fb3c362ad243e2f8f80</anchor>
      <arglist>(__LIST_, __TYPE_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LIST_ITEMS</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gaeed14812a05ce9c87072e63600bb9169</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>remove_list_node</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga60b976800febfa81b17177509341d6d9</anchor>
      <arglist>(__LIST_, __NODE_, __TYPE_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNLIMITED_LIST_ITEMS</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga0fa05dd93ab10dd6211de4ae51f9ffdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_destroy</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga90d32fef68ce6f3ec0a7b4085690c755</anchor>
      <arglist>(LIST **list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_empty</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga1dafe7a250ddad51fadd375f057287e7</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_empty_with_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gae77e34ac35b77e9d1b3124536aa77722</anchor>
      <arglist>(LIST *list, void(*free_fnct)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_node_pop</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga995d2bd9082e103a8dec39958e3a7eb7</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_node_push</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gafdc5e3efd8a9244161b52fcb24760b0e</anchor>
      <arglist>(LIST *list, LIST_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_node_shift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga65791a797732c74dc66948a014479328</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_node_unshift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga50d70b3c943c22fb97d50801a8bd8381</anchor>
      <arglist>(LIST *list, LIST_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>list_pop_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga0a1ce227da1f0c6bac9cd02e2d6b36c0</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_push</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga4eab319289a83524639ee5e9f0441fdf</anchor>
      <arglist>(LIST *list, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_push_sorted</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gae582df4f7b31ccc5a6a026ffd8ea9555</anchor>
      <arglist>(LIST *list, void *ptr, int(*comparator)(const void *a, const void *b), void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_search</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gae009d6d3c835a2affb99071ea8457803</anchor>
      <arglist>(LIST *list, void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_search_with_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gaecb20955816170bab5035b81e98e043d</anchor>
      <arglist>(LIST *list, int(*checkfunk)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>list_shift_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga12076f8c3ab2687b6891bb6ee224a76e</anchor>
      <arglist>(LIST *list, char *file, size_t line)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_unshift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga65687bd547104e185bad1b7da5cb0d98</anchor>
      <arglist>(LIST *list, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_unshift_sorted</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga98e4e6e168d82f062e987ef578ce8e43</anchor>
      <arglist>(LIST *list, void *ptr, int(*comparator)(const void *a, const void *b), void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>new_list_node</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga678e828550efc8e64a836bb8c713c2f4</anchor>
      <arglist>(void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>remove_list_node_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gabd7f04c5a1cd8307c0f289dcccdb5a41</anchor>
      <arglist>(LIST *list, LIST_NODE *node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_log.h</name>
    <path>include/nilorea/</path>
    <filename>n__log_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <class kind="struct">TS_LOG</class>
    <member kind="define">
      <type>#define</type>
      <name>LOG_ALERT</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga12b2a3bb9e3adfeb35b4e5514e7d9043</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_CRIT</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gaaa731313f5c63e855fefb5f6519c3283</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_DEBUG</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga6ff63e8955665c4a58b1598f2b07c51a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_EMERG</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga5c6e8b60c2512dfc0e0224d25a61cb2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_ERR</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga96fad55b3f5adf08c39e4c877cf185e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_FILE</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga69d4676733f5e850f451942b6d901382</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_INFO</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gaeb4f36db01bd128c7afeac5889dac311</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_NOTICE</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gad89ee324d180cdcd7defcc709ff9ca42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_NULL</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gae3b3638575ad43aa2dba40543dcec45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_STDERR</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gaa6e90002990bd6fe70bf367456dc7d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_SYSJRNL</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga22d57c47fac1ff91517133741592cc01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_WARNING</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gadf4476a6a4ea6c74231c826e899d7189</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>n_log</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga61355655c6d490cdf201afdfc340df4b</anchor>
      <arglist>(__LEVEL__,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_n_log</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gafbbbfcb9063b9f1454a499dbf98f7a56</anchor>
      <arglist>(int level, const char *file, const char *func, int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>close_safe_logging</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gab0f29a8f3d807e2738376cd0bd657eb0</anchor>
      <arglist>(TS_LOG *log)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close_sysjrnl</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga6b48448b4bb689cc55c6a7267daf77ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>get_log_file</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga2ff7ac3ed2362bf2820e1639b4ddaf8f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_log_level</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gafeea44ab08778cbff68e91e831d44112</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>open_safe_logging</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga51d76a6d03860ab048a2f09eabc27f9a</anchor>
      <arglist>(TS_LOG **log, char *pathname, char *opt)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>open_sysjrnl</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga669c0bbf1e87d5531b6432ae87c46648</anchor>
      <arglist>(char *identity)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_log_file</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gac83aa9829ddf0d169e2890ef63052b52</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_log_level</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gacad9b2d55788f46ddde811c986ead9ae</anchor>
      <arglist>(const int log_level)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_safe_log</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga4351d7c5fb7f3464480aebb763b70d69</anchor>
      <arglist>(TS_LOG *log, char *pat,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_network.h</name>
    <path>include/nilorea/</path>
    <filename>n__network_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">n_str.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">n_list.h</includes>
    <includes id="n__hash_8h" name="n_hash.h" local="yes" import="no" module="no" objc="no">n_hash.h</includes>
    <class kind="struct">N_SOCKET</class>
    <class kind="struct">NETWORK</class>
    <class kind="struct">NETWORK_HTTP_INFO</class>
    <class kind="struct">NETWORK_POOL</class>
    <member kind="define">
      <type>#define</type>
      <name>HEAD_CODE</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga72bfa45bed60463a02fe636da854ce9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEAD_SIZE</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga559af0e5a7ad6c1693c0387eefde89bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_ENUM_netw_code_type</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga3513b0e66667d67528aea6235e43386d</anchor>
      <arglist>(_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETW_MAX_RETRIES</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gac2121258336e5f41058bc73f69d167c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETW_SOCKET_DISCONNECTED</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga8fc789e263443a5a5edbb984fee857b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETW_SOCKET_ERROR</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga010f0a5ac05248b8b9ba98c8756dc212</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_CONSECUTIVE_SEND_WAIT</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga7d0cc5bc300c9f167ed1c9535d7ad1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_DEPLETE_QUEUES_TIMEOUT</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaec1d27f444d574de372336a233cf4600</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_DEPLETE_SOCKET_TIMEOUT</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae4bb4a196edb9975875c89a29e4ac4d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_IPALL</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga8c9c7f339ab7d4066257c92c1ce1d1ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_IPV4</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga5f726a9a4d94caeeeff82e4449564d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_IPV6</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga3f93cb2837a5f8d836804f450415d7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_WAIT_CLOSE_TIMEOUT</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa361a43b84d75f31b0a96aafc7c2ba48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOCKET_SIZE_FORMAT</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga6915838bcf8c8963879b309d2c325c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ssize_t(*</type>
      <name>netw_func</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga7a1e8d1b12bde55109fb95f5f0fcf5cc</anchor>
      <arglist>)(void *, char *, uint32_t)</arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>SOCKET</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga8dc8083897335125630f1af5dafd5831</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deplete_send_buffer</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab7f9fd903744c66d570b868df5b3a551</anchor>
      <arglist>(int fd, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>htonst</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga6b4483c46531db7c0332e747c676beef</anchor>
      <arglist>(size_t value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>N_ENUM_DECLARE</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafac9423e06ba72d88b7d3ce910b25ff1</anchor>
      <arglist>(N_ENUM_netw_code_type, __netw_code_type)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK *</type>
      <name>netw_accept_from</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab99090cbf623f95556ea610e690b50d9</anchor>
      <arglist>(NETWORK *from)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK *</type>
      <name>netw_accept_from_ex</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga87057932b1901f9a91c4db49224087e2</anchor>
      <arglist>(NETWORK *from, size_t send_list_limit, size_t recv_list_limit, int blocking, int *retval)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK *</type>
      <name>netw_accept_nonblock_from</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga32138772c399518190a14e81164fc469</anchor>
      <arglist>(NETWORK *from, int blocking)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_add_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga10429a9fa106b61c38f28635242ce502</anchor>
      <arglist>(NETWORK *netw, N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_add_msg_ex</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafd17b2ed695976a31b4cdee5091e0ef7</anchor>
      <arglist>(NETWORK *netw, char *str, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_build_http_response</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga618b55172cced563edc4e4f75ea29285</anchor>
      <arglist>(N_STR **http_response, int status_code, const char *server_name, const char *content_type, char *additional_headers, N_STR *body)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>netw_calculate_urlencoded_size</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab463f75281ea4367b77c0aac5b9f87e8</anchor>
      <arglist>(const char *str, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_close</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gac345c1af1935cebb9ee33edd4c32267a</anchor>
      <arglist>(NETWORK **netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_connect</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae18d52a130063ba1fd0a4cf4b6a2da20</anchor>
      <arglist>(NETWORK **netw, char *host, char *port, int ip_version)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_destroy_pool</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga5c0996a0b85b32d296c4e679a6eb86c2</anchor>
      <arglist>(NETWORK_POOL **netw_pool)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK_HTTP_INFO</type>
      <name>netw_extract_http_info</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gadae857ee9151eda07a25f2d9a4a69d11</anchor>
      <arglist>(char *request)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>netw_extract_http_request_type</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga1727d8db9bda334b79e3ea91347d317e</anchor>
      <arglist>(const char *request)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netw_get_http_date</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga7203513a45a5dd830b38ea07b6659e89</anchor>
      <arglist>(char *buffer, size_t buffer_size)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>netw_get_http_status_message</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaccd9f1e940bb4a1e276a6b33a96ad8db</anchor>
      <arglist>(int status_code)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netw_get_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga0d0992b4eac986d7757ecddbc66e3b90</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_queue_status</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga18c9bccb8219d66dfe7320bc0377ccaa</anchor>
      <arglist>(NETWORK *netw, size_t *nb_to_send, size_t *nb_to_read)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_state</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaaacd43329a330a29b5a93cce28c068e5</anchor>
      <arglist>(NETWORK *netw, uint32_t *state, int *thr_engine_status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netw_get_url_from_http_request</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga9126c0c13477e4ac748aaea5ff984393</anchor>
      <arglist>(const char *request, char *url, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>netw_guess_http_content_type</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaf6513b643e5145f4b5cfbd3fde827873</anchor>
      <arglist>(const char *url)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_info_destroy</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaedf7660c79e8cb0e7521dfa72af2e12e</anchor>
      <arglist>(NETWORK_HTTP_INFO http_request)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_init_wsa</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga22bc4dd5d80c2229c3c43f6d6705dece</anchor>
      <arglist>(int mode, int v1, int v2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_make_listening</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga52afd4f5662c9c8f334d224ae2cdbdf2</anchor>
      <arglist>(NETWORK **netw, char *addr, char *port, int nbpending, int ip_version)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK_POOL *</type>
      <name>netw_new_pool</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga4bf42c45211b2a687c7601da41e667cd</anchor>
      <arglist>(size_t nb_min_element)</arglist>
    </member>
    <member kind="function">
      <type>HASH_TABLE *</type>
      <name>netw_parse_post_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaf5d3a953ec9fbfe90406b00a4d96599c</anchor>
      <arglist>(const char *post_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_pool_add</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaed3d4b17261c0ce51cd7671b81b5a007</anchor>
      <arglist>(NETWORK_POOL *netw_pool, NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_pool_broadcast</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga06115ed18a658114104ca6b6823f5d79</anchor>
      <arglist>(NETWORK_POOL *netw_pool, NETWORK *from, N_STR *net_msg)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>netw_pool_nbclients</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga7e971e647011b8e218d2336812fedf67</anchor>
      <arglist>(NETWORK_POOL *netw_pool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netw_pool_netw_close</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab0da745063a55fd79b6252339d5276a4</anchor>
      <arglist>(void *netw_ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_pool_remove</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafc7a91b4be2a997710a2b54037c25168</anchor>
      <arglist>(NETWORK_POOL *netw_pool, NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>netw_recv_func</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga63e06c0450013078c54bb4951e9438ac</anchor>
      <arglist>(void *NET)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>netw_send_func</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga2ef0aab7ff9fb531466a536773b53683</anchor>
      <arglist>(void *NET)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_ident</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae8345266fcf7a23c0e8ffe176b0e086f</anchor>
      <arglist>(NETWORK *netw, int type, int id, N_STR *name, N_STR *passwd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_ping</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gad9588cf27263ecf40f57d3923ccf721a</anchor>
      <arglist>(NETWORK *netw, int type, int id_from, int id_to, int time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_position</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafaf1202a5f56a9f2285fccfbcacb3a6c</anchor>
      <arglist>(NETWORK *netw, int id, double X, double Y, double vx, double vy, double acc_x, double acc_y, int time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_quit</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gac8b30599c7a5c2cce35ee401d7b9d7f1</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_string_to</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gad3b590da2eb8b594c75d1d5f46ba7b45</anchor>
      <arglist>(NETWORK *netw, int id_to, N_STR *name, N_STR *chan, N_STR *txt, int color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_string_to_all</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga02b35de5d3b84e79c4fecbf4cebce603</anchor>
      <arglist>(NETWORK *netw, N_STR *name, N_STR *chan, N_STR *txt, int color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_set</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa8e1fe7978995197f08aa0ef24a76c33</anchor>
      <arglist>(NETWORK *netw, int flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_set_blocking</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gad02f949dd057ae7dd382f03f9364cac0</anchor>
      <arglist>(NETWORK *netw, unsigned long int is_blocking)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_set_user_id</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga4dcf657c3f133ae52d1fa6f2a2e0cd18</anchor>
      <arglist>(NETWORK *netw, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_setsockopt</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa5ed966d8c5844ded549eda41e38c0be</anchor>
      <arglist>(NETWORK *netw, int optname, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_start_thr_engine</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga5ba0555c5ccd261227c3c1216923d563</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_stop_thr_engine</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga29159184519b3129c0154b1a2c2a3e2f</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>netw_urldecode</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae94e940f6d1c780563dd246ffdcc5fd6</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>netw_urlencode</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga2aa0b402c9e72a7f5ce894bc92c377e7</anchor>
      <arglist>(const char *str, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>recv_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga4e2fbd39980f3a1cb7258ec4382f29f7</anchor>
      <arglist>(void *netw, char *buf, uint32_t n)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>recv_php</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaf7a34a0478fe84e296dbdaf9cc618259</anchor>
      <arglist>(SOCKET s, int *_code, char **buf)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>send_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa99961114daea113b78c7fc5e545d592</anchor>
      <arglist>(void *netw, char *buf, uint32_t n)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>send_php</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga250de7b17e4b2ec68e11c48789bbbe00</anchor>
      <arglist>(SOCKET s, int _code, char *buf, int n)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_network_msg.h</name>
    <path>include/nilorea/</path>
    <filename>n__network__msg_8h.html</filename>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">n_str.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">n_list.h</includes>
    <includes id="n__3d_8h" name="n_3d.h" local="yes" import="no" module="no" objc="no">n_3d.h</includes>
    <class kind="struct">NETW_MSG</class>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_BOX</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaa4b51b1c41f36f6ee947958e7b2f461e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_GET_BOX</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gab8dd7be31c5e0e263f81efa4962b38a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_IDENT_REPLY_NOK</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga2c234a6eeea5e8f2fe26573ba2053423</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_IDENT_REPLY_OK</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gacd87327bd5e06b2dbceee860fb93cc90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_IDENT_REQUEST</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga0aba2c6691315fe2da60573c228da4ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_PING_REPLY</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga322dcf158f5f222cb28df2736a533292</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_PING_REQUEST</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga2669f513eb1909d6f1940923f994eaf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_POSITION</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga6be40a0228eaffdc2591bd892801ad6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_QUIT</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga5752ebf119504833871560aaff3142a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_STRING</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga2cd8d019ec9563557d35e165c7fd820f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_int_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga9aa63e987d00d99d9a21aec35efecf74</anchor>
      <arglist>(NETW_MSG *msg, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_nb_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gae7c4f1b2c58aabda4856a2f5c782b863</anchor>
      <arglist>(NETW_MSG *msg, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_nstrdup_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga84f36b52e6d9dfe9ca6186c3177f5472</anchor>
      <arglist>(NETW_MSG *msg, N_STR *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_nstrptr_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga53dfbdd3b5d1cfcf387d17b4465e5f3a</anchor>
      <arglist>(NETW_MSG *msg, N_STR *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_strdup_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga196134389f2e0b1493154c73a7133df0</anchor>
      <arglist>(NETW_MSG *msg, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>create_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga62ae674d9de6171bcbd604e68a3b94a9</anchor>
      <arglist>(NETW_MSG **msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delete_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gadcc2854217553f3a4890973873bdf634</anchor>
      <arglist>(NETW_MSG **msg)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>double_swap</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga4f7b627b47a1ee6976089dc4ab0a91b9</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga425d9f110062f063dc2e9af0212b793d</anchor>
      <arglist>(NETW_MSG **msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_int_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gafc6e48e4853310c09174f5ff3dfed85b</anchor>
      <arglist>(NETW_MSG *msg, int *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_nb_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga56c3f927b3d6249eb5aa37a6d27ed225</anchor>
      <arglist>(NETW_MSG *msg, double *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_nstr_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga73be780021c7c875f476ef4e02d2bc1c</anchor>
      <arglist>(NETW_MSG *msg, N_STR **str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_str_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga12c81c5fd507131d3b73bbe71cb47476</anchor>
      <arglist>(NETW_MSG *msg, char **str)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>htond</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga0cf26e3b1e26847bbd66fbd4b4a1a67c</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>NETW_MSG *</type>
      <name>make_msg_from_str</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga3fd01fccdf5fee20c2f0df7429ab3dd7</anchor>
      <arglist>(N_STR *str)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>make_str_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga5145350ad23fa9c0db3057e566d70722</anchor>
      <arglist>(NETW_MSG *msg)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_ident</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga7bae3c3de53204413c7663007ec4a4d7</anchor>
      <arglist>(int type, int id, N_STR *name, N_STR *passwd)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_ping</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaeb5e94070c0ee79ff2d11a707d225c3a</anchor>
      <arglist>(int type, int id_from, int id_to, int time)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_position_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga6d469c5cbc4fdfa266be68a35d10a904</anchor>
      <arglist>(int id, double X, double Y, double vx, double vy, double acc_x, double acc_y, int time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_quit_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaea4cc09810479665c6c7e689dfaecff7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_string_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gafb91c3ea7bfa93212141fa1fe074fb3d</anchor>
      <arglist>(int id_from, int id_to, N_STR *name, N_STR *chan, N_STR *txt, int color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_ident</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaf2d84e34e50db7b3b7aca16c6bdb06f8</anchor>
      <arglist>(N_STR *msg, int *type, int *ident, N_STR **name, N_STR **passwd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_ping</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga525ee81a12f526d55b2b380d9338424e</anchor>
      <arglist>(N_STR *msg, int *type, int *from, int *to, int *time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_position</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga241bf3b1ebc63dd986dfec1b0fe4998b</anchor>
      <arglist>(N_STR *msg, int *id, double *X, double *Y, double *vx, double *vy, double *acc_x, double *acc_y, int *time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_quit</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga601ef18cfe3570caaa81cc43c09004c2</anchor>
      <arglist>(N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_string</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gace220d6339bd8085269ecee2b35126fb</anchor>
      <arglist>(N_STR *msg, int *id, N_STR **name, N_STR **chan, N_STR **txt, int *color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_msg_get_type</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga70abef02e9578c21b5707eecb3750fef</anchor>
      <arglist>(N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ntohd</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaaed102598c4379bd1e0dc78f834972b0</anchor>
      <arglist>(double value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_nodup_log.h</name>
    <path>include/nilorea/</path>
    <filename>n__nodup__log_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">n_log.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">n_str.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">n_list.h</includes>
    <includes id="n__hash_8h" name="n_hash.h" local="yes" import="no" module="no" objc="no">n_hash.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>n_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga31e622f597bb984c82396227807d774c</anchor>
      <arglist>(__LEVEL__,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>n_nodup_log_indexed</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga687f9d1a376aa019c5d4c082dee370ef</anchor>
      <arglist>(__LEVEL__, __PREF__,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_n_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga650828539395216dd2f4f28da5131c42</anchor>
      <arglist>(int LEVEL, const char *file, const char *func, int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_n_nodup_log_indexed</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>gacbf9e2a1400ab6f00a30186d9a5c4683</anchor>
      <arglist>(int LEVEL, const char *prefix, const char *file, const char *func, int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>close_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga46eca069bfff2be6809828df52d1031d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dump_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga38552b9724c76daede8b3c30833e9d09</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_nodup_table</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga823d1d2f22f2279e24d4c5bd927ff322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>gaf9c9b8e129263da15345f428cd73f19e</anchor>
      <arglist>(int max)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_particles.h</name>
    <path>include/nilorea/</path>
    <filename>n__particles_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">n_log.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">n_list.h</includes>
    <includes id="n__3d_8h" name="n_3d.h" local="yes" import="no" module="no" objc="no">n_3d.h</includes>
    <includes id="n__time_8h" name="n_time.h" local="yes" import="no" module="no" objc="no">n_time.h</includes>
    <class kind="struct">PARTICLE</class>
    <class kind="struct">PARTICLE_SYSTEM</class>
    <member kind="define">
      <type>#define</type>
      <name>BITMAP_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga3ff8114200b93147ade488aeb96f41a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CIRCLE_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga01868fa6d6e4c79b56fdfe9b4dc80215</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIRE_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga2aa8d618d2d413883ade289da2e4941a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NORMAL_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga0f1bd6a28afe52df05802230fa440b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIXEL_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga256f505114d27985957313a4a0b2d9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SINUS_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gaa0ac5e168a8b0aa14dbff01dd569a598</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNOW_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gacbfe2274aa037b8e331b9485e95b1c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STAR_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gafc693964956e87207d950ee952fa2c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEXT_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga7256f319a5807b336a5cd9f83fd03c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRANS_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga661ec824b54dfdf70f6a737ab8bdaef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_particle</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gae8252f1cd818ef45e20e7d4c54351d2e</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, int spr, int mode, int lifetime, int size, ALLEGRO_COLOR color, PHYSICS object)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_particle_ex</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gad8c6a1f791072a6485af0439a3c4d94f</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, int spr, int mode, int off_x, int off_y, int lifetime, int size, ALLEGRO_COLOR color, double vx, double vy, double vz, double ax, double ay, double az)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>draw_particle</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga09e19e83e2251d87db737b6b702a7d70</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, double xpos, double ypos, int w, int h, double range)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_particle_system</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga80e275b9835fae499b29b6082c29970c</anchor>
      <arglist>(PARTICLE_SYSTEM **psys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_particle_system</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gaf00630a2c4eaa468e124fe4d9557c825</anchor>
      <arglist>(PARTICLE_SYSTEM **psys, int max, double x, double y, double z, int max_sprites)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>manage_particle</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga8a92ddb62fe9f945d5baed9d22938a10</anchor>
      <arglist>(PARTICLE_SYSTEM *psys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>manage_particle_ex</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga3bd6b6f5b679348fb4d24e0524be4edf</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>move_particles</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga1a20afdfa79e8cc5ee3f214ab34ca96d</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, double vx, double vy, double vz)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_pcre.h</name>
    <path>include/nilorea/</path>
    <filename>n__pcre_8h.html</filename>
    <class kind="struct">N_PCRE</class>
    <member kind="function">
      <type>int</type>
      <name>npcre_clean_match</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ga89e67d2b218e2138a12aaecc2deab8fc</anchor>
      <arglist>(N_PCRE *pcre)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>npcre_delete</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>gaf198eb0bc8c55ac41cc92af8e538ce04</anchor>
      <arglist>(N_PCRE **pcre)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>npcre_match</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ga605b60ef645cf217bd2b3dc548d1d6c2</anchor>
      <arglist>(char *str, N_PCRE *pcre)</arglist>
    </member>
    <member kind="function">
      <type>N_PCRE *</type>
      <name>npcre_new</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ga54f913d2ee09d63de0f06fc1b9439d4a</anchor>
      <arglist>(char *str, int max_cap, int flags)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_signals.h</name>
    <path>include/nilorea/</path>
    <filename>n__signals_8h.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAX_STACK_FRAMES</name>
      <anchorfile>group___s_i_g_n_a_l_s.html</anchorfile>
      <anchor>ga2ed127ee3fe422f95420f138273e6da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIGALTSTACK_SIZE</name>
      <anchorfile>group___s_i_g_n_a_l_s.html</anchorfile>
      <anchor>ga00580ffdbc034e7e5f76f7b3936c0229</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_signal_handler</name>
      <anchorfile>group___s_i_g_n_a_l_s.html</anchorfile>
      <anchor>ga439d6a2f0248222f4f7ef75ee00e1d50</anchor>
      <arglist>(const char *progname)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_str.h</name>
    <path>include/nilorea/</path>
    <filename>n__str_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">n_list.h</includes>
    <class kind="struct">N_STR</class>
    <member kind="define">
      <type>#define</type>
      <name>BAD_METACHARS</name>
      <anchorfile>n__str_8h.html</anchorfile>
      <anchor>af5664579c33748b46f6244d8060da42b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>free_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga113e906d03374ac38e441f1df44095fb</anchor>
      <arglist>(__ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>local_strdup</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga16762ce4107cf926d2dc561b150333a0</anchor>
      <arglist>(__src_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>n_remove_ending_cr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga54bf16a8b9e09ae99152a5fe0d69199c</anchor>
      <arglist>(__nstr_var)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>n_replace_cr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga277814cf383e1605fa867b5598aec2a1</anchor>
      <arglist>(__nstr_var, __replacement)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nstrcat</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga3e2a6eb0bcc7a4a9cae344a3182523a5</anchor>
      <arglist>(__nstr_dst, __nstr_src)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nstrcat_bytes</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabbbc73a9b341963c39388672be783f2e</anchor>
      <arglist>(__nstr_dst, __void_src)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nstrprintf</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga92cd2a8efba2cd901ec96dfce1601ca6</anchor>
      <arglist>(__nstr_var, __format,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nstrprintf_cat</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga520338be0790ce65eedbbb18a09399d6</anchor>
      <arglist>(__nstr_var, __format,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>strprintf</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga413e4753210ae76b4231721a2354f06b</anchor>
      <arglist>(__n_var,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WILDMAT_ABORT</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga79fa44855e34ba816359656e8bfd841f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WILDMAT_NEGATE_CLASS</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga868c667912754efcf68370278b0aaee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>NSTRBYTE</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga0ed4c27dcf5b9db305238d06aae0e450</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_free_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaca4a7a2dfa962f043cb8f3762ce28761</anchor>
      <arglist>(N_STR **ptr)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>char_to_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga69e5f2dbf75571a73e5a3332929642a4</anchor>
      <arglist>(const char *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>char_to_nstr_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gac4314e9f0ada88300a09d66405d541a8</anchor>
      <arglist>(const char *from, NSTRBYTE nboct, N_STR **to)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>char_to_nstr_nocopy</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gac8a6d1b664609215ee950c105658d86c</anchor>
      <arglist>(char *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>char_to_nstr_nocopy_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga65d9775967814094e82d07e5cb921ca5</anchor>
      <arglist>(char *from, NSTRBYTE nboct, N_STR **to)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga7b1c84d10757d1886ed29938f1f65973</anchor>
      <arglist>(N_STR *nstr)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>file_to_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gad2c9b27509a55615e57ef8efd2ca3a02</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_nstr_nolog</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabd313699b10bb56e50c45670e479faa7</anchor>
      <arglist>(N_STR **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_nstr_ptr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga0a864a4ce4997389f2e5e2e16c51a30a</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_nstr_ptr_nolog</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae1af929354e55057c4f134bce8f5b4d6</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_split_result</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gad53cff99261e509872a2a4128b1265cf</anchor>
      <arglist>(char ***tab)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>join</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gacdeb6b4760b1e4b22188993f0cd5222f</anchor>
      <arglist>(char **splitresult, char *delim)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>new_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga873edbb1f8787d0a78a13ccbbed9b9f9</anchor>
      <arglist>(NSTRBYTE size)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>nfgets</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga6aafe2498e23778dc91c8ad08167ff24</anchor>
      <arglist>(char *buffer, NSTRBYTE size, FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nstr_to_fd</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaf1ad6fe037290fd52fb91b89dd978b1f</anchor>
      <arglist>(N_STR *str, FILE *out, int lock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nstr_to_file</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga287229f34095426806d36c86be764d12</anchor>
      <arglist>(N_STR *n_str, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>nstrcat_bytes_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga9394dd9180b28abf28905a8f161043b5</anchor>
      <arglist>(N_STR **dest, void *src, NSTRBYTE size)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>nstrdup</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga3e30a18ec42d0f4cd8651c442bf62651</anchor>
      <arglist>(N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>resize_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga640c39561bbd3ba017d57dbfee6c7c5c</anchor>
      <arglist>(N_STR *nstr, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scan_dir</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaa3becc1e523b47d5d53bbbf6b1603520</anchor>
      <arglist>(const char *dir, LIST *result, const int recurse)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scan_dir_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga3257ab0fdf5a36d0dfca480a161d9fbf</anchor>
      <arglist>(const char *dir, const char *pattern, LIST *result, const int recurse, const int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skipu</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae4317ddc09606fcca46265a53bfbfb8b</anchor>
      <arglist>(char *string, char toskip, NSTRBYTE *iterator, int inc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skipw</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga783070a793146a860c3651c8434f32e1</anchor>
      <arglist>(char *string, char toskip, NSTRBYTE *iterator, int inc)</arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>split</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gab731024d29b0937615c1cdddeb8d4875</anchor>
      <arglist>(const char *str, const char *delim, int empty)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>split_count</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga194b81c0709d24aef9b6f7e8635d3966</anchor>
      <arglist>(char **split_result)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>str_replace</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga88e865dd8e64f3f3504a99d4d0961c37</anchor>
      <arglist>(const char *string, const char *substr, const char *replacement)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_sanitize</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaaf432cb6330353e306e51ed3d6e9f417</anchor>
      <arglist>(char *string, const char *mask, const char replacement)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_sanitize_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga2386f438e79df60930987a6102e87934</anchor>
      <arglist>(char *string, const NSTRBYTE string_len, const char *mask, const NSTRBYTE masklen, const char replacement)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_int</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae2c2238ae654a58f23570ce58e4d0eb8</anchor>
      <arglist>(const char *s, int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_int_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga55fdc7d1a7bd05f3e3925486e7fc9b9d</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_int_nolog</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga62422c326112e425298de6fb92584067</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, int *i, const int base, N_STR **infos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabe0231d30f0adca6678adba9ffca328a</anchor>
      <arglist>(const char *s, long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaf2fb09488bdaa0e8662f639ea899627e</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long_long</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga04812d120313b73e6e22493cad0ec75d</anchor>
      <arglist>(const char *s, long long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long_long_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga342bfee6550085fdf64e3db3cdd3ecb3</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, long long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strcpy_u</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga0484a44a99d2ad895e2c111b34ea5e39</anchor>
      <arglist>(char *from, char *to, NSTRBYTE to_size, char split, NSTRBYTE *it)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strlo</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaeaf9add3ea7a87eeea6e0cc4a81b47e6</anchor>
      <arglist>(char *string, char *dest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strup</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabb57d0188e78f2520d4ae7cc805579f5</anchor>
      <arglist>(char *string, char *dest)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>trim</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae5bb0c43f76b886197ee48679f0e8dbc</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>trim_nocopy</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga096b9e0a33d6e0f97e26c86b96415330</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wildmat</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabcfef0711183d5a9eb5ccb9c72ccaf85</anchor>
      <arglist>(register const char *text, register const char *p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wildmatcase</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga83b7c5c99476048f972ead97468ab7c2</anchor>
      <arglist>(register const char *text, register const char *p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_and_fit</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga4d201326b0adb27713e86af775b3dd35</anchor>
      <arglist>(char **dest, NSTRBYTE *size, NSTRBYTE *written, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_and_fit_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gacc3740a4b0816c80170ba6d6b0ae9eea</anchor>
      <arglist>(char **dest, NSTRBYTE *size, NSTRBYTE *written, const char *src, NSTRBYTE src_size, NSTRBYTE additional_padding)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_thread_pool.h</name>
    <path>include/nilorea/</path>
    <filename>n__thread__pool_8h.html</filename>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">n_list.h</includes>
    <class kind="struct">THREAD_POOL</class>
    <class kind="struct">THREAD_POOL_NODE</class>
    <class kind="struct">THREAD_WAITING_PROC</class>
    <member kind="define">
      <type>#define</type>
      <name>DIRECT_PROC</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga8c7d9cf88f160af14b39be46a66f8189</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXITED_THREAD</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga1acdd58d4aee3c8453ea124bd862518d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXITING_THREAD</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>gaac52c55616f27d8f95c4435d4b2cf91d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IDLE_PROC</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga7131f70ca662b8211de3586a2a6a5a16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_LOCK</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga993c05b6c403f10fb3627e9e4fc30c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOQUEUE</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>gaa558974d10eb2bf6f6915b6cc2bfea34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RUNNING_PROC</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga928be77c90a9b28e1931431b5eac113b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RUNNING_THREAD</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>gac3966893f43d72bd23c7c3f410df9a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYNCED_PROC</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga2b400f548be5f43fa27d8f8b18892c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WAITING_PROC</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>gad1478c0e8f6772bb9673116dd0902e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_threaded_process</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga46497eb81066d0df83dfd07ad0a9f561</anchor>
      <arglist>(THREAD_POOL *thread_pool, void *(*func_ptr)(void *param), void *param, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga7c1bc4b2165196ae865a5f11a6867a20</anchor>
      <arglist>(THREAD_POOL **thread_pool, unsigned int delay)</arglist>
    </member>
    <member kind="function">
      <type>long int</type>
      <name>get_nb_cpu_cores</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga8957711a73ec71ea58b28df71f4e1e0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>THREAD_POOL *</type>
      <name>new_thread_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga06425285000fa305a3e9eb7d8affa32f</anchor>
      <arglist>(size_t nbmaxthr, size_t nb_max_waiting)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>refresh_thread_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga5d9ce1747e4b7cb58ce3767f7e56cd8b</anchor>
      <arglist>(THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>start_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga0563294cf52eb2b9e4f1d017390ff46c</anchor>
      <arglist>(THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wait_for_synced_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga8207010787895dfc3bf7ba0b94974c26</anchor>
      <arglist>(THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wait_for_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga91ced7902ded69f1cdb0a625dbb5f4e9</anchor>
      <arglist>(THREAD_POOL *thread_pool, unsigned int delay)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_time.h</name>
    <path>include/nilorea/</path>
    <filename>n__time_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">n_common.h</includes>
    <class kind="struct">N_TIME</class>
    <member kind="function">
      <type>time_t</type>
      <name>get_msec</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gaa71a2f2a65caafed11a79e4317e88b44</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>get_sec</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gab5811f13d7c9699d13752c197d72cb67</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>get_usec</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gaa26bb3d464f6def321b9919bf1e9d1f4</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PAUSE</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gae4029ed3ae38f152bc572933ed1997be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>start_HiTimer</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>ga83bf99faafa00b4a69f31a589ca712ff</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>u_sleep</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>ga690f12dde1a446d47b8bf5f959493003</anchor>
      <arglist>(unsigned int usec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_trees.h</name>
    <path>include/nilorea/</path>
    <filename>n__trees_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">nilorea/n_list.h</includes>
    <includes id="n__hash_8h" name="n_hash.h" local="yes" import="no" module="no" objc="no">nilorea/n_hash.h</includes>
    <includes id="n__3d_8h" name="n_3d.h" local="yes" import="no" module="no" objc="no">nilorea/n_3d.h</includes>
    <class kind="union">COORD_VALUE</class>
    <class kind="struct">NODE_DATA</class>
    <class kind="union">NODE_DATA_TYPES</class>
    <class kind="struct">OCTREE</class>
    <class kind="struct">OCTREE_NODE</class>
    <class kind="struct">POINT2D</class>
    <class kind="struct">POINT3D</class>
    <class kind="struct">QUADTREE</class>
    <class kind="struct">QUADTREE_NODE</class>
    <class kind="struct">TREE</class>
    <class kind="struct">TREE_NODE</class>
    <member kind="typedef">
      <type>int(*</type>
      <name>compare_func</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga027ae21737f078c4db3834006ade29fd</anchor>
      <arglist>)(COORD_VALUE a, COORD_VALUE b)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>print_func</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga5bbe87be72c5f3b2d96107003c3725ee</anchor>
      <arglist>)(COORD_VALUE val)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>COORD_TYPE</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga7e8fb6192e0a9e61f70e4bcf88dd7800</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>QUADTREE_NODE *</type>
      <name>create_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gaf84bd52723c263a7393dbe58e26ae4c4</anchor>
      <arglist>(COORD_VALUE x, COORD_VALUE y, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>OCTREE *</type>
      <name>create_octree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gab863b9db45fb9ad7b4a1f4b6a0fa4ed4</anchor>
      <arglist>(int type)</arglist>
    </member>
    <member kind="function">
      <type>OCTREE_NODE *</type>
      <name>create_octree_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gaab241e76ec7f58148636b94588632478</anchor>
      <arglist>(POINT3D point, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>QUADTREE *</type>
      <name>create_quadtree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gadbc22319421ed2ae3643e46b713d72a7</anchor>
      <arglist>(int coord_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_octree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga8fe1d2b26c64c6e6a903686add0859ba</anchor>
      <arglist>(OCTREE *OCTREE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_octree_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga11959698cee9597fd1876b32b3c4aea4</anchor>
      <arglist>(OCTREE_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_quadtree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga2f00ef1f3055c5dda01588a36ec8bbec</anchor>
      <arglist>(QUADTREE_NODE *root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gac97d67a9c1e410abfa21c96252151295</anchor>
      <arglist>(QUADTREE *qt, QUADTREE_NODE **root, COORD_VALUE x, COORD_VALUE y, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_octree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga1fe46d075a192493c755b332a6217660</anchor>
      <arglist>(OCTREE *OCTREE, POINT3D point, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TREE *</type>
      <name>new_tree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga49421b368bbf90d858aace6abf08b093</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QUADTREE_NODE *</type>
      <name>search</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga7c0b07a6c3fdbbce8c43090ca197cf52</anchor>
      <arglist>(QUADTREE *qt, QUADTREE_NODE *root, COORD_VALUE x, COORD_VALUE y)</arglist>
    </member>
    <member kind="function">
      <type>TREE_NODE *</type>
      <name>tree_create_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga548b5e1126a451d166a3892c7761ee93</anchor>
      <arglist>(NODE_DATA value, void(*destroy_func)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tree_delete_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gac6fd5dd947cc80b699600bc734ffb114</anchor>
      <arglist>(TREE *tree, TREE_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tree_destroy</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gaa2e35447dc7c9b0b6e54aef8d688924e</anchor>
      <arglist>(TREE **tree)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tree_insert_child</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga2a7ac2ac073243ab157638c8d3c8a6cb</anchor>
      <arglist>(TREE_NODE *parent, TREE_NODE *child)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_user.h</name>
    <path>include/nilorea/</path>
    <filename>n__user_8h.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <includes id="n__network_8h" name="n_network.h" local="yes" import="no" module="no" objc="no">nilorea/n_network.h</includes>
    <includes id="n__3d_8h" name="n_3d.h" local="yes" import="no" module="no" objc="no">nilorea/n_3d.h</includes>
    <class kind="struct">N_USER</class>
    <class kind="struct">N_USERLIST</class>
    <member kind="define">
      <type>#define</type>
      <name>USERLIST_ALL</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gaa1818df59987698f547d177eb46517a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USERLIST_ALL_EXCEPT</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga83e39582966eb2e63f5c3ddce6cbc6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USERLIST_ONE</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga6aa5b8a1350ee4a1ad01d47b4100ea92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga25d7254e2bc5d4c6d4e89dadef9c67cd</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to_all</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gaaf1860e26c4355764ad00e1016547b2c</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to_all_except</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gaec87d76c70852173c2187e4eceb707ee</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to_ex</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga2f336886f3d5e909c397f1660419701d</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg, int mode, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_user</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gae10281ac87587e0e876bce8a4b0fd070</anchor>
      <arglist>(N_USERLIST *ulist, NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_del_user</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga199e127e979f625ff75a01e45afe0d5b</anchor>
      <arglist>(N_USERLIST *ulist, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_destroy</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gafa7f69dc21b1036e4e7815d8ab88c8d1</anchor>
      <arglist>(N_USERLIST **ulist)</arglist>
    </member>
    <member kind="function">
      <type>N_USERLIST *</type>
      <name>userlist_new</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga9b5ba218fe230aa8fa0934fce44c90be</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_send_waiting_msgs</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gac33945e0ace7b69815c92c2e9ba248a1</anchor>
      <arglist>(N_USERLIST *ulist)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_set_position_behavior</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gad9aae553bc39ca0193be01e70a3858d0</anchor>
      <arglist>(N_USERLIST *ulist, int id, int nb_rec_pos, int only_last_pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_user_add_waiting_msg</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gafeb353e9e5f9e0242e9b6d26ab668765</anchor>
      <arglist>(N_USERLIST *ulist, int id, N_STR *netmsg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_user_send_waiting_msgs</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga7b395e123b45d9d9215ea4318d5ff2cc</anchor>
      <arglist>(N_USERLIST *ulist, int id)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_zlib.h</name>
    <path>include/nilorea/</path>
    <filename>n__zlib_8h.html</filename>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">n_str.h</includes>
    <member kind="function">
      <type>size_t</type>
      <name>GetMaxCompressedLen</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>ga2b236630816c04de9fae5aa1ac9d2027</anchor>
      <arglist>(size_t nLenSrc)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>UncompressData</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>ga8d9cc906bc624d1a259f305aeca1b24f</anchor>
      <arglist>(unsigned char *abSrc, size_t nLenSrc, unsigned char *abDst, size_t nLenDst)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>unzip_nstr</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>gab434f8d8cbd741ecffd35be2125b66fe</anchor>
      <arglist>(N_STR *src)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>zip_nstr</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>gae1e033816ab406b33b403c687c2d7dea</anchor>
      <arglist>(N_STR *src)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_3d.c</name>
    <path>src/</path>
    <filename>n__3d_8c.html</filename>
    <includes id="n__3d_8h" name="n_3d.h" local="yes" import="no" module="no" objc="no">nilorea/n_3d.h</includes>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga436d6582b13cb4a7a52e5814236ae5f0</anchor>
      <arglist>(VECTOR3D *p1, VECTOR3D *p2)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>same_sign</name>
      <anchorfile>n__3d_8c.html</anchorfile>
      <anchor>a6f56419ce39a4f1fcdfc2fe741f6670c</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gadc7a001ab64c72a43243175e56a86264</anchor>
      <arglist>(PHYSICS *object, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position_nb</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga5a40d51963e17af619b6a3c36c687462</anchor>
      <arglist>(PHYSICS *object, int it, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position_reverse</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga7644cdf589832471424103293b68f77b</anchor>
      <arglist>(PHYSICS *object, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position_reverse_nb</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gaa8021a03baa26410f81f6fcdf77da564</anchor>
      <arglist>(PHYSICS *object, int it, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_angle_between</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga523b38d99b808d695819e5d42c91b182</anchor>
      <arglist>(VECTOR3D *vec1, VECTOR3D *vec2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_dot_product</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga08fa4eb6d167cc941fe6cfd5d21b255d</anchor>
      <arglist>(VECTOR3D *vec1, VECTOR3D *vec2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vector_intersect</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gafc35e47713f26cce316cc85dd85354b7</anchor>
      <arglist>(VECTOR3D *p1, VECTOR3D *p2, VECTOR3D *p3, VECTOR3D *p4, VECTOR3D *px)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_normalize</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gab69467787b1b55290585366a20cf82cb</anchor>
      <arglist>(VECTOR3D *vec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_aabb.c</name>
    <path>src/</path>
    <filename>n__aabb_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <includes id="n__aabb_8h" name="n_aabb.h" local="yes" import="no" module="no" objc="no">nilorea/n_aabb.h</includes>
    <member kind="function">
      <type>AABB3D</type>
      <name>createAABB3D</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga43ab841f201f07c553777742c856fb26</anchor>
      <arglist>(AABB_VALUE xMin, AABB_VALUE yMin, AABB_VALUE zMin, AABB_VALUE xMax, AABB_VALUE yMax, AABB_VALUE zMax)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doAABB3DsIntersect</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga11fb7be12781cebf853e040aa6011877</anchor>
      <arglist>(AABB3D box1, AABB3D box2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPointInsideAABB3D</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga2c1c28d9cb85d4507f492bab1bfa136c</anchor>
      <arglist>(AABB3D box, AABB_VALUE x, AABB_VALUE y, AABB_VALUE z)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_allegro5.c</name>
    <path>src/</path>
    <filename>n__allegro5_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__allegro5_8h" name="n_allegro5.h" local="yes" import="no" module="no" objc="no">nilorea/n_allegro5.h</includes>
    <member kind="function">
      <type>int</type>
      <name>get_keyboard</name>
      <anchorfile>group___a_l_l_e_g_r_o5.html</anchorfile>
      <anchor>ga89b632f62c41b87b68e83a086e302247</anchor>
      <arglist>(ALLEGRO_USTR *str, ALLEGRO_EVENT event)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_anim.c</name>
    <path>src/</path>
    <filename>n__anim_8c.html</filename>
    <includes id="n__anim_8h" name="n_anim.h" local="yes" import="no" module="no" objc="no">nilorea/n_anim.h</includes>
    <member kind="function">
      <type>int</type>
      <name>add_bmp_to_lib</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga4cf34c94b752318abd8d5b856b062a13</anchor>
      <arglist>(ANIM_LIB *lib, unsigned int pos, char *file, char *resfile)</arglist>
    </member>
    <member kind="function">
      <type>ANIM_LIB *</type>
      <name>create_anim_library</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga81c2c337d299fe619c2fada4e261181d</anchor>
      <arglist>(char *name, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delete_bmp_from_lib</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga358bc55590e5dcdecf5ae5299ffd12dc</anchor>
      <arglist>(ANIM_LIB *lib, unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_anim_lib</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>gacbbe4efe3e6f10bd7d47e82a11f62b7b</anchor>
      <arglist>(ANIM_LIB **lib)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>draw_anim</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga4f778dfddf8d3015fe1be3e5a13a636a</anchor>
      <arglist>(ANIM_DATA *data, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_anim</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>gab4c26f5aa2303d73fd7b4a4ff4f3899f</anchor>
      <arglist>(ANIM_DATA *data, unsigned int delta_t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_base64.c</name>
    <path>src/</path>
    <filename>n__base64_8c.html</filename>
    <includes id="n__base64_8h" name="n_base64.h" local="yes" import="no" module="no" objc="no">nilorea/n_base64.h</includes>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_base64_decode</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga24442d2563cc006d307273b236d0e515</anchor>
      <arglist>(N_STR *bufcoded)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>n_base64_decode_len</name>
      <anchorfile>n__base64_8c.html</anchorfile>
      <anchor>a0a8167f9f5124e0d83bf2756bd862b20</anchor>
      <arglist>(N_STR *string)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_base64_encode</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga8bf1d83b3f1c485357a9ddc6ee5eb7c4</anchor>
      <arglist>(N_STR *input)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>n_base64_encode_len</name>
      <anchorfile>n__base64_8c.html</anchorfile>
      <anchor>aba24b7f11efe3aa9ea8b5ab7d0785102</anchor>
      <arglist>(N_STR *string)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>n_isalpha</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga7dfc6b4d37b7a367238da83f2839e9e4</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>n_islower</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga4754b8b773a929548fe2aad386859bb5</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>n_isupper</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga2fd423ac5899e997358227574358a42e</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_tolower</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga06f46dcc4684717a4fcc1b3aa0d43c57</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_toupper</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga39ec073874feeaf9f85384015acd8a58</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>ascii_lower_case_lookup_table</name>
      <anchorfile>n__base64_8c.html</anchorfile>
      <anchor>a9e82258fb3fbed1c016fde5c77648ff2</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>ascii_upper_case_lookup_table</name>
      <anchorfile>n__base64_8c.html</anchorfile>
      <anchor>a4f36c81132bc1b9f45d4fb25b2550951</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char</type>
      <name>basis_64</name>
      <anchorfile>n__base64_8c.html</anchorfile>
      <anchor>a21ccd9b495f89bc74ce84137936db6ae</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>pr2six</name>
      <anchorfile>n__base64_8c.html</anchorfile>
      <anchor>af341fd6a080f023febc767f74ce23f96</anchor>
      <arglist>[256]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_common.c</name>
    <path>src/</path>
    <filename>n__common_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <member kind="function">
      <type>int</type>
      <name>file_exist</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gae51b692bea533096e5839a3dc5500780</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_computer_name</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga67485891fad679694c6c74285c47c246</anchor>
      <arglist>(char *computer_name, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_prog_dir</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab277acf7b61b1226c3cbb1811c1359e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_prog_name</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga121f484b21cd361e6fa84b1720762922</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log_environment</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga0b2464c1461e1fda88346e99bcbd7a9f</anchor>
      <arglist>(int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_abort</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gacaf9e791d31308d5d43c0322b03ee322</anchor>
      <arglist>(char const *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_daemonize</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gad5e50936af9a3d6e4a23b33a90d7c66c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_daemonize_ex</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gac6d3a290c95fa17ddeea32956cc9b16b</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>n_get_file_extension</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga846a5d59871d3009ee6a7b158745b804</anchor>
      <arglist>(char path[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>N_HIDE_STR</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga34a5c334f51b8d04689aae82258992b1</anchor>
      <arglist>(char *buf,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sigchld_handler</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga7ec144a9a628442e52b80210bc8364ad</anchor>
      <arglist>(int sig)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sigchld_handler_installer</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gacc0e695cf13f0eb3a00d5a1304508a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>pid_t</type>
      <name>system_nb</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga7f94f8b09f7295ebe555617ffdac59db</anchor>
      <arglist>(const char *command, int *infp, int *outfp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_config_file.c</name>
    <path>src/</path>
    <filename>n__config__file_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__config__file_8h" name="n_config_file.h" local="yes" import="no" module="no" objc="no">nilorea/n_config_file.h</includes>
    <includes id="n__pcre_8h" name="n_pcre.h" local="yes" import="no" module="no" objc="no">nilorea/n_pcre.h</includes>
    <member kind="function">
      <type>int</type>
      <name>destroy_config_file</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga5c6e573bf39871c909dcd71c9bcc13b4</anchor>
      <arglist>(CONFIG_FILE **cfg_file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy_config_file_section</name>
      <anchorfile>n__config__file_8c.html</anchorfile>
      <anchor>abd0a2133de663a5b572ffa99e5273ec2</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_no_null</name>
      <anchorfile>n__config__file_8c.html</anchorfile>
      <anchor>a8fb4312251d06de40484b38dd65c6021</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_config_section_value</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga8a974512566d42e72223876c8af53377</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *section_name, size_t section_position, char *entry, size_t entry_position)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nb_config_file_sections</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>gad45c7fe12c0acb44f6f54befa3e364b9</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *section_name)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nb_config_file_sections_entries</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga1d4b7fa2d464616f3a5ac0641e952804</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *section_name, size_t section_position, char *entry)</arglist>
    </member>
    <member kind="function">
      <type>CONFIG_FILE *</type>
      <name>load_config_file</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga0206fadb78039ac602fc0696b27b85a6</anchor>
      <arglist>(char *filename, int *errors)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_config_file</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga1b22438cb7d7a274b748d49e555f7f50</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_crypto.c</name>
    <path>src/</path>
    <filename>n__crypto_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__base64_8h" name="n_base64.h" local="yes" import="no" module="no" objc="no">nilorea/n_base64.h</includes>
    <includes id="n__crypto_8h" name="n_crypto.h" local="yes" import="no" module="no" objc="no">nilorea/n_crypto.h</includes>
    <includes id="n__thread__pool_8h" name="n_thread_pool.h" local="yes" import="no" module="no" objc="no">nilorea/n_thread_pool.h</includes>
    <class kind="struct">CYPHER_PARAM</class>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_get_cpu_id</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>adb8f84a50c4f25cbfb39be00c5c5d49f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_get_current_dir_hd_serial</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>a85708bfc639247dc451c8b2d03b2356b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_cypher</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>a1a84fce40cac83636b8ea3779ebef792</anchor>
      <arglist>(N_STR *input, N_STR *key, bool encipher, bool in_place)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>n_vigenere_cypher_thread</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>a3fa3c9bd1472d82c4f6552a632f11aaf</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_decode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga2e26b8c1f8bdf96057904eaa1c7bc92c</anchor>
      <arglist>(N_STR *string, N_STR *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_decode_file</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gaad821764c722b2e469ab5c54278c6023</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_decode_file_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga1be4bd0f3b4410ebe4cd4240b804338c</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_decode_in_place</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>a45f11e66b126e59b4fda77b3f08ddb6f</anchor>
      <arglist>(N_STR *string, N_STR *key)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_decode_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga6c11d1e142ec3b1617128d1425f46174</anchor>
      <arglist>(N_STR *input_data, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_encode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga91ad0ccfda4700a5bc1a7a85488d60b2</anchor>
      <arglist>(N_STR *string, N_STR *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_encode_file</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga95f517e677af864def2a14af9196d596</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_encode_file_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga5ed58e0fb772ca9e2a8b9679b29c08d7</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_encode_in_place</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>acbbe612210363e374f1509679a83b47f</anchor>
      <arglist>(N_STR *string, N_STR *key)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_encode_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga08551983c3b919de08ad1c35e0819d28</anchor>
      <arglist>(N_STR *input_data, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_get_answer</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga39a0e0c7d46e5adece091d682fcc87bd</anchor>
      <arglist>(N_STR *root_key, N_STR *question)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_get_question</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gae9d3c2b1247c0c79267521bcfcaf9079</anchor>
      <arglist>(size_t question_size)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_get_rootkey</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gaced1d3aa9c799ea8bde399f864f3c8fa</anchor>
      <arglist>(size_t rootkey_size)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_quick_decode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gaf9f2b64e60dd5e79279cc32ac7ff8886</anchor>
      <arglist>(N_STR *encoded_data)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_quick_encode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga26872672f67b7c89b6fa9fa01d59ac00</anchor>
      <arglist>(N_STR *decoded_data)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>__internal_root_key</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>a0fe8080a70a551b205a4c304f1f843aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_exceptions.c</name>
    <path>src/</path>
    <filename>n__exceptions_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__exceptions_8h" name="n_exceptions.h" local="yes" import="no" module="no" objc="no">nilorea/n_exceptions.h</includes>
    <member kind="function">
      <type>void</type>
      <name>pop_exception</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga040ac853d9c68fa155c04bc20c51e3cb</anchor>
      <arglist>(int ex)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_exception</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gad0ba3a133eaeab182a4ed4e64dd44a85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>ExceptionContextList *</type>
      <name>__Exceptions</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga8778d850622ce846f599b34fa2f40cc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_files.c</name>
    <path>src/</path>
    <filename>n__files_8c.html</filename>
    <includes id="n__files_8h" name="n_files.h" local="yes" import="no" module="no" objc="no">nilorea/n_files.h</includes>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>n_comp_file_info</name>
      <anchorfile>n__files_8c.html</anchorfile>
      <anchor>acb6b3e33527dce52ec9baccbd4b764fd</anchor>
      <arglist>(const void *a, const void *b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_free_file_info</name>
      <anchorfile>group___n___f_i_l_e_s.html</anchorfile>
      <anchor>gaba9ea91ca9b32e1690af2345a0bc1391</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_scan_dir</name>
      <anchorfile>group___n___f_i_l_e_s.html</anchorfile>
      <anchor>gab9ee9adcfef9402898e287664829ceef</anchor>
      <arglist>(const char *dir, LIST *result, const int recurse)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_fluids.c</name>
    <path>src/</path>
    <filename>n__fluids_8c.html</filename>
    <includes id="n__fluids_8h" name="n_fluids.h" local="yes" import="no" module="no" objc="no">nilorea/n_fluids.h</includes>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__thread__pool_8h" name="n_thread_pool.h" local="yes" import="no" module="no" objc="no">nilorea/n_thread_pool.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>N_FLUID_S_FIELD</name>
      <anchorfile>n__fluids_8c.html</anchorfile>
      <anchor>a26b9e6480e66f75ad818bebd310acad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_FLUID_U_FIELD</name>
      <anchorfile>n__fluids_8c.html</anchorfile>
      <anchor>a5f21be36adf4458c89a404973aacee29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_FLUID_V_FIELD</name>
      <anchorfile>n__fluids_8c.html</anchorfile>
      <anchor>ab91141c925412f0c12c88b3ff2479a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_n_fluid</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gaed3b9ded2024759357ae1ba942f978c2</anchor>
      <arglist>(N_FLUID **fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_advectSmoke</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga809d22be5668d07181fb9999b52bf56f</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>n_fluid_advectSmoke_proc</name>
      <anchorfile>n__fluids_8c.html</anchorfile>
      <anchor>a8ae7d07769b347c3cfb509e1144caa58</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_advectVel</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gafb7618eec92414d3d74933b4e982fc62</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>n_fluid_advectVel_proc</name>
      <anchorfile>n__fluids_8c.html</anchorfile>
      <anchor>a84a742c3442bc602d59619e8cfbc550a</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>n_fluid_avgU</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga6d61b152b1deafabfb977b7d3181f70d</anchor>
      <arglist>(N_FLUID *fluid, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>n_fluid_avgV</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga09cbf3ce58daef2dc1d874d1571d0898</anchor>
      <arglist>(N_FLUID *fluid, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_draw</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga386df773d1b7d98ffd6c1d2f98cf5091</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_extrapolate</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga7f32b5a83ee253026673b6baef3ab4c3</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>ALLEGRO_COLOR</type>
      <name>n_fluid_getSciColor</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga7f30f7cfedc3a79d484ad155a96f1db0</anchor>
      <arglist>(N_FLUID *fluid, double val, double minVal, double maxVal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_integrate</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gadfa079fd795393db4c9ed68aa7338ca2</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>n_fluid_integrate_proc</name>
      <anchorfile>n__fluids_8c.html</anchorfile>
      <anchor>a802b8f1e0598790c6ecd3f41e44a0310</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_resetObstacles</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gacb82683a9afbf14c7b2b043451d4cffa</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>n_fluid_sampleField</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga746c88f5fa990a5d43602d595b587437</anchor>
      <arglist>(N_FLUID *fluid, double x, double y, uint32_t field)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_setObstacle</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gadfddee52df3d3270958f38d8127c6672</anchor>
      <arglist>(N_FLUID *fluid, double x, double y, double vx, double vy, double r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_setObstacleFromBitmap</name>
      <anchorfile>n__fluids_8c.html</anchorfile>
      <anchor>aa24ed17d46141c3efb69fdda914a1b1d</anchor>
      <arglist>(N_FLUID *fluid, ALLEGRO_BITMAP *bitmap, double x, double y, double vx, double vy, double r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_simulate</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga690a4558c5b3d5eafdf1d7b64af5858f</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_simulate_threaded</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga580ecc1e497035ce47b272309fcf22c8</anchor>
      <arglist>(N_FLUID *fluid, THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_solveIncompressibility</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga8e25eb0a7b98e8ccc135703f584db37c</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>n_fluid_solveIncompressibility_proc</name>
      <anchorfile>n__fluids_8c.html</anchorfile>
      <anchor>ad2b5a7b06583b06e8c3adff116853e7d</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_memset</name>
      <anchorfile>n__fluids_8c.html</anchorfile>
      <anchor>a10e45243c74f39c52d2ebf2d4aa1387f</anchor>
      <arglist>(void *dst, void *val, size_t size, size_t count)</arglist>
    </member>
    <member kind="function">
      <type>N_FLUID *</type>
      <name>new_n_fluid</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gaff6f6732139e8c294f6affe1d594e8d2</anchor>
      <arglist>(double density, double gravity, size_t numIters, double dt, double overRelaxation, size_t sx, size_t sy)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_games.c</name>
    <path>src/</path>
    <filename>n__games_8c.html</filename>
    <includes id="n__games_8h" name="n_games.h" local="yes" import="no" module="no" objc="no">nilorea/n_games.h</includes>
    <member kind="function">
      <type>void</type>
      <name>destroy_game_env</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ga47fd0bb7f6db4234af06b5ebafb18837</anchor>
      <arglist>(GAME_ENV **game)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_game_env</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>gab086402feba2e0fe1845453a8d899bf6</anchor>
      <arglist>(GAME_ENV **game)</arglist>
    </member>
    <member kind="function">
      <type>GAME_ENV *</type>
      <name>load_game_config</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>gaa343f04284422e7cfafa561b82c8f4f3</anchor>
      <arglist>(char *config_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_gui.c</name>
    <path>src/</path>
    <filename>n__gui_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <includes id="n__gui_8h" name="n_gui.h" local="yes" import="no" module="no" objc="no">nilorea/n_gui.h</includes>
    <member kind="function">
      <type>void</type>
      <name>n_gui_init_tokenizer</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gae99c392c9fb96c015d63b94c85daa1b3</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer, const char *input)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_gui_is_eof</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga8d8625d7ac14319879e0047d7136f3a2</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer)</arglist>
    </member>
    <member kind="function">
      <type>N_GUI_DIALOG *</type>
      <name>n_gui_load_dialog</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gaa001a67d3dfbe86cd0681e7754d3b7c0</anchor>
      <arglist>(char *html, char *css)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_gui_next_char</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga1f0db0c4346487cfd4bd609490ba6d4a</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer)</arglist>
    </member>
    <member kind="function">
      <type>N_GUI_TOKEN</type>
      <name>n_gui_next_token</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gafcfdcbab5869f058444bb97336349281</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer, bool *inside_open_tag)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_gui_peek_char</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga9f1d350ceb9a6bc872de0dc60b4501fe</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_gui_print_token</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga32d003db7bacada0232ee36eb8b544d6</anchor>
      <arglist>(N_GUI_TOKEN token)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>__N_GUI_TOKEN</name>
      <anchorfile>n__gui_8c.html</anchorfile>
      <anchor>a120632e17ef37cdbc9be9b52ee985afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>N_ENUM_N_GUI_TOKEN</name>
      <anchorfile>n__gui_8c.html</anchorfile>
      <anchor>a0ad068bdb9c8c69bccc717e3b005fe64</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_hash.c</name>
    <path>src/</path>
    <filename>n__hash_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__hash_8h" name="n_hash.h" local="yes" import="no" module="no" objc="no">nilorea/n_hash.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BIG_CONSTANT</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a8e0f90a6ea3d3db65033b8ace70cb65a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BYTESWAP32</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>ab55feb41f784e836c8af8902e80e6e04</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BYTESWAP64</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>ab2d851980460d74a294c99768e68f45c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTL32</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>aff6ce4cae0564b039bbb4ef0cbdc0032</anchor>
      <arglist>(x, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTL64</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>afc503618cf150b0cf9e30834e0c058ee</anchor>
      <arglist>(x, r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_destroy_ht</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a0ee7e0fa87da033f857c04dae6f1586a</anchor>
      <arglist>(HASH_TABLE **table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_destroy_ht_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>ab9d1b16f848c310836772818278a4014</anchor>
      <arglist>(HASH_TABLE **table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_empty_ht</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a883490d95c386d9d82a7306663a6c2ce</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_empty_ht_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>abfa263c3762bcc52625fc3d33ba20014</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>_ht_check_trie_divergence</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a4f3f3afe1afc375bf29a7fd1db8175db</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_depth_first_search</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a35d5a23776c64cb68260bbd0c4138ee2</anchor>
      <arglist>(HASH_NODE *node, LIST *results)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>_ht_find_longest_prefix_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a7334b7b4bcc0b3ce98219def7a057117</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_get_double</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a13fc7fe04372ccba413005ec04eb3ade</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_get_double_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>aca7fef9e0001642327f8325350af577e</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_get_int</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a6904974321e81340d5402f06f15e87a4</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_get_int_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a3fefeb4d1588c46d6b3a9dabbeac8cc7</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE *val)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>_ht_get_node</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>ab250f9a82c42e7eb223aa4056f145055</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>_ht_get_node_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a53aa7d8ce768fab934f0dcad3d4bb8a4</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_get_ptr</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a334f88b1e7a0eba784c010d5d2a66018</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_get_ptr_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a77e51ca7379cfcc84c8385bb5634d79d</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_get_string</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a7feb60889c5c212a63410df760502d79</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_get_string_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a4013f978ea8aa0adc818bf75e2fbd33b</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_is_leaf_node_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a9b32982367d5bb9b83281b582e8c62df</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>_ht_new_double_node</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a16c585985d090707ce94a673307db36f</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double value)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>_ht_new_int_node</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a74243bf26a2a4c4c9efc6229fefba07e</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE value)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>_ht_new_node</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a71adc2534aeb45d23b6622628be06c1d</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>_ht_new_node_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a346ab250b00afe7a47d183a4547725de</anchor>
      <arglist>(HASH_TABLE *table, const char key)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>_ht_new_ptr_node</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a636e3e3d341e0d97875601ffda9b5f7e</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void *value, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>_ht_new_string_node</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>af782f210f3269b1d595d9a12fffa9d58</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *value)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>_ht_new_string_ptr_node</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a26853862f1fc9106bc7aa76f0a6eccb8</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_ht_node_destroy</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a013153fa30199bbcaf5f92890ae97ba8</anchor>
      <arglist>(void *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_ht_print</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a719f4d3d6315d1118478bf66bbf3d7d4</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_ht_print_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a3ea3a506fda15848cf7c87b847851294</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_ht_print_trie_helper</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a4bd19fa8c4204b765b769c88bddfc0bc</anchor>
      <arglist>(HASH_TABLE *table, HASH_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_put_double</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a1baf8e5b33f28bf3edf73a2cb617d97c</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_put_double_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>aad082d031aea568f9fd10b87969d7253</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_put_int</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>afcbfa7c812447561aa0b6692557b961b</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_put_int_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>ace53a71922942c051353777ee9ebd803</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_put_ptr</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a7083cb547ab42760d285edf2108c2a2b</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_put_ptr_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>abba09fc62efeab3c99cb312b4d5fdd6b</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_put_string</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a6317d7cd34532ec65997c3275aa379e1</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_put_string_ptr</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>aa173ffa5f20daee4f0178c97e4f01303</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_put_string_ptr_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a6ff4db1b912c1c4b396f925b5a63d2ea</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_put_string_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a2bbc773501f85aabc6ad67973943342a</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_remove</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>ad1652edf0584ab710e365d589e05646d</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_ht_remove_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>ae478eab90d1a7baded6516c7739cfc9b</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>LIST *</type>
      <name>_ht_search</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>af5e4567a16f469d013410e8cf675a28c</anchor>
      <arglist>(HASH_TABLE *table, int(*node_is_matching)(HASH_NODE *node))</arglist>
    </member>
    <member kind="function">
      <type>LIST *</type>
      <name>_ht_search_trie</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>aa80d786e98105e52ebc7246fc91ff33f</anchor>
      <arglist>(HASH_TABLE *table, int(*node_is_matching)(HASH_NODE *node))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_ht_search_trie_helper</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>af9f6e937f781df402b5ec4ac788f6f6e</anchor>
      <arglist>(LIST *results, HASH_NODE *node, int(*node_is_matching)(HASH_NODE *node))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga22a943135dbcdb1611b40ce0547111ce</anchor>
      <arglist>(HASH_TABLE **table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga5d2235e91b2b6b70129246897442f8d5</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>FORCE_INLINE uint32_t</type>
      <name>fmix32</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a765c15db8766f1a0b049d8a210ad8f60</anchor>
      <arglist>(uint32_t h)</arglist>
    </member>
    <member kind="function">
      <type>FORCE_INLINE uint64_t</type>
      <name>fmix64</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a0445240e59cb66d84972dd14ec3d623e</anchor>
      <arglist>(uint64_t k)</arglist>
    </member>
    <member kind="function">
      <type>FORCE_INLINE uint32_t</type>
      <name>getblock32</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a1d71798edacd2952737df255b299fbe4</anchor>
      <arglist>(const uint32_t *p, const size_t i)</arglist>
    </member>
    <member kind="function">
      <type>FORCE_INLINE uint64_t</type>
      <name>getblock64</name>
      <anchorfile>n__hash_8c.html</anchorfile>
      <anchor>a44c22c3756bf4a3cb4740dd461ef4c08</anchor>
      <arglist>(const uint64_t *p, const size_t i)</arglist>
    </member>
    <member kind="function">
      <type>LIST *</type>
      <name>ht_get_completion_list</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga65d64120ef6c7fc1a08e6870b00996db</anchor>
      <arglist>(HASH_TABLE *table, const char *keybud, size_t max_results)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_double</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga502f7dbc79e94de757ef1cab4fb73559</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_int</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2ad18ed107f9e01ff8c7ef666293034f</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE *val)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>ht_get_node</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gab06eec66b0398db0948d911383816277</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>ht_get_node_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2defd7b222fb9cf155d0287b56e90c50</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ht_get_optimal_size</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga77abac901ee0e46a85c45c4203a2e44b</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga009f66a508dcea120e0cd2b34805e5a2</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_ptr_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gafc8e7f91865edfe1cb18639f16e72c46</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value, void **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_string</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga833854027692b398d675388aa548e892</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_table_collision_percentage</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga484b7c7f330914d21fafbf582713fc07</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>ht_node_type</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga1392981a507905d028136bc0b92aa48b</anchor>
      <arglist>(HASH_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_optimize</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gadf9786c2b5844999ebb011ab56746047</anchor>
      <arglist>(HASH_TABLE **table)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ht_print</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga62ef2a517efcbc464f0103995f28c3e8</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_double</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga6d77292f765050e2afc7735218ff242b</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_int</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga97d04c1584c2c3a794143a6362fd96c8</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gacca20eb3be4375556ac43122405dceda</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_ptr_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga0ee0ebca02acb68a78c91fc8dfb30ef3</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value, void *val, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_string</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga90fe9fc425a2077cffd1f4aa68cb6c6a</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_string_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaee367d5c4ee2479096ab943cacb1464e</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_remove</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2dc87273d3e6b3492d88f2bd7288102e</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_remove_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga9fc743323b4302e50c95df26ca57d468</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_resize</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga941824c3bad16549d062908475ff36a6</anchor>
      <arglist>(HASH_TABLE **table, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>LIST *</type>
      <name>ht_search</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga16446a54727b375dfd0c92704dc39995</anchor>
      <arglist>(HASH_TABLE *table, int(*node_is_matching)(HASH_NODE *node))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MurmurHash3_x64_128</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga9bac809d8768dc7f07d1049be596f931</anchor>
      <arglist>(const void *key, const size_t len, const uint64_t seed, void *out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MurmurHash3_x86_128</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga9485f626bdfb456f4ad53453f635b4e9</anchor>
      <arglist>(const void *key, const size_t len, const uint32_t seed, void *out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MurmurHash3_x86_32</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaed0f585f6848a774ec3d58a89a7940f0</anchor>
      <arglist>(const void *key, const size_t len, const uint32_t seed, void *out)</arglist>
    </member>
    <member kind="function">
      <type>HASH_TABLE *</type>
      <name>new_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga3890b11d41766a859d4e55976ec02acb</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>HASH_TABLE *</type>
      <name>new_ht_trie</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gab4f188252880ce2d4f5b1082775b7385</anchor>
      <arglist>(size_t alphabet_length, size_t alphabet_offset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_iso_engine.c</name>
    <path>src/</path>
    <filename>n__iso__engine_8c.html</filename>
    <includes id="n__iso__engine_8h" name="n_iso_engine.h" local="yes" import="no" module="no" objc="no">nilorea/n_iso_engine.h</includes>
    <member kind="function">
      <type>int</type>
      <name>camera_to_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga525e12d4a6810091df368bebfead7432</anchor>
      <arglist>(MAP **map, int tx, int ty, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>camera_to_scr</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga78d7a5ad73f85f937963b3619f65b0d7</anchor>
      <arglist>(MAP **map, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>create_empty_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gafbd6e8d63e4a9bffb9bae939e6f33d95</anchor>
      <arglist>(MAP **map, char *name, int XSIZE, int YSIZE, int TILEW, int TILEH, int nbmaxobjects, int nbmaxgroup, int nbmaxanims, int nbtiles, int nbanims)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>draw_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gadbfcc4dbd27990aa04aa68b3434480ef</anchor>
      <arglist>(MAP *map, BITMAP *bmp, int destx, int desty, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gafa40b1cd0683fd3a0088d759b8f4a57b</anchor>
      <arglist>(MAP **map)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_value</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga2021990e7c7fa6c4589752a771aa48f3</anchor>
      <arglist>(MAP *map, int type, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga4d6c75959391f3afd98d81a1773ffe84</anchor>
      <arglist>(MAP **map, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>save_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga045b27c2f11572951f654b62ede9baa0</anchor>
      <arglist>(MAP *map, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ScreenToMap</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gadfbec14d5cfbe60a7034d59022a97cb3</anchor>
      <arglist>(int mx, int my, int *Tilex, int *Tiley, BITMAP *mousemap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_value</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga8366c42e9ace1872eaad8efda0e9a244</anchor>
      <arglist>(MAP *map, int type, int x, int y, int value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_kafka.c</name>
    <path>src/</path>
    <filename>n__kafka_8c.html</filename>
    <includes id="n__kafka_8h" name="n_kafka.h" local="yes" import="no" module="no" objc="no">nilorea/n_kafka.h</includes>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__base64_8h" name="n_base64.h" local="yes" import="no" module="no" objc="no">nilorea/n_base64.h</includes>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_add_header</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga9e626e04be1ebeaf66f4690ddf9ab996</anchor>
      <arglist>(N_KAFKA_EVENT *event, N_STR *key, N_STR *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_add_header_ex</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga02c9289324eed7dae0f404f128a2a626</anchor>
      <arglist>(N_KAFKA_EVENT *event, char *key, size_t key_length, char *value, size_t value_length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_kafka_delete</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gafe936c186c71e469556dcdb352d94697</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>n_kafka_delivery_message_callback</name>
      <anchorfile>n__kafka_8c.html</anchorfile>
      <anchor>a52d4abf5391647f88c510ac1c1fd7c35</anchor>
      <arglist>(rd_kafka_t *rk, const rd_kafka_message_t *rkmessage, void *opaque)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_dump_unprocessed</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga09d26dcdf88d9ed197b887ac73aac5ec</anchor>
      <arglist>(N_KAFKA *kafka, char *directory)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_event_destroy</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga7a0a6d08bd00098b411d243c65534aa6</anchor>
      <arglist>(N_KAFKA_EVENT **event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_kafka_event_destroy_ptr</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga84613bb586cff1a0584656556b5ad267</anchor>
      <arglist>(void *event_ptr)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_get_event</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga0e9dae2d98bf5324af1b460b2599f1c7</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>n_kafka_get_schema_from_char</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga2bc6a0682f46b656bba51e8ee29b43b9</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>n_kafka_get_schema_from_nstr</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gab21424947e9b6e88a8adcd0488449899</anchor>
      <arglist>(N_STR *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_get_status</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gab453f1e6a379817d36d540d41ec377dd</anchor>
      <arglist>(N_KAFKA *kafka, int *nb_queued, int *nb_waiting, int *nb_error)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA *</type>
      <name>n_kafka_load_config</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga4cd1e248364550d5c17f6320ff68d047</anchor>
      <arglist>(char *config_file, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_load_unprocessed</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga85fbd895edbc1e30be58e8c52c33e329</anchor>
      <arglist>(N_KAFKA *kafka, char *directory)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA *</type>
      <name>n_kafka_new</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gae6d98c08b5722169f89ed163da77a610</anchor>
      <arglist>(int64_t poll_interval, int64_t poll_timeout, size_t errstr_len)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gac903845a2fb184abee410a713c3890f9</anchor>
      <arglist>(int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event_from_char</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaaf3a94133f843704a780b74aa03ed7ca</anchor>
      <arglist>(char *string, size_t written, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event_from_file</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gae1089b7890f335af01618cfa736b2022</anchor>
      <arglist>(char *filename, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event_from_string</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaff933a80c25dd942e8363ea19edcf551</anchor>
      <arglist>(N_STR *string, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_new_headers</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga25ac2b613c382318a74e9076b7336349</anchor>
      <arglist>(N_KAFKA_EVENT *event, size_t count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_poll</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga6553559587621a3667ed71565db20926</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>n_kafka_pooling_thread</name>
      <anchorfile>n__kafka_8c.html</anchorfile>
      <anchor>a2e5d21cfda507e07123f9961434131dc</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_produce</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaad8abd310e8055d6f99dacc841e5bde8</anchor>
      <arglist>(N_KAFKA *kafka, N_KAFKA_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_produce_ex</name>
      <anchorfile>n__kafka_8c.html</anchorfile>
      <anchor>abfb87a1648bdc33d2112bc2080342ec3</anchor>
      <arglist>(N_KAFKA *kafka, N_KAFKA_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_put_schema_in_char</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga6167f6e8b0e9d485797bc524162cbf3f</anchor>
      <arglist>(char *string, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_put_schema_in_nstr</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga365ccb4d2d1601cd9d7c11fcf4acc1c9</anchor>
      <arglist>(N_STR *string, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_start_pooling_thread</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gab5930c8ff78f4a853b5a5c140414aec0</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_stop_pooling_thread</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaa5e76f5452306e99a18eb31d59aa4df1</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_list.c</name>
    <path>src/</path>
    <filename>n__list_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">nilorea/n_list.h</includes>
    <member kind="function">
      <type>int</type>
      <name>list_destroy</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga90d32fef68ce6f3ec0a7b4085690c755</anchor>
      <arglist>(LIST **list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_empty</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga1dafe7a250ddad51fadd375f057287e7</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_empty_with_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gae77e34ac35b77e9d1b3124536aa77722</anchor>
      <arglist>(LIST *list, void(*free_fnct)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_node_pop</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga995d2bd9082e103a8dec39958e3a7eb7</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_node_push</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gafdc5e3efd8a9244161b52fcb24760b0e</anchor>
      <arglist>(LIST *list, LIST_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_node_shift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga65791a797732c74dc66948a014479328</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_node_unshift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga50d70b3c943c22fb97d50801a8bd8381</anchor>
      <arglist>(LIST *list, LIST_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>list_pop_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga0a1ce227da1f0c6bac9cd02e2d6b36c0</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_push</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga4eab319289a83524639ee5e9f0441fdf</anchor>
      <arglist>(LIST *list, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_push_sorted</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gae582df4f7b31ccc5a6a026ffd8ea9555</anchor>
      <arglist>(LIST *list, void *ptr, int(*comparator)(const void *a, const void *b), void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_search</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gae009d6d3c835a2affb99071ea8457803</anchor>
      <arglist>(LIST *list, void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_search_with_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gaecb20955816170bab5035b81e98e043d</anchor>
      <arglist>(LIST *list, int(*checkfunk)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>list_shift_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga12076f8c3ab2687b6891bb6ee224a76e</anchor>
      <arglist>(LIST *list, char *file, size_t line)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_unshift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga65687bd547104e185bad1b7da5cb0d98</anchor>
      <arglist>(LIST *list, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_unshift_sorted</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga98e4e6e168d82f062e987ef578ce8e43</anchor>
      <arglist>(LIST *list, void *ptr, int(*comparator)(const void *a, const void *b), void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>new_list_node</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga678e828550efc8e64a836bb8c713c2f4</anchor>
      <arglist>(void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>remove_list_node_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gabd7f04c5a1cd8307c0f289dcccdb5a41</anchor>
      <arglist>(LIST *list, LIST_NODE *node)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_log.c</name>
    <path>src/</path>
    <filename>n__log_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <class kind="struct">LOG_LEVELS</class>
    <member kind="function">
      <type>void</type>
      <name>_n_log</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gafbbbfcb9063b9f1454a499dbf98f7a56</anchor>
      <arglist>(int level, const char *file, const char *func, int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_vscprintf_so</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>afe6a9c3590b857b2efb7a03938a44d5d</anchor>
      <arglist>(const char *format, va_list pargs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>asprintf</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>a6bf15f4f2f46c7238e58afb2ff61f1c4</anchor>
      <arglist>(char *strp[], const char *fmt,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>close_safe_logging</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gab0f29a8f3d807e2738376cd0bd657eb0</anchor>
      <arglist>(TS_LOG *log)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close_sysjrnl</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga6b48448b4bb689cc55c6a7267daf77ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>get_log_file</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga2ff7ac3ed2362bf2820e1639b4ddaf8f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_log_level</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gafeea44ab08778cbff68e91e831d44112</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>open_safe_logging</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga51d76a6d03860ab048a2f09eabc27f9a</anchor>
      <arglist>(TS_LOG **log, char *pathname, char *opt)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>open_sysjrnl</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga669c0bbf1e87d5531b6432ae87c46648</anchor>
      <arglist>(char *identity)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_log_file</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gac83aa9829ddf0d169e2890ef63052b52</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_log_level</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gacad9b2d55788f46ddde811c986ead9ae</anchor>
      <arglist>(const int log_level)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vasprintf</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>a5ec7fd90ebe6015636bce974c192c86a</anchor>
      <arglist>(char **strp, const char *fmt, va_list ap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_safe_log</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga4351d7c5fb7f3464480aebb763b70d69</anchor>
      <arglist>(TS_LOG *log, char *pat,...)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static FILE *</type>
      <name>log_file</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>ab936051f5aaca44c6c3c41dee0d19c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>LOG_LEVEL</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>a3ecebc9d2fcb9f207a3373191a0ca251</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>LOG_TYPE</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>a538d7688bbf77876683ab43e3632b204</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static LOG_LEVELS</type>
      <name>prioritynames</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>a186eba90ff80001df254696dd2867cb8</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>proc_name</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>a2935a9f42014b138d8e8cf7de161450c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_network.c</name>
    <path>src/</path>
    <filename>n__network_8c.html</filename>
    <includes id="n__network_8h" name="n_network.h" local="yes" import="no" module="no" objc="no">nilorea/n_network.h</includes>
    <includes id="n__network__msg_8h" name="n_network_msg.h" local="yes" import="no" module="no" objc="no">nilorea/n_network_msg.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__hash_8h" name="n_hash.h" local="yes" import="no" module="no" objc="no">nilorea/n_hash.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>neterrno</name>
      <anchorfile>n__network_8c.html</anchorfile>
      <anchor>aa852852826e7fd48fa5791e9ac1e32ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>netstrerror</name>
      <anchorfile>n__network_8c.html</anchorfile>
      <anchor>a9fe7353395b6abe8f260a2de5d3b3d96</anchor>
      <arglist>(code)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deplete_send_buffer</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab7f9fd903744c66d570b868df5b3a551</anchor>
      <arglist>(int fd, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_in_addr</name>
      <anchorfile>n__network_8c.html</anchorfile>
      <anchor>ab995208f051c8975b80f13ff2cfeae32</anchor>
      <arglist>(struct sockaddr *sa)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>htonst</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga6b4483c46531db7c0332e747c676beef</anchor>
      <arglist>(size_t value)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK *</type>
      <name>netw_accept_from</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab99090cbf623f95556ea610e690b50d9</anchor>
      <arglist>(NETWORK *from)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK *</type>
      <name>netw_accept_from_ex</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga87057932b1901f9a91c4db49224087e2</anchor>
      <arglist>(NETWORK *from, size_t send_list_limit, size_t recv_list_limit, int blocking, int *retval)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK *</type>
      <name>netw_accept_nonblock_from</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga32138772c399518190a14e81164fc469</anchor>
      <arglist>(NETWORK *from, int blocking)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_add_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga10429a9fa106b61c38f28635242ce502</anchor>
      <arglist>(NETWORK *netw, N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_add_msg_ex</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafd17b2ed695976a31b4cdee5091e0ef7</anchor>
      <arglist>(NETWORK *netw, char *str, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_build_http_response</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga618b55172cced563edc4e4f75ea29285</anchor>
      <arglist>(N_STR **http_response, int status_code, const char *server_name, const char *content_type, char *additional_headers, N_STR *body)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>netw_calculate_urlencoded_size</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab463f75281ea4367b77c0aac5b9f87e8</anchor>
      <arglist>(const char *str, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_close</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gac345c1af1935cebb9ee33edd4c32267a</anchor>
      <arglist>(NETWORK **netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_connect</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae18d52a130063ba1fd0a4cf4b6a2da20</anchor>
      <arglist>(NETWORK **netw, char *host, char *port, int ip_version)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_destroy_pool</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga5c0996a0b85b32d296c4e679a6eb86c2</anchor>
      <arglist>(NETWORK_POOL **netw_pool)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK_HTTP_INFO</type>
      <name>netw_extract_http_info</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gadae857ee9151eda07a25f2d9a4a69d11</anchor>
      <arglist>(char *request)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>netw_extract_http_request_type</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga1727d8db9bda334b79e3ea91347d317e</anchor>
      <arglist>(const char *request)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netw_get_http_date</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga7203513a45a5dd830b38ea07b6659e89</anchor>
      <arglist>(char *buffer, size_t buffer_size)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>netw_get_http_status_message</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaccd9f1e940bb4a1e276a6b33a96ad8db</anchor>
      <arglist>(int status_code)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netw_get_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga0d0992b4eac986d7757ecddbc66e3b90</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_queue_status</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga18c9bccb8219d66dfe7320bc0377ccaa</anchor>
      <arglist>(NETWORK *netw, size_t *nb_to_send, size_t *nb_to_read)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_state</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaaacd43329a330a29b5a93cce28c068e5</anchor>
      <arglist>(NETWORK *netw, uint32_t *state, int *thr_engine_status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netw_get_url_from_http_request</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga9126c0c13477e4ac748aaea5ff984393</anchor>
      <arglist>(const char *request, char *url, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>netw_guess_http_content_type</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaf6513b643e5145f4b5cfbd3fde827873</anchor>
      <arglist>(const char *url)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_info_destroy</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaedf7660c79e8cb0e7521dfa72af2e12e</anchor>
      <arglist>(NETWORK_HTTP_INFO http_request)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_init_wsa</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga22bc4dd5d80c2229c3c43f6d6705dece</anchor>
      <arglist>(int mode, int v1, int v2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_make_listening</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga52afd4f5662c9c8f334d224ae2cdbdf2</anchor>
      <arglist>(NETWORK **netw, char *addr, char *port, int nbpending, int ip_version)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK *</type>
      <name>netw_new</name>
      <anchorfile>n__network_8c.html</anchorfile>
      <anchor>a8ad9fbb10c0881b9e14bb098ffd42210</anchor>
      <arglist>(size_t send_list_limit, size_t recv_list_limit)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK_POOL *</type>
      <name>netw_new_pool</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga4bf42c45211b2a687c7601da41e667cd</anchor>
      <arglist>(size_t nb_min_element)</arglist>
    </member>
    <member kind="function">
      <type>HASH_TABLE *</type>
      <name>netw_parse_post_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaf5d3a953ec9fbfe90406b00a4d96599c</anchor>
      <arglist>(const char *post_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_pool_add</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaed3d4b17261c0ce51cd7671b81b5a007</anchor>
      <arglist>(NETWORK_POOL *netw_pool, NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_pool_broadcast</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga06115ed18a658114104ca6b6823f5d79</anchor>
      <arglist>(NETWORK_POOL *netw_pool, NETWORK *from, N_STR *net_msg)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>netw_pool_nbclients</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga7e971e647011b8e218d2336812fedf67</anchor>
      <arglist>(NETWORK_POOL *netw_pool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netw_pool_netw_close</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab0da745063a55fd79b6252339d5276a4</anchor>
      <arglist>(void *netw_ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_pool_remove</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafc7a91b4be2a997710a2b54037c25168</anchor>
      <arglist>(NETWORK_POOL *netw_pool, NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>netw_recv_func</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga63e06c0450013078c54bb4951e9438ac</anchor>
      <arglist>(void *NET)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>netw_send_func</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga2ef0aab7ff9fb531466a536773b53683</anchor>
      <arglist>(void *NET)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_ident</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae8345266fcf7a23c0e8ffe176b0e086f</anchor>
      <arglist>(NETWORK *netw, int type, int id, N_STR *name, N_STR *passwd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_ping</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gad9588cf27263ecf40f57d3923ccf721a</anchor>
      <arglist>(NETWORK *netw, int type, int id_from, int id_to, int time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_position</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafaf1202a5f56a9f2285fccfbcacb3a6c</anchor>
      <arglist>(NETWORK *netw, int id, double X, double Y, double vx, double vy, double acc_x, double acc_y, int time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_quit</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gac8b30599c7a5c2cce35ee401d7b9d7f1</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_string_to</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gad3b590da2eb8b594c75d1d5f46ba7b45</anchor>
      <arglist>(NETWORK *netw, int id_to, N_STR *name, N_STR *chan, N_STR *txt, int color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_string_to_all</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga02b35de5d3b84e79c4fecbf4cebce603</anchor>
      <arglist>(NETWORK *netw, N_STR *name, N_STR *chan, N_STR *txt, int color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_set</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa8e1fe7978995197f08aa0ef24a76c33</anchor>
      <arglist>(NETWORK *netw, int flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_set_blocking</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gad02f949dd057ae7dd382f03f9364cac0</anchor>
      <arglist>(NETWORK *netw, unsigned long int is_blocking)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_set_user_id</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga4dcf657c3f133ae52d1fa6f2a2e0cd18</anchor>
      <arglist>(NETWORK *netw, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_setsockopt</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa5ed966d8c5844ded549eda41e38c0be</anchor>
      <arglist>(NETWORK *netw, int optname, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_start_thr_engine</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga5ba0555c5ccd261227c3c1216923d563</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_stop_thr_engine</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga29159184519b3129c0154b1a2c2a3e2f</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>netw_urldecode</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae94e940f6d1c780563dd246ffdcc5fd6</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>netw_urlencode</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga2aa0b402c9e72a7f5ce894bc92c377e7</anchor>
      <arglist>(const char *str, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>recv_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga4e2fbd39980f3a1cb7258ec4382f29f7</anchor>
      <arglist>(void *netw, char *buf, uint32_t n)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>recv_php</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaf7a34a0478fe84e296dbdaf9cc618259</anchor>
      <arglist>(SOCKET s, int *_code, char **buf)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>send_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa99961114daea113b78c7fc5e545d592</anchor>
      <arglist>(void *netw, char *buf, uint32_t n)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>send_php</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga250de7b17e4b2ec68e11c48789bbbe00</anchor>
      <arglist>(SOCKET s, int _code, char *buf, int n)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>N_ENUM_netw_code_type</name>
      <anchorfile>n__network_8c.html</anchorfile>
      <anchor>a9333108392cb572a2d4fe17f6c123302</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_network_msg.c</name>
    <path>src/</path>
    <filename>n__network__msg_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__network_8h" name="n_network.h" local="yes" import="no" module="no" objc="no">nilorea/n_network.h</includes>
    <includes id="n__network__msg_8h" name="n_network_msg.h" local="yes" import="no" module="no" objc="no">nilorea/n_network_msg.h</includes>
    <member kind="function">
      <type>int</type>
      <name>add_int_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga9aa63e987d00d99d9a21aec35efecf74</anchor>
      <arglist>(NETW_MSG *msg, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_nb_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gae7c4f1b2c58aabda4856a2f5c782b863</anchor>
      <arglist>(NETW_MSG *msg, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_nstrdup_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga84f36b52e6d9dfe9ca6186c3177f5472</anchor>
      <arglist>(NETW_MSG *msg, N_STR *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_nstrptr_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga53dfbdd3b5d1cfcf387d17b4465e5f3a</anchor>
      <arglist>(NETW_MSG *msg, N_STR *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_strdup_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga196134389f2e0b1493154c73a7133df0</anchor>
      <arglist>(NETW_MSG *msg, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>create_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga62ae674d9de6171bcbd604e68a3b94a9</anchor>
      <arglist>(NETW_MSG **msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delete_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gadcc2854217553f3a4890973873bdf634</anchor>
      <arglist>(NETW_MSG **msg)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>double_swap</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga4f7b627b47a1ee6976089dc4ab0a91b9</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga425d9f110062f063dc2e9af0212b793d</anchor>
      <arglist>(NETW_MSG **msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_int_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gafc6e48e4853310c09174f5ff3dfed85b</anchor>
      <arglist>(NETW_MSG *msg, int *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_nb_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga56c3f927b3d6249eb5aa37a6d27ed225</anchor>
      <arglist>(NETW_MSG *msg, double *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_nstr_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga73be780021c7c875f476ef4e02d2bc1c</anchor>
      <arglist>(NETW_MSG *msg, N_STR **value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_str_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga12c81c5fd507131d3b73bbe71cb47476</anchor>
      <arglist>(NETW_MSG *msg, char **value)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>htond</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga0cf26e3b1e26847bbd66fbd4b4a1a67c</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>NETW_MSG *</type>
      <name>make_msg_from_str</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga3fd01fccdf5fee20c2f0df7429ab3dd7</anchor>
      <arglist>(N_STR *str)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>make_str_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga5145350ad23fa9c0db3057e566d70722</anchor>
      <arglist>(NETW_MSG *msg)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_ident</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga7bae3c3de53204413c7663007ec4a4d7</anchor>
      <arglist>(int type, int id, N_STR *name, N_STR *passwd)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_ping</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaeb5e94070c0ee79ff2d11a707d225c3a</anchor>
      <arglist>(int type, int id_from, int id_to, int time)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_position_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga6d469c5cbc4fdfa266be68a35d10a904</anchor>
      <arglist>(int id, double X, double Y, double vx, double vy, double acc_x, double acc_y, int time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_quit_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaea4cc09810479665c6c7e689dfaecff7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_string_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gafb91c3ea7bfa93212141fa1fe074fb3d</anchor>
      <arglist>(int id_from, int id_to, N_STR *name, N_STR *chan, N_STR *txt, int color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_ident</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaf2d84e34e50db7b3b7aca16c6bdb06f8</anchor>
      <arglist>(N_STR *msg, int *type, int *ident, N_STR **name, N_STR **passwd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_ping</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga525ee81a12f526d55b2b380d9338424e</anchor>
      <arglist>(N_STR *msg, int *type, int *from, int *to, int *time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_position</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga241bf3b1ebc63dd986dfec1b0fe4998b</anchor>
      <arglist>(N_STR *msg, int *id, double *X, double *Y, double *vx, double *vy, double *acc_x, double *acc_y, int *time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_quit</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga601ef18cfe3570caaa81cc43c09004c2</anchor>
      <arglist>(N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_string</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gace220d6339bd8085269ecee2b35126fb</anchor>
      <arglist>(N_STR *msg, int *id, N_STR **name, N_STR **chan, N_STR **txt, int *color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_msg_get_type</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga70abef02e9578c21b5707eecb3750fef</anchor>
      <arglist>(N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ntohd</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaaed102598c4379bd1e0dc78f834972b0</anchor>
      <arglist>(double value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_nodup_log.c</name>
    <path>src/</path>
    <filename>n__nodup__log_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <includes id="n__list_8h" name="n_list.h" local="yes" import="no" module="no" objc="no">nilorea/n_list.h</includes>
    <includes id="n__hash_8h" name="n_hash.h" local="yes" import="no" module="no" objc="no">nilorea/n_hash.h</includes>
    <includes id="n__nodup__log_8h" name="n_nodup_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_nodup_log.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>_GNU_SOURCE</name>
      <anchorfile>n__nodup__log_8c.html</anchorfile>
      <anchor>a369266c24eacffb87046522897a570d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_GNU_SOURCE_WAS_NOT_DEFINED</name>
      <anchorfile>n__nodup__log_8c.html</anchorfile>
      <anchor>ad9e32a3c1e925878eeb956b4ed3b64e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_n_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga650828539395216dd2f4f28da5131c42</anchor>
      <arglist>(int LEVEL, const char *file, const char *func, int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_n_nodup_log_indexed</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>gacbf9e2a1400ab6f00a30186d9a5c4683</anchor>
      <arglist>(int LEVEL, const char *prefix, const char *file, const char *func, int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_n_log_dup</name>
      <anchorfile>n__nodup__log_8c.html</anchorfile>
      <anchor>abd498f389d9af3ed61abe8a27d16c9ee</anchor>
      <arglist>(const char *log, const char *file, const char *func, int line)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>check_n_log_dup_indexed</name>
      <anchorfile>n__nodup__log_8c.html</anchorfile>
      <anchor>a43e324b2382fb23043d7383063fa150f</anchor>
      <arglist>(const char *log, const char *file, const char *func, int line, const char *prefix)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>close_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga46eca069bfff2be6809828df52d1031d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dump_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga38552b9724c76daede8b3c30833e9d09</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_nodup_table</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga823d1d2f22f2279e24d4c5bd927ff322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>get_nodup_indexed_key</name>
      <anchorfile>n__nodup__log_8c.html</anchorfile>
      <anchor>aad87e98f27fbce43793143aaf562590d</anchor>
      <arglist>(const char *file, const char *func, const char *prefix, int line)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>get_nodup_key</name>
      <anchorfile>n__nodup__log_8c.html</anchorfile>
      <anchor>a7ced205f799238a352c2080c2af6b156</anchor>
      <arglist>(const char *file, const char *func, int line)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>gaf9c9b8e129263da15345f428cd73f19e</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static HASH_TABLE *</type>
      <name>_n_nodup_table</name>
      <anchorfile>n__nodup__log_8c.html</anchorfile>
      <anchor>ac3484044fe72c29480f013078bb34e51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_particles.c</name>
    <path>src/</path>
    <filename>n__particles_8c.html</filename>
    <includes id="n__particles_8h" name="n_particles.h" local="yes" import="no" module="no" objc="no">nilorea/n_particles.h</includes>
    <member kind="function">
      <type>int</type>
      <name>add_particle</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gae8252f1cd818ef45e20e7d4c54351d2e</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, int spr, int mode, int lifetime, int size, ALLEGRO_COLOR color, PHYSICS object)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_particle_ex</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gad8c6a1f791072a6485af0439a3c4d94f</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, int spr, int mode, int off_x, int off_y, int lifetime, int size, ALLEGRO_COLOR color, double vx, double vy, double vz, double ax, double ay, double az)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>draw_particle</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga09e19e83e2251d87db737b6b702a7d70</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, double xpos, double ypos, int w, int h, double range)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_particle_system</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga80e275b9835fae499b29b6082c29970c</anchor>
      <arglist>(PARTICLE_SYSTEM **psys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_particle_system</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gaf00630a2c4eaa468e124fe4d9557c825</anchor>
      <arglist>(PARTICLE_SYSTEM **psys, int max, double x, double y, double z, int max_sprites)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>manage_particle</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga8a92ddb62fe9f945d5baed9d22938a10</anchor>
      <arglist>(PARTICLE_SYSTEM *psys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>manage_particle_ex</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga3bd6b6f5b679348fb4d24e0524be4edf</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>move_particles</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga1a20afdfa79e8cc5ee3f214ab34ca96d</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, double vx, double vy, double vz)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_pcre.c</name>
    <path>src/</path>
    <filename>n__pcre_8c.html</filename>
    <includes id="n__pcre_8h" name="n_pcre.h" local="yes" import="no" module="no" objc="no">nilorea/n_pcre.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <member kind="function">
      <type>int</type>
      <name>npcre_clean_match</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ga89e67d2b218e2138a12aaecc2deab8fc</anchor>
      <arglist>(N_PCRE *pcre)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>npcre_delete</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>gaf198eb0bc8c55ac41cc92af8e538ce04</anchor>
      <arglist>(N_PCRE **pcre)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>npcre_match</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ga605b60ef645cf217bd2b3dc548d1d6c2</anchor>
      <arglist>(char *str, N_PCRE *pcre)</arglist>
    </member>
    <member kind="function">
      <type>N_PCRE *</type>
      <name>npcre_new</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ga54f913d2ee09d63de0f06fc1b9439d4a</anchor>
      <arglist>(char *str, int max_cap, int flags)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_signals.c</name>
    <path>src/</path>
    <filename>n__signals_8c.html</filename>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__signals_8h" name="n_signals.h" local="yes" import="no" module="no" objc="no">nilorea/n_signals.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>LOGFPRT</name>
      <anchorfile>n__signals_8c.html</anchorfile>
      <anchor>a2ed581048d5a3c6c31a83dbbfd536db3</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOGNLOG</name>
      <anchorfile>n__signals_8c.html</anchorfile>
      <anchor>aecdba1ca99fa2ca9f9bcde671a76f080</anchor>
      <arglist>(...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOGSIG</name>
      <anchorfile>n__signals_8c.html</anchorfile>
      <anchor>ae3c87806f70c0db080229bb0520d74f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addr2line</name>
      <anchorfile>n__signals_8c.html</anchorfile>
      <anchor>a303cb27f9c5239698d99891cd7341648</anchor>
      <arglist>(char const *const program_name, void const *const addr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>posix_print_stack_trace</name>
      <anchorfile>n__signals_8c.html</anchorfile>
      <anchor>afbe2520f5f64f71fb4967ab3351fbd11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>posix_signal_handler</name>
      <anchorfile>n__signals_8c.html</anchorfile>
      <anchor>afddb4cb4b779781c794bcefd1083f16b</anchor>
      <arglist>(int sig, siginfo_t *siginfo, void *context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_signal_handler</name>
      <anchorfile>group___s_i_g_n_a_l_s.html</anchorfile>
      <anchor>ga439d6a2f0248222f4f7ef75ee00e1d50</anchor>
      <arglist>(const char *progname)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const char *</type>
      <name>__n_stack_traced_progam_name</name>
      <anchorfile>n__signals_8c.html</anchorfile>
      <anchor>a187d1173b55750fb6118a551e7a2d4f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static void *</type>
      <name>stack_traces</name>
      <anchorfile>n__signals_8c.html</anchorfile>
      <anchor>a01bd21f87b492b2b7578c7b06acf544b</anchor>
      <arglist>[MAX_STACK_FRAMES]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_stack.c</name>
    <path>src/</path>
    <filename>n__stack_8c.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>__stack_pop</name>
      <anchorfile>n__stack_8c.html</anchorfile>
      <anchor>a683249259f859428011c1dc93529dd45</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>__stack_push</name>
      <anchorfile>n__stack_8c.html</anchorfile>
      <anchor>a526b57208b6511c1b5147a0f9ad6e55d</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>delete_stack</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gae10ed44c0747bbb61ff7a4f4fb861a7a</anchor>
      <arglist>(STACK **stack)</arglist>
    </member>
    <member kind="function">
      <type>STACK *</type>
      <name>new_stack</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gaeb9766b80862cfed07804b00e02ca3d9</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_is_empty</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga262da05db5ed393ca1af9adee0046315</anchor>
      <arglist>(STACK *stack)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_is_full</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga4aec6e9c9b01255d1131a3f3cc6c2886</anchor>
      <arglist>(STACK *stack)</arglist>
    </member>
    <member kind="function">
      <type>STACK_ITEM *</type>
      <name>stack_peek</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga3fd77da7de03d2d18cdb3600f24db24b</anchor>
      <arglist>(STACK *stack, size_t position)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_pop_b</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga2fb95be3f5f644f46d6d071365ecc8e1</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>stack_pop_c</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga581a47ccfc1da063f2b668a5fc73b315</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>stack_pop_d</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga280e4798f9624d97531a3e5ed3f78fa2</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>stack_pop_f</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga722c00b84620d10288d65675179c33cd</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>stack_pop_i32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gada4b159b3c4dcde56905cd49ac04dcb8</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>stack_pop_i8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga53e34b97087a1177c96c0ce32966cfb3</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>stack_pop_p</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gaf3a5086088b5bb511ba8dc265adfeb39</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>stack_pop_ui32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gab62facdfc1a162b989d78c8caf915bc6</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>stack_pop_ui8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga78a9be2f76ff4e306bfe2d8d1bc08494</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_b</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gaba2d8fcb66acaca628b1be6c575e8541</anchor>
      <arglist>(STACK *stack, bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_c</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga7d9f28e18faf348fd4ab97ea47621ac7</anchor>
      <arglist>(STACK *stack, char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_d</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga3458d26b4af8bbceb20d52afab6c4734</anchor>
      <arglist>(STACK *stack, double d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_f</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga19db9b4bae7a2236355982f518cc8d20</anchor>
      <arglist>(STACK *stack, float f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_i32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gada2ba939444a901d6f801d0399375e43</anchor>
      <arglist>(STACK *stack, int32_t i32)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_i8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gae22319d96be347b2d38d02bdb2af7f34</anchor>
      <arglist>(STACK *stack, int8_t i8)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_p</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gaf38d5759fa73e191542a6d95781ce7c0</anchor>
      <arglist>(STACK *stack, void *p, uint16_t p_type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_ui32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga4e555ba13b94ea3cb7453adc54d6067b</anchor>
      <arglist>(STACK *stack, uint32_t ui32)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_ui8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga35cabbd51b1ee323eef2e068747fd8f7</anchor>
      <arglist>(STACK *stack, uint8_t ui8)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_str.c</name>
    <path>src/</path>
    <filename>n__str_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <member kind="function">
      <type>int</type>
      <name>_free_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaca4a7a2dfa962f043cb8f3762ce28761</anchor>
      <arglist>(N_STR **ptr)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>char_to_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga69e5f2dbf75571a73e5a3332929642a4</anchor>
      <arglist>(const char *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>char_to_nstr_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gac4314e9f0ada88300a09d66405d541a8</anchor>
      <arglist>(const char *from, NSTRBYTE nboct, N_STR **to)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>char_to_nstr_nocopy</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gac8a6d1b664609215ee950c105658d86c</anchor>
      <arglist>(char *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>char_to_nstr_nocopy_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga65d9775967814094e82d07e5cb921ca5</anchor>
      <arglist>(char *from, NSTRBYTE nboct, N_STR **to)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga7b1c84d10757d1886ed29938f1f65973</anchor>
      <arglist>(N_STR *nstr)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>file_to_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gad2c9b27509a55615e57ef8efd2ca3a02</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_nstr_nolog</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabd313699b10bb56e50c45670e479faa7</anchor>
      <arglist>(N_STR **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_nstr_ptr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga0a864a4ce4997389f2e5e2e16c51a30a</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_nstr_ptr_nolog</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae1af929354e55057c4f134bce8f5b4d6</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_split_result</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gad53cff99261e509872a2a4128b1265cf</anchor>
      <arglist>(char ***tab)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>join</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gacdeb6b4760b1e4b22188993f0cd5222f</anchor>
      <arglist>(char **splitresult, char *delim)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>new_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga873edbb1f8787d0a78a13ccbbed9b9f9</anchor>
      <arglist>(NSTRBYTE size)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>nfgets</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga6aafe2498e23778dc91c8ad08167ff24</anchor>
      <arglist>(char *buffer, NSTRBYTE size, FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nstr_to_fd</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaf1ad6fe037290fd52fb91b89dd978b1f</anchor>
      <arglist>(N_STR *str, FILE *out, int lock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nstr_to_file</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga287229f34095426806d36c86be764d12</anchor>
      <arglist>(N_STR *str, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>nstrcat_bytes_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga9394dd9180b28abf28905a8f161043b5</anchor>
      <arglist>(N_STR **dest, void *data, NSTRBYTE size)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>nstrdup</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga3e30a18ec42d0f4cd8651c442bf62651</anchor>
      <arglist>(N_STR *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>resize_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga640c39561bbd3ba017d57dbfee6c7c5c</anchor>
      <arglist>(N_STR *nstr, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scan_dir</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaa3becc1e523b47d5d53bbbf6b1603520</anchor>
      <arglist>(const char *dir, LIST *result, const int recurse)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scan_dir_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga3257ab0fdf5a36d0dfca480a161d9fbf</anchor>
      <arglist>(const char *dir, const char *pattern, LIST *result, const int recurse, const int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skipu</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae4317ddc09606fcca46265a53bfbfb8b</anchor>
      <arglist>(char *string, char toskip, NSTRBYTE *iterator, int inc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skipw</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga783070a793146a860c3651c8434f32e1</anchor>
      <arglist>(char *string, char toskip, NSTRBYTE *iterator, int inc)</arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>split</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gab731024d29b0937615c1cdddeb8d4875</anchor>
      <arglist>(const char *str, const char *delim, int empty)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>split_count</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga194b81c0709d24aef9b6f7e8635d3966</anchor>
      <arglist>(char **split_result)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>str_replace</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga88e865dd8e64f3f3504a99d4d0961c37</anchor>
      <arglist>(const char *string, const char *substr, const char *replacement)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_sanitize</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaaf432cb6330353e306e51ed3d6e9f417</anchor>
      <arglist>(char *string, const char *mask, const char replacement)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_sanitize_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga2386f438e79df60930987a6102e87934</anchor>
      <arglist>(char *string, const NSTRBYTE string_len, const char *mask, const NSTRBYTE masklen, const char replacement)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_int</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae2c2238ae654a58f23570ce58e4d0eb8</anchor>
      <arglist>(const char *s, int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_int_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga55fdc7d1a7bd05f3e3925486e7fc9b9d</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_int_nolog</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga62422c326112e425298de6fb92584067</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, int *i, const int base, N_STR **infos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabe0231d30f0adca6678adba9ffca328a</anchor>
      <arglist>(const char *s, long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaf2fb09488bdaa0e8662f639ea899627e</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long_long</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga04812d120313b73e6e22493cad0ec75d</anchor>
      <arglist>(const char *s, long long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long_long_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga342bfee6550085fdf64e3db3cdd3ecb3</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, long long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strcpy_u</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga0484a44a99d2ad895e2c111b34ea5e39</anchor>
      <arglist>(char *from, char *to, NSTRBYTE to_size, char split, NSTRBYTE *it)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strlo</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaeaf9add3ea7a87eeea6e0cc4a81b47e6</anchor>
      <arglist>(char *string, char *dest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strup</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabb57d0188e78f2520d4ae7cc805579f5</anchor>
      <arglist>(char *string, char *dest)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>trim</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae5bb0c43f76b886197ee48679f0e8dbc</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>trim_nocopy</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga096b9e0a33d6e0f97e26c86b96415330</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wildmat</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabcfef0711183d5a9eb5ccb9c72ccaf85</anchor>
      <arglist>(register const char *text, register const char *p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wildmatcase</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga83b7c5c99476048f972ead97468ab7c2</anchor>
      <arglist>(register const char *text, register const char *p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_and_fit</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga4d201326b0adb27713e86af775b3dd35</anchor>
      <arglist>(char **dest, NSTRBYTE *size, NSTRBYTE *written, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_and_fit_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gacc3740a4b0816c80170ba6d6b0ae9eea</anchor>
      <arglist>(char **dest, NSTRBYTE *size, NSTRBYTE *written, const char *src, NSTRBYTE src_size, NSTRBYTE additional_padding)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_thread_pool.c</name>
    <path>src/</path>
    <filename>n__thread__pool_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__thread__pool_8h" name="n_thread_pool.h" local="yes" import="no" module="no" objc="no">nilorea/n_thread_pool.h</includes>
    <includes id="n__time_8h" name="n_time.h" local="yes" import="no" module="no" objc="no">nilorea/n_time.h</includes>
    <member kind="function">
      <type>int</type>
      <name>add_threaded_process</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga46497eb81066d0df83dfd07ad0a9f561</anchor>
      <arglist>(THREAD_POOL *thread_pool, void *(*func_ptr)(void *param), void *param, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga7c1bc4b2165196ae865a5f11a6867a20</anchor>
      <arglist>(THREAD_POOL **pool, unsigned int delay)</arglist>
    </member>
    <member kind="function">
      <type>long int</type>
      <name>get_nb_cpu_cores</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga8957711a73ec71ea58b28df71f4e1e0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>THREAD_POOL *</type>
      <name>new_thread_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga06425285000fa305a3e9eb7d8affa32f</anchor>
      <arglist>(size_t nbmaxthr, size_t nb_max_waiting)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>refresh_thread_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga5d9ce1747e4b7cb58ce3767f7e56cd8b</anchor>
      <arglist>(THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>start_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga0563294cf52eb2b9e4f1d017390ff46c</anchor>
      <arglist>(THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>thread_pool_processing_function</name>
      <anchorfile>n__thread__pool_8c.html</anchorfile>
      <anchor>abd0649708787bc15e1bc1ee59d64fd1f</anchor>
      <arglist>(void *param)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wait_for_synced_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga8207010787895dfc3bf7ba0b94974c26</anchor>
      <arglist>(THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wait_for_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga91ced7902ded69f1cdb0a625dbb5f4e9</anchor>
      <arglist>(THREAD_POOL *thread_pool, unsigned int delay)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_time.c</name>
    <path>src/</path>
    <filename>n__time_8c.html</filename>
    <includes id="n__time_8h" name="n_time.h" local="yes" import="no" module="no" objc="no">nilorea/n_time.h</includes>
    <member kind="function">
      <type>time_t</type>
      <name>get_msec</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gaa71a2f2a65caafed11a79e4317e88b44</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>get_sec</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gab5811f13d7c9699d13752c197d72cb67</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>get_usec</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gaa26bb3d464f6def321b9919bf1e9d1f4</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PAUSE</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gae4029ed3ae38f152bc572933ed1997be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>start_HiTimer</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>ga83bf99faafa00b4a69f31a589ca712ff</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>u_sleep</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>ga690f12dde1a446d47b8bf5f959493003</anchor>
      <arglist>(unsigned int usec)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_trees.c</name>
    <path>src/</path>
    <filename>n__trees_8c.html</filename>
    <includes id="n__common_8h" name="n_common.h" local="yes" import="no" module="no" objc="no">nilorea/n_common.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <includes id="n__str_8h" name="n_str.h" local="yes" import="no" module="no" objc="no">nilorea/n_str.h</includes>
    <includes id="n__trees_8h" name="n_trees.h" local="yes" import="no" module="no" objc="no">nilorea/n_trees.h</includes>
    <member kind="function">
      <type>int</type>
      <name>compare_double</name>
      <anchorfile>n__trees_8c.html</anchorfile>
      <anchor>aa648ca3451da73170a9314eb97aec89d</anchor>
      <arglist>(COORD_VALUE a, COORD_VALUE b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compare_float</name>
      <anchorfile>n__trees_8c.html</anchorfile>
      <anchor>a841fe8d311b2c51f1080f7bcc620b653</anchor>
      <arglist>(COORD_VALUE a, COORD_VALUE b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>compare_int</name>
      <anchorfile>n__trees_8c.html</anchorfile>
      <anchor>af93500658bfd23b089f9bc628c287574</anchor>
      <arglist>(COORD_VALUE a, COORD_VALUE b)</arglist>
    </member>
    <member kind="function">
      <type>QUADTREE_NODE *</type>
      <name>create_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gaf84bd52723c263a7393dbe58e26ae4c4</anchor>
      <arglist>(COORD_VALUE x, COORD_VALUE y, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>OCTREE *</type>
      <name>create_octree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gab863b9db45fb9ad7b4a1f4b6a0fa4ed4</anchor>
      <arglist>(int type)</arglist>
    </member>
    <member kind="function">
      <type>OCTREE_NODE *</type>
      <name>create_octree_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gaab241e76ec7f58148636b94588632478</anchor>
      <arglist>(POINT3D point, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>QUADTREE *</type>
      <name>create_quadtree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gadbc22319421ed2ae3643e46b713d72a7</anchor>
      <arglist>(int coord_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>determine_octant</name>
      <anchorfile>n__trees_8c.html</anchorfile>
      <anchor>a51f3935c500540ae60c1998ddec207f0</anchor>
      <arglist>(POINT3D point, POINT3D center, int type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_octree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga8fe1d2b26c64c6e6a903686add0859ba</anchor>
      <arglist>(OCTREE *octree)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_octree_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga11959698cee9597fd1876b32b3c4aea4</anchor>
      <arglist>(OCTREE_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_quadtree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga2f00ef1f3055c5dda01588a36ec8bbec</anchor>
      <arglist>(QUADTREE_NODE *root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gac97d67a9c1e410abfa21c96252151295</anchor>
      <arglist>(QUADTREE *qt, QUADTREE_NODE **root, COORD_VALUE x, COORD_VALUE y, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_octree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga1fe46d075a192493c755b332a6217660</anchor>
      <arglist>(OCTREE *octree, POINT3D point, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_octree_node</name>
      <anchorfile>n__trees_8c.html</anchorfile>
      <anchor>a5bc550e0722713aaaaf078e5b8055d0c</anchor>
      <arglist>(OCTREE_NODE *node, POINT3D point, void *data_ptr, int type)</arglist>
    </member>
    <member kind="function">
      <type>TREE *</type>
      <name>new_tree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga49421b368bbf90d858aace6abf08b093</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_double</name>
      <anchorfile>n__trees_8c.html</anchorfile>
      <anchor>aeec8b8e60ec8bd9c62113c591c7ed536</anchor>
      <arglist>(COORD_VALUE val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_float</name>
      <anchorfile>n__trees_8c.html</anchorfile>
      <anchor>afb5df6da1a08f43b69e54a5bb683cd85</anchor>
      <arglist>(COORD_VALUE val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_int</name>
      <anchorfile>n__trees_8c.html</anchorfile>
      <anchor>a6f27972de1d8729bd844c51658d5ec48</anchor>
      <arglist>(COORD_VALUE val)</arglist>
    </member>
    <member kind="function">
      <type>QUADTREE_NODE *</type>
      <name>search</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga7c0b07a6c3fdbbce8c43090ca197cf52</anchor>
      <arglist>(QUADTREE *qt, QUADTREE_NODE *root, COORD_VALUE x, COORD_VALUE y)</arglist>
    </member>
    <member kind="function">
      <type>TREE_NODE *</type>
      <name>tree_create_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga548b5e1126a451d166a3892c7761ee93</anchor>
      <arglist>(NODE_DATA value, void(*destroy_func)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tree_delete_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gac6fd5dd947cc80b699600bc734ffb114</anchor>
      <arglist>(TREE *tree, TREE_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tree_destroy</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gaa2e35447dc7c9b0b6e54aef8d688924e</anchor>
      <arglist>(TREE **tree)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tree_insert_child</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga2a7ac2ac073243ab157638c8d3c8a6cb</anchor>
      <arglist>(TREE_NODE *parent, TREE_NODE *child)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_user.c</name>
    <path>src/</path>
    <filename>n__user_8c.html</filename>
    <includes id="n__user_8h" name="n_user.h" local="yes" import="no" module="no" objc="no">nilorea/n_user.h</includes>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga25d7254e2bc5d4c6d4e89dadef9c67cd</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to_all</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gaaf1860e26c4355764ad00e1016547b2c</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to_all_except</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gaec87d76c70852173c2187e4eceb707ee</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to_ex</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga2f336886f3d5e909c397f1660419701d</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg, int mode, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_user</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gae10281ac87587e0e876bce8a4b0fd070</anchor>
      <arglist>(N_USERLIST *ulist, NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_del_user</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga199e127e979f625ff75a01e45afe0d5b</anchor>
      <arglist>(N_USERLIST *ulist, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_destroy</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gafa7f69dc21b1036e4e7815d8ab88c8d1</anchor>
      <arglist>(N_USERLIST **ulist)</arglist>
    </member>
    <member kind="function">
      <type>N_USERLIST *</type>
      <name>userlist_new</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga9b5ba218fe230aa8fa0934fce44c90be</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_send_waiting_msgs</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gac33945e0ace7b69815c92c2e9ba248a1</anchor>
      <arglist>(N_USERLIST *ulist)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_set_position_behavior</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gad9aae553bc39ca0193be01e70a3858d0</anchor>
      <arglist>(N_USERLIST *ulist, int id, int nb_rec_pos, int only_last_pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_user_add_waiting_msg</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gafeb353e9e5f9e0242e9b6d26ab668765</anchor>
      <arglist>(N_USERLIST *ulist, int id, N_STR *netmsg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_user_send_waiting_msgs</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga7b395e123b45d9d9215ea4318d5ff2cc</anchor>
      <arglist>(N_USERLIST *ulist, int id)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>n_zlib.c</name>
    <path>src/</path>
    <filename>n__zlib_8c.html</filename>
    <includes id="n__zlib_8h" name="n_zlib.h" local="yes" import="no" module="no" objc="no">nilorea/n_zlib.h</includes>
    <includes id="n__log_8h" name="n_log.h" local="yes" import="no" module="no" objc="no">nilorea/n_log.h</includes>
    <member kind="function">
      <type>size_t</type>
      <name>GetMaxCompressedLen</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>ga2b236630816c04de9fae5aa1ac9d2027</anchor>
      <arglist>(size_t nLenSrc)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>UncompressData</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>ga8d9cc906bc624d1a259f305aeca1b24f</anchor>
      <arglist>(unsigned char *abSrc, size_t nLenSrc, unsigned char *abDst, size_t nLenDst)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>unzip_nstr</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>gab434f8d8cbd741ecffd35be2125b66fe</anchor>
      <arglist>(N_STR *src)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>zip_nstr</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>gae1e033816ab406b33b403c687c2d7dea</anchor>
      <arglist>(N_STR *src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>AABB3D</name>
    <filename>group___a_a_b_b3_d.html</filename>
    <anchor>struct_a_a_b_b3_d</anchor>
    <member kind="variable">
      <type>AABB_VALUE</type>
      <name>xMax</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ad20ce3fd1039a57270d2c9aabb563bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AABB_VALUE</type>
      <name>xMin</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ae514d315766fe20f6e01cf399b058f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AABB_VALUE</type>
      <name>yMax</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>a8074a49c90b3ac051e31ef78f6f0d087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AABB_VALUE</type>
      <name>yMin</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>a367e9b353226d344f478b46207270742</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AABB_VALUE</type>
      <name>zMax</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ac2e73407bb1e2f6aee07f1e612103e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AABB_VALUE</type>
      <name>zMin</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>af1180dfa9465b711afb6fd284d25418c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ANIM_DATA</name>
    <filename>group___a_n_i_m___l_i_b.html</filename>
    <anchor>struct_a_n_i_m___d_a_t_a</anchor>
    <member kind="variable">
      <type>unsigned int</type>
      <name>elapsed</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>a5cdb4a3091358a089feb56c34c9ada89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>frame</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ac24c219490c4c52abb9419a3cb78734a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ANIM_LIB *</type>
      <name>lib</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>af28a6685e802d71d64f887998a72f6a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>x</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ae7b17885f76beaaa4f367566103c2313</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>y</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>a9ae7208fc4e921f59b059e77daa3e8bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ANIM_FRAME</name>
    <filename>group___a_n_i_m___l_i_b.html</filename>
    <anchor>struct_a_n_i_m___f_r_a_m_e</anchor>
  </compound>
  <compound kind="struct">
    <name>ANIM_GFX</name>
    <filename>group___a_n_i_m___l_i_b.html</filename>
    <anchor>struct_a_n_i_m___g_f_x</anchor>
    <member kind="variable">
      <type>ALLEGRO_BITMAP *</type>
      <name>bmp</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ac7f97a94a96e948f6a78d73acacf875f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ANIM_FRAME *</type>
      <name>frames</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>a95583e7125821b52934b7c2ea88dca41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>h</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>a94d18c0c0dfe0ce284f5569222463e91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nb_frames</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>a12208df4abcdff18343920c2c8fe56da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>type</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>a2095ed8bc17398522ba6cfe8e90c7cf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>w</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>a2af34142394cac7ad42b58495ed7c4fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ANIM_LIB</name>
    <filename>group___a_n_i_m___l_i_b.html</filename>
    <anchor>struct_a_n_i_m___l_i_b</anchor>
    <member kind="variable">
      <type>ANIM_GFX **</type>
      <name>gfxs</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>a66bbbae2d1b7cedfd09d2ed2108c8b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>a5e302a022098a9157051dda3edb26c28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>nb_max_gfxs</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>afa79c39369f8edff3ff769b11628da8f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CELL</name>
    <filename>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</filename>
    <anchor>struct_c_e_l_l</anchor>
    <member kind="variable">
      <type>int</type>
      <name>ability</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a3eba2670b3a8632e18de3fb7f19dc6d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>music</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>acd30658812d6260ff554b45d6c50aa25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>objectnumber</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ad7c5b510f5914c694133dc2be0d19a15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tilenumber</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a6273847e0559e755eaac94323f1def98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CONFIG_FILE</name>
    <filename>group___c_o_n_f_i_g_f_i_l_e.html</filename>
    <anchor>struct_c_o_n_f_i_g___f_i_l_e</anchor>
  </compound>
  <compound kind="struct">
    <name>CONFIG_FILE_SECTION</name>
    <filename>group___c_o_n_f_i_g_f_i_l_e.html</filename>
    <anchor>struct_c_o_n_f_i_g___f_i_l_e___s_e_c_t_i_o_n</anchor>
  </compound>
  <compound kind="union">
    <name>COORD_VALUE</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>union_c_o_o_r_d___v_a_l_u_e</anchor>
  </compound>
  <compound kind="struct">
    <name>CYPHER_PARAM</name>
    <filename>n__crypto_8c.html</filename>
    <anchor>struct_c_y_p_h_e_r___p_a_r_a_m</anchor>
    <member kind="variable">
      <type>N_STR *</type>
      <name>dest</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>a611d03d1a9c055ec6d4e2d435032c11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>encipher</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>a1deef8375d9f4a6ff70ce357e66294b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>end_pos</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>ad9a92983674ee0ba36f03d0e224fc2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_STR *</type>
      <name>input</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>aa27459819f24f16f4b0a32071365fb53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_STR *</type>
      <name>key</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>ab25e94b914d5170a3ac4ef4854642910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>start_pos</name>
      <anchorfile>n__crypto_8c.html</anchorfile>
      <anchor>a88b1566174e161b099f0217d4f996765</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>DATA</name>
    <filename>struct_d_a_t_a.html</filename>
    <member kind="variable">
      <type>N_STR *</type>
      <name>rnd_str</name>
      <anchorfile>struct_d_a_t_a.html</anchorfile>
      <anchor>aa0c7143c62a17fd248a2439b897b967a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>value</name>
      <anchorfile>struct_d_a_t_a.html</anchorfile>
      <anchor>a15ebbd763eb2b7b6c21f02a9894da03c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>ExceptionContextList</name>
    <filename>group___e_x_c_e_p_t_i_o_n_s.html</filename>
    <anchor>struct_exception_context_list</anchor>
    <member kind="variable">
      <type>jmp_buf</type>
      <name>context</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>a8ee113094e4f995bc21560067f072da9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct ExceptionContextList *</type>
      <name>head</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>aedb7815df9c9358f9737aeaa95fe610f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>GAME_ENV</name>
    <filename>group___g_a_m_e___e_n_v.html</filename>
    <anchor>struct_g_a_m_e___e_n_v</anchor>
    <member kind="variable">
      <type>int</type>
      <name>BLUR</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>a3259248121dd8ba8b44c164ca75b83f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>CPU_MODE</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>a433355bb605c553721fe9e4af4083c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>DONE</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>a90d06c8d21e7f0148f07cb8dc8a3a48d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>draw_time</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ad8b4b5beb96e66fef62955e4255be111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fade_value</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ae5aa1850bc1016d129b5d54fe286eaef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_TIME</type>
      <name>game_timer</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>a20213ad9f883c6e108c2607e903eee54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>GFX_CONFIG_MODE</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ae060b9ab26fffddd68412a380b91e435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>GFX_UPDATE_RATE</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>a2ac7fb130a7a0055cca1b26d887d0cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>left_attack</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ab6eb9e74763944a54a639842cdc40726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>left_attack_pos</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>a6914c17d3e7ff46ab7689516feffb3b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>level</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ab0e3f0af1302333655ffb650f2bf5526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lifes</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>a0229b98941a0a8e791c1645563153492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>LOGIC_RATE</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ab0cbe16aeae9ec4f0040310075e0c3c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>logic_time</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ac586d96814ac9e0bf77994ac2d487b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>loop_time</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>aa984c77554f203c71749a6865d804988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nb_min_particles</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>a02c28a1b6fa57826f46efa22c9f87f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>real_framerate</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>aef82b132b2c7990a182aab661f52f956</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>right_attack</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>aacabb3a45734f030083fd043f61e95e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>right_attack_pos</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>af2386c1538136333703226460d02fa4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>score</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ac6f2240a42cc56210ee111635d6af32a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>wait_for_slowing_down_cpu</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>aa8b57b5162ab0145a1a369436caa5f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>x</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>a187faa97c19fd8165a067fa52279e8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>y</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>af9ff135ff435015dfcd432253715b005</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>z</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>accaf5b8fdfa86b917dc11ab7342a3914</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>HASH_DATA</name>
    <filename>group___h_a_s_h___t_a_b_l_e.html</filename>
    <anchor>union_h_a_s_h___d_a_t_a</anchor>
    <member kind="variable">
      <type>double</type>
      <name>fval</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ad2d3bec34d8c7b52ef0db7939f63c9f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HASH_INT_TYPE</type>
      <name>ival</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a84bbfefa2c708a8af7d429b64218d17a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a43cba9e8cc64625ba676214228851332</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>string</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>aac55e879f07875b61c6d088c1a41f714</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HASH_NODE</name>
    <filename>group___h_a_s_h___t_a_b_l_e.html</filename>
    <anchor>struct_h_a_s_h___n_o_d_e</anchor>
    <member kind="variable">
      <type>size_t</type>
      <name>alphabet_length</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a11b3c3705384037339fa07df12b009f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct HASH_NODE **</type>
      <name>children</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ac4fb9aa602717ff4e9c06b49ce648803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union HASH_DATA</type>
      <name>data</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a44d1807aa4ab0473bbbd9d3d2f415e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>destroy_func</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>af16485d50b52eee83f99c819d3a4e0ac</anchor>
      <arglist>)(void *ptr)</arglist>
    </member>
    <member kind="variable">
      <type>HASH_VALUE</type>
      <name>hash_value</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ac59ae720ec85ff8a01c4a4cc3c18cdc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>is_leaf</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a3a39060513f4af39aedef416fec38296</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>key</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a2c219363728255e08c112ef10506fb68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>key_id</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a242a1f7255fc836bb1395079e1c0016b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>need_rehash</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a1d03a2f41cf3097e781103abc6296079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a5cd9a167ac8d507a9a98f34fee5577f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HASH_TABLE</name>
    <filename>group___h_a_s_h___t_a_b_l_e.html</filename>
    <anchor>struct_h_a_s_h___t_a_b_l_e</anchor>
    <member kind="variable">
      <type>size_t</type>
      <name>alphabet_length</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a8632e52e549e6795032aba5056353b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>alphabet_offset</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a79cc890ba771f2d01e8d6d548f846080</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>destroy_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>aa8df44a08b270669e40549c85ce51e83</anchor>
      <arglist>)(struct HASH_TABLE **table)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>empty_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a5dbf9bc5fdcbb834ff8103b7dc01a827</anchor>
      <arglist>)(struct HASH_TABLE *table)</arglist>
    </member>
    <member kind="variable">
      <type>LIST **</type>
      <name>hash_table</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a5f15783b0b38e5269cbe64afe90835ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ht_get_double</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a84f2c684c266cd54edbc0e9d81dc8c64</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key, double *val)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ht_get_int</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>aab0afb016724ad00b1b8d2fa1ebbe289</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key, HASH_INT_TYPE *val)</arglist>
    </member>
    <member kind="variable">
      <type>HASH_NODE *(*</type>
      <name>ht_get_node</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a1e3ff3d2ba86ffa16d566cc670ace074</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ht_get_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a4c3e4597ea9400c7f4c1ea07c0ae8d66</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key, void **val)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ht_get_string</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a25e93a98640f1de8f3eb7ac3f1e6c2ee</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key, char **val)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>ht_print</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>aac2041ddaca00fb2bf4e04488870fc66</anchor>
      <arglist>)(struct HASH_TABLE *table)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ht_put_double</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>abe784fbec9a8a6afbcc11601008c85ba</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key, double val)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ht_put_int</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a20a64021eaa574bdb988c514fee7dab0</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key, HASH_INT_TYPE val)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ht_put_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>adca8a2780bb9ff6402efcfa66e1fe4ed</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ht_put_string</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a2b0d803b8ab67bbb7e965005dac9b0a5</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key, char *val)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ht_put_string_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>aaacc182ce381fa6176d58329e086a2da</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key, char *val)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>ht_remove</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>aab5f509d032401c46f89964517e720e5</anchor>
      <arglist>)(struct HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="variable">
      <type>LIST *(*</type>
      <name>ht_search</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>aedf59ccd6d3f240141ceea3d33ae55b8</anchor>
      <arglist>)(struct HASH_TABLE *table, int(*node_is_matching)(HASH_NODE *node))</arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>mode</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a96764087505dc29560001ceee78cf556</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nb_keys</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>aedaf39d0b49aa0d5be5eaa3748fb9448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>HASH_NODE *</type>
      <name>root</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a4031706df3cb7933765e247a63ba461a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>seed</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>a992b6db55bcc486699a76bcbbd658ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ad99578795ef74ec574a9e88b746fb4a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LIST</name>
    <filename>group___l_i_s_t.html</filename>
    <anchor>struct_l_i_s_t</anchor>
    <member kind="variable">
      <type>LIST_NODE *</type>
      <name>end</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>a353e892f4b77631bfe0eeef1bd05db39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nb_items</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ab9dfd1f2498b8e7ff4ee4e8d93b2a3f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nb_max_items</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>a9236e8d172f6383f24bb573202798fb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST_NODE *</type>
      <name>start</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>aaaf4b83d5bfb568b4a840032ba46ead3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LIST_NODE</name>
    <filename>group___l_i_s_t.html</filename>
    <anchor>struct_l_i_s_t___n_o_d_e</anchor>
    <member kind="variable">
      <type>void(*</type>
      <name>destroy_func</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ac79aba60fed7fb7dcc4649e13e1b7a02</anchor>
      <arglist>)(void *ptr)</arglist>
    </member>
    <member kind="variable">
      <type>struct LIST_NODE *</type>
      <name>next</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ad6f2edb2e5026bbdff71604e5f9d8f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct LIST_NODE *</type>
      <name>prev</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>a97363c506efb3e5cc52dafc68e55f63a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ptr</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>a3e3c8144183582d63ffad5fb3315ea69</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LOG_LEVELS</name>
    <filename>n__log_8c.html</filename>
    <anchor>struct_l_o_g___l_e_v_e_l_s</anchor>
    <member kind="variable">
      <type>char *</type>
      <name>c_name</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>ac609a011c82b9d6b7b8af900f5d602a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>c_val</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>a3496162d689b6d0cc531b00dcafee2be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>w_name</name>
      <anchorfile>n__log_8c.html</anchorfile>
      <anchor>abe396fe7169ae2341fdbfee87ecf389d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>MAP</name>
    <filename>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</filename>
    <anchor>struct_m_a_p</anchor>
    <member kind="variable">
      <type>char *</type>
      <name>anim_group_names</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>acc28b5353975b1eecc04feaada8e0e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>bgcolor</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ad03f029a461547062edfd9fe6e6b8629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BITMAP *</type>
      <name>colortile</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a858b3594d985a1e8d8b3140d73f39db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CELL *</type>
      <name>grid</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>aa358962e9063fc034f305040b4ccc0bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>BITMAP *</type>
      <name>mousemap</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>af4bf0e727bac8c5b1aa0e80f04eb57d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a6e4ab9656865f6b08cf08cb1ec7b7f6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>object_group_names</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a994b026a2594ab38ba844dd6c101fa33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ptanchorX</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a7ee606fd309f1e469290814e3c17036f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ptanchorY</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a74066517862f256df00d1e930de9d2f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>quests_group_names</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a0415021e8033dd4004ea933bbad228d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>sounds_group_names</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a1fc1a98c11ee64e76f5ad6d204e024bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>TILEH</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a95707556190c6c8041048aa182fdeea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>TILEW</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a215b5540e1867e1a7c1aa8ec31394df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>wirecolor</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a797d9aeaa70901ea56b5053cd298eec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>X</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>a1717fd32c721e12a0e83e03c53b1b7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>XSIZE</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>abba4c269619477240afe1978dd5520d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>Y</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>af0ab2d5eec93cb4a514274b5f0db3f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>YSIZE</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ab729e7d08a8a24ab3a5e5cb38f52366b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_FILE_INFO</name>
    <filename>group___n___f_i_l_e_s.html</filename>
    <anchor>struct_n___f_i_l_e___i_n_f_o</anchor>
    <member kind="variable">
      <type>time_t</type>
      <name>filetime</name>
      <anchorfile>group___n___f_i_l_e_s.html</anchorfile>
      <anchor>a43d40af857c5d7fdf90829538c061fbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>name</name>
      <anchorfile>group___n___f_i_l_e_s.html</anchorfile>
      <anchor>aefb6f4f7674f885c68ee6d65ea6cdc3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_FLUID</name>
    <filename>group___n___f_l_u_i_d_s.html</filename>
    <anchor>struct_n___f_l_u_i_d</anchor>
    <member kind="variable">
      <type>LIST *</type>
      <name>advectSmoke_chunk_list</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a44cd043ee02463b8f7cc9c84d541bb8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>advectVel_chunk_list</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>acb738dcf9ab8f66c8e0cf8a60aaf740e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>cScale</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ad768cf56896d859a3be3e046d559df9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>density</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ac5994a433dd75980af320cdd50a352bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dt</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>aae5a279139334f24ceac9039fc9f24ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fluid_production_percentage</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a34912413ebaadf68bb12c7b4708d42cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>gravity</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>af3fe34183ccda4a0ab11b80923bfe232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>integrate_chunk_list</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a9876f9bcd952b82db6826d215a451845</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>m</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ad4319096a109a32e0ceb30c570b68293</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>negative_float_tolerance</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>afc48aeda935b52ed05ed1ec17817d488</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>newM</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ad92b76c53b6ca938005f351cfadfb3ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>newU</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a1982b758a747571260fa0d3b6769879f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>newV</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a9d278d562f184f8fb0ecc06ac4179178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>numCells</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ab5ef2081f3d95ba2551389df5751703b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>numIters</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>abe833e31116bd3c5fd0a60c4dfd0fec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>numX</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a3e7dfd6baee8a431d97c4dcfb1f9fef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>numY</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a21d85ce6c45cf6bb04cffd8329d6943e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>numZ</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ae4956ff60d410fba18805abedfc5ce8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>overRelaxation</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a45c6f1e7ddc49b3603a6e28da1eb54c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>p</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>aeb6d681185179449b5a3b0c585d10dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>positive_float_tolerance</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a5b0bc0f5ce8e24e0d0d1b218b852d9ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>s</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ab18c253babdb185b35846726c0c94a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>showPaint</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a661c7580004a2cd52d75a950df09b5c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>showPressure</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a476b3cbaafc45df3364b9981b44643a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>showSmoke</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a35e46aff63e13c8e94482e9013f54da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>solveIncompressibility_chunk_list</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a5e5c6314bf23c521c1a4b881470ff583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>u</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a773de81eda63741c7ad6984921662a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>v</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ab20e609efe2b2798359f506f2767ed7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_FLUID_THREAD_PARAMS</name>
    <filename>group___n___f_l_u_i_d_s.html</filename>
    <anchor>struct_n___f_l_u_i_d___t_h_r_e_a_d___p_a_r_a_m_s</anchor>
    <member kind="variable">
      <type>void *</type>
      <name>ptr</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a5457a0d97bab5c4201bbefb8118f61d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>x_end</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a5fb9c7f80b71ccb07fafdcc2104e22b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>x_start</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>af37930f4a40836d61f0fee9a29688377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>y_end</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>af9ab76fe0d96d2bf6f625fd71bfef889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>y_start</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>a22cb662e11ff906c932aad3f3c28b6c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_GUI_DIALOG</name>
    <filename>group___g_u_i.html</filename>
    <anchor>struct_n___g_u_i___d_i_a_l_o_g</anchor>
    <member kind="variable">
      <type>HASH_TABLE *</type>
      <name>styles</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a6f9b0cb4927e42ffae956458d4333110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TREE *</type>
      <name>tree</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a0185f8dc836297c3091e5d9e0edcf20c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_GUI_LAYOUT</name>
    <filename>group___g_u_i.html</filename>
    <anchor>struct_n___g_u_i___l_a_y_o_u_t</anchor>
    <member kind="variable">
      <type>ALLEGRO_COLOR</type>
      <name>background_color</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a9f7dd31526a5bd6919174e6f5c1351fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_STR *</type>
      <name>background_image</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>aa2a26417a013861c71e936b78fb48b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_STR *</type>
      <name>font</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a4941be0814dba797a6fef76d42d4fe0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>font_size</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a46851571f5703e93c7fe5458e736d9d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>font_style</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a69b5bafc58afd2a385b8f3b806855bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>horizontal_align</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>aec21e08ec28276506789186d73943080</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>margin_bottom</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a2d07f1eaf691543780588b9259b5aa0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>margin_left</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ae83a59569264e0a376d2f5f4f10bb220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>margin_right</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a072ac94078f3b0bb96d1b5c58bd15909</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>margin_top</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a1f77ceae0946a198a13f89a75e573de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_height</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a5fbb7f075a4dba11c4da5dd10737ed39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_width</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a536da12be63f7cc704b0f78e73c7a6d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_height</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>af32ed351fd65594bdf162c6028c64cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>min_width</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a6a812744f002c4133cd8e11ff8f05ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>vertical_align</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a3c41dc1f25e95b2556ca33140f03ddec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_GUI_TOKEN</name>
    <filename>group___g_u_i.html</filename>
    <anchor>struct_n___g_u_i___t_o_k_e_n</anchor>
    <member kind="variable">
      <type>size_t</type>
      <name>type</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>aa1722019df7d1ca724834d6d676820b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>value</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>aa9334323d7f322983390461c5bbe1d5e</anchor>
      <arglist>[N_GUI_MAX_TOKEN_SIZE]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_GUI_TOKENIZER</name>
    <filename>group___g_u_i.html</filename>
    <anchor>struct_n___g_u_i___t_o_k_e_n_i_z_e_r</anchor>
    <member kind="variable">
      <type>const char *</type>
      <name>input</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>aff605c6e982bb8ebc393f2bfbef47d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>position</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>afdb932ded061e4261b9c5991f714fa85</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_GUI_WIDGET</name>
    <filename>group___g_u_i.html</filename>
    <anchor>struct_n___g_u_i___w_i_d_g_e_t</anchor>
    <member kind="variable">
      <type>size_t</type>
      <name>h</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ad5c66c1df8d3f4e30f9b42375ea80af1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_GUI_LAYOUT</type>
      <name>layout</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a0d356d727f1e8122a7d074f9037149ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>type</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a327b6821a63330b332c1d10caa8abd2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>w</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ab2d5899259c4901fa68ffdebe59f0000</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>x</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a2f06dd9685921092222278bae91e8de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>y</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>a84cbcffeaeba64ba4ae0850664a0d77d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_KAFKA</name>
    <filename>group___n___k_a_f_k_a.html</filename>
    <anchor>struct_n___k_a_f_k_a</anchor>
    <member kind="variable">
      <type>char *</type>
      <name>bootstrap_servers</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>adde514692748b50744abc673ee6e3021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cJSON *</type>
      <name>configuration</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a13c6e199a25be6e99357c8f8e6ef046d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_STR *</type>
      <name>errstr</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a6a98b24c5ef1a6fe79490ded35fb9cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>events_to_send</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a816843fdb88e0cfa56619b9f89b1ef6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>groupid</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ab01ef085ecb8b506c1743b845f206e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mode</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a276d42327499f1ab03027e31757ff639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>poll_interval</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a6c112449c2029a4c58e6b4030502fc88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int64_t</type>
      <name>poll_timeout</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a2d366629e88569680b20233a54b54f0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_t</type>
      <name>pooling_thread</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a1a408bcc1b1c75cc01413bfc5199a0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pooling_thread_status</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a79ca56537d2ce85f00edc8d30cf9c04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rd_kafka_conf_t *</type>
      <name>rd_kafka_conf</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a7f055e5c0108462c36780107b9af086a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rd_kafka_t *</type>
      <name>rd_kafka_handle</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a9028235274be79e93595c15f91133638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rd_kafka_topic_t *</type>
      <name>rd_kafka_topic</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a4bf8fbceb885b758690403e78f49f0d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>received_events</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a80426d9a54e46cca7a1eae4b6dbe2488</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_rwlock_t</type>
      <name>rwlock</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a60efec50ad09567d46d42ea8118987ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>schema_id</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ac3eb6a3d90a24c2b821575955b278021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>topic</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>af7b2d775f98fbf0f017253f27d879dc6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_KAFKA_EVENT</name>
    <filename>group___n___k_a_f_k_a.html</filename>
    <anchor>struct_n___k_a_f_k_a___e_v_e_n_t</anchor>
    <member kind="variable">
      <type>N_STR *</type>
      <name>event_files_to_delete</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ab0a55727a63c698e2439bdedd5d32bc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_STR *</type>
      <name>event_string</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a951eb8c2521d73c3c3e54b793c03bc13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>from_topic</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ade62e42618c1de19f0d59bd4ca19bf4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct N_KAFKA *</type>
      <name>parent_table</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ad080aa3f146bc6b4ccd19311599cc579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rd_kafka_headers_t *</type>
      <name>rd_kafka_headers</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a59c9a5a84d3585b79bb8d8808f7c7b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>received_headers</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a94ab7e407fffc4e74eb32f1541a9e680</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>schema_id</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>a49870087782dde97d0cba0042818941d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned int</type>
      <name>status</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>af616d76ea86f8045f4351db8f48735ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_PCRE</name>
    <filename>group___p_c_r_e.html</filename>
    <anchor>struct_n___p_c_r_e</anchor>
    <member kind="variable">
      <type>int</type>
      <name>captured</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>a927e330fc5474980d8ac66fde517afce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pcre_extra *</type>
      <name>extra</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>af69c1253ab2dc67343dc264ae467c8d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char **</type>
      <name>match_list</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ac5c8c4ad5e5fcd4e4cadd2fe664cef22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ovecount</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>aeb0e4f5bd0378dcd919981c4b48d711c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>ovector</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>acd78def88840569730ba15f8c9e04b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pcre *</type>
      <name>regexp</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ab8a517b034fe3c02105248b2d5bd33bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>regexp_str</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>a89555cc89b6429c253443c6181102491</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_SOCKET</name>
    <filename>group___n_e_t_w_o_r_k_i_n_g.html</filename>
    <anchor>struct_n___s_o_c_k_e_t</anchor>
    <member kind="variable">
      <type>struct addrinfo</type>
      <name>hints</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ac3f612f8f4c10915a264cfeb5bab4b03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>ip</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a0fc7e6fbac39cbd49506a4a6028ac4a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>unsigned long int</type>
      <name>is_blocking</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ae8a701c987f67a4f080939b9fcb897b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>port</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a9a3e2418aaf67a7ef77a15c83c5584db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct sockaddr_storage</type>
      <name>raddr</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a4483fbd34aef2bc61d8c4fa8a3c03057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct addrinfo *</type>
      <name>rhost</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a091a70428cc5ad4d98cab3bf50d3bd9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SOCKET</type>
      <name>sock</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a955fc782ab96c831965cdacc962b7a7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_STR</name>
    <filename>group___n___s_t_r.html</filename>
    <anchor>struct_n___s_t_r</anchor>
    <member kind="variable">
      <type>char *</type>
      <name>data</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>a576fb0ebcd98c7bad5aa25250d830092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>length</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ad8926c68f2affe5fcaf457ec71bd80a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>written</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>a2e4024234a273fe51fbdf71aeeb43c7c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_TIME</name>
    <filename>group___n___t_i_m_e.html</filename>
    <anchor>struct_n___t_i_m_e</anchor>
    <member kind="variable">
      <type>struct timeval</type>
      <name>currentTime</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>afb1f231f50189cc323edb0205ac522e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>time_t</type>
      <name>delta</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>a7f3ded4268bd24c456d20bd937e88669</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct timeval</type>
      <name>startTime</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>a3457ac0a75b6be615b9af6c37b93b546</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_USER</name>
    <filename>group___n___u_s_e_r.html</filename>
    <anchor>struct_n___u_s_e_r</anchor>
    <member kind="variable">
      <type>int</type>
      <name>id</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>adb133fcd94b24ff4624b6d9fa1ff0c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECTOR3D *</type>
      <name>last_positions</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>a2829e59263aa49990d450ee7b389edc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>name</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>a16b9465a4b34aa31dd4026fd58465b12</anchor>
      <arglist>[1024]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nb_rec_pos</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>af7051c0178f915d99ce9c4d87e6020d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NETWORK *</type>
      <name>netw</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>acaf409c1e288d3b6f79c20f87ea3b7dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>netw_waitlist</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>a89e07558a36e79e749320515987607a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>only_last_pos</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>a4183e9786f357169376782f45af7357f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECTOR3D</type>
      <name>position</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ac64a7499749300b573a4cfeb61dd8702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>state</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>aa620726da24b5c0a7f7e622f2d59a0bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>N_USERLIST</name>
    <filename>group___n___u_s_e_r.html</filename>
    <anchor>struct_n___u_s_e_r_l_i_s_t</anchor>
    <member kind="variable">
      <type>int</type>
      <name>highter</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ad93113ac20baf1f25d0bfe7dd8304f86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_USER *</type>
      <name>list</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>affe297963a0ee330587c88d128767be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>a67cbbd8bdda954559290415e8914e6a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_rwlock_t</type>
      <name>user_rwbolt</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>a99b38089d47444826bd5ca526b4effb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETW_MSG</name>
    <filename>group___n_e_t_w_o_r_k___m_s_g.html</filename>
    <anchor>struct_n_e_t_w___m_s_g</anchor>
    <member kind="variable">
      <type>LIST *</type>
      <name>tabflt</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>a45c317b75c831b310af4eee2362b5074</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>tabint</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ab54a67512878df31d3e5f6d6805ac811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>tabstr</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>aa301d170bdad848eda7850cda67b3188</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETWORK</name>
    <filename>group___n_e_t_w_o_r_k_i_n_g.html</filename>
    <anchor>struct_n_e_t_w_o_r_k</anchor>
    <member kind="variable">
      <type>int</type>
      <name>addr_infos_loaded</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ac8f7cfa2ad7bb499e28b80cd54a1aba0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>crypto_algo</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>aec612b7a36948836e9593464af149d4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>crypto_mode</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a0eca3f4b7ee3a85432baa0cdb49361a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>deplete_queues_timeout</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a6372e3bf2e25275700328c16b9aa92c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>deplete_socket_timeout</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a60c38b524d9f26e0683b9a776cb3c685</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_mutex_t</type>
      <name>eventbolt</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a56b1f8c6c3cacad772798dbe044d6758</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_SOCKET</type>
      <name>link</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a14a141c17c7a3f58b62e20b36178d668</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mode</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>af8205e18871cd24122c77e82b3310179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nb_pending</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a1db8130fdbab7a8cc7d88c9f40ef7c77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nb_running_threads</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a65fef5690cccc30acb1be83ee8dda127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>pools</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ad95aeeed009dbdd2a9f1b362fa4f7e23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>recv_buf</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a9c309c4d4a34adb115a21d124fba5213</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>netw_func</type>
      <name>recv_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>afa4742a842c0f4e729d8a88371c49209</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_t</type>
      <name>recv_thr</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a29172715250becee2ba24190c4c39fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_mutex_t</type>
      <name>recvbolt</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a6b40b13e4c43fab35ad0e8235778b531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sem_t</type>
      <name>send_blocker</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>aa905bc1e29ea3d9a870b217721d30d02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>send_buf</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>af6c379d66dc41fb7d62efb98fc8bcf4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>netw_func</type>
      <name>send_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ac6ee9581baa5e9d738641783c12684c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>send_queue_consecutive_wait</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a72517eff4bde08ad4366b5f6248931d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_t</type>
      <name>send_thr</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a1a7df16e28d83e9bc7004abb15898ae0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_mutex_t</type>
      <name>sendbolt</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a6e7ff29a844a2d35e1a65d841f765899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>so_keepalive</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ac64f590b773a08481e9a47cf9285a5bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>so_linger</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ae0c060a264b61e2c11147a101159ca5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>so_rcvbuf</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>af9cdd850de1d747671ba20c804bd7715</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>so_rcvtimeo</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a7dba80b8f74427985ad4cb4e3504eddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>so_reuseaddr</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a23deb42defc105bed87f798888fa9243</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>so_sndbuf</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>aae099d39c28749fe6ca1c3c834f16700</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>so_sndtimeo</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>aaf963860be7e103f162fe2cdbf681ec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>state</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ad8c581957d413b654877f43b69a5b709</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>tcpnodelay</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a8a60485e1460f7cda5522b9382c43018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>threaded_engine_status</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a18fed15683e91916116ec855e5890756</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>user_id</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>aa7d88c729aeaee09b4a2daed19c6384f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>wait_close_timeout</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>afb81ff9b8578eac129e6d9047b32708d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETWORK_HTTP_INFO</name>
    <filename>group___n_e_t_w_o_r_k_i_n_g.html</filename>
    <anchor>struct_n_e_t_w_o_r_k___h_t_t_p___i_n_f_o</anchor>
  </compound>
  <compound kind="struct">
    <name>NETWORK_POOL</name>
    <filename>group___n_e_t_w_o_r_k_i_n_g.html</filename>
    <anchor>struct_n_e_t_w_o_r_k___p_o_o_l</anchor>
    <member kind="variable">
      <type>HASH_TABLE *</type>
      <name>pool</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>af120ab26f1240d792d9b5c3b52235fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_rwlock_t</type>
      <name>rwlock</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>a39cc4a5d3010ac9a8452dd03f9dd1105</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NETWORK_SSL_THREAD_PARAMS</name>
    <filename>struct_n_e_t_w_o_r_k___s_s_l___t_h_r_e_a_d___p_a_r_a_m_s.html</filename>
    <member kind="variable">
      <type>NETWORK *</type>
      <name>netw</name>
      <anchorfile>struct_n_e_t_w_o_r_k___s_s_l___t_h_r_e_a_d___p_a_r_a_m_s.html</anchorfile>
      <anchor>adf005fda3bb8144fca2465f8185396d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>routes</name>
      <anchorfile>struct_n_e_t_w_o_r_k___s_s_l___t_h_r_e_a_d___p_a_r_a_m_s.html</anchorfile>
      <anchor>acc6addf5ad04503ea491f9e8df11aaa5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>NODE_DATA</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>struct_n_o_d_e___d_a_t_a</anchor>
    <member kind="variable">
      <type>int32_t</type>
      <name>type</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a61d3a85d0452f8b9dd0b6f90c4b4e252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union NODE_DATA_TYPES</type>
      <name>value</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a5ca9fe7b14d542ab34f5e64369c272be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>NODE_DATA_TYPES</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>union_n_o_d_e___d_a_t_a___t_y_p_e_s</anchor>
    <member kind="variable">
      <type>double</type>
      <name>fval</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a9333809389c6fd4aa76dbdf0d5c2bbe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ival</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>acc713434a3fa699d9dfd468dfbde50e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_STR *</type>
      <name>nstr</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ae9dd932fed3ea5dba6093ef7c592a32d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ptr</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a993317d3addc8d2e082ddc593826e64d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>string</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a0ae53bcd708bfb1935f8f9c163b3d2fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>OCTREE</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>struct_o_c_t_r_e_e</anchor>
    <member kind="variable">
      <type>int</type>
      <name>coord_type</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>afd9fbe924fb7423d3ca5a4a182032152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>OCTREE_NODE *</type>
      <name>root</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a4a01b7a0d8ea7c79180788a66a6991d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>OCTREE_NODE</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>struct_o_c_t_r_e_e___n_o_d_e</anchor>
    <member kind="variable">
      <type>struct OCTREE_NODE *</type>
      <name>children</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ad584f39e64f10759fff49f2048c4a8a7</anchor>
      <arglist>[8]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>data_ptr</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a473d9808263701d681ef194964c3c2a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>POINT3D</type>
      <name>point</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>aae38e0b73f2e23c871c81d0e86f56069</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PARTICLE</name>
    <filename>group___p_a_r_t_i_c_l_e_s.html</filename>
    <anchor>struct_p_a_r_t_i_c_l_e</anchor>
    <member kind="variable">
      <type>ALLEGRO_COLOR</type>
      <name>color</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>a32c238feac26c4241fb069049c2b4c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lifetime</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>a548bd0f49b865829b184454ccb00135f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>mode</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>a92c335fa485b1cc860b7d0c7a799c3e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHYSICS</type>
      <name>object</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>a48dfa06a47ccb1dab0e136d4256c5722</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>size</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>a1ecb6448e1197f93019658cfff4ca6b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>spr_id</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>a4de324e827e35ac50606e92c089dd378</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PARTICLE_SYSTEM</name>
    <filename>group___p_a_r_t_i_c_l_e_s.html</filename>
    <anchor>struct_p_a_r_t_i_c_l_e___s_y_s_t_e_m</anchor>
    <member kind="variable">
      <type>LIST *</type>
      <name>list</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>a7f6a60fa6c291c8a8e5118fd5b054e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_sprites</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>a2743358c5741f348ba48525b7d2bc0f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECTOR3D</type>
      <name>source</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>a6acfd8c66e6ed89bf9661e816f3d94b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ALLEGRO_BITMAP **</type>
      <name>sprites</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ab9d6d952c1de30377308476c7356f6cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>N_TIME</type>
      <name>timer</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>a0eb5551a71d4412d76e970b19cc0078e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHYSICS</name>
    <filename>group___p_h_y_s_i_c_s.html</filename>
    <anchor>struct_p_h_y_s_i_c_s</anchor>
    <member kind="variable">
      <type>VECTOR3D</type>
      <name>acceleration</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ad0b484225d6c698b8cd479c0bf530e2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECTOR3D</type>
      <name>angular_acceleration</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ad8845057dc2ecbf4b76fe1ee1b7afe35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECTOR3D</type>
      <name>angular_speed</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>aea035d7d1a7f532107b2c857631d0f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>can_jump</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>a56308a6c6f1d32bfa8a0f71f5f03571d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>time_t</type>
      <name>delta_t</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>aecf8745914b62a6d2e2bea014a5b9e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECTOR3D</type>
      <name>gravity</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>a408717d7fc927cd37e24d5a67a26d331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECTOR3D</type>
      <name>orientation</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>a9e14037426ba4fb295ca492e2e855b2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECTOR3D</type>
      <name>position</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ac379b3c6d18ea45f11ed71b7058b35ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VECTOR3D</type>
      <name>speed</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>a460388fa5a0bb3ffa5ff9ee272b46c5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sz</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>aa147a14e3fbbd6eca3aca8f6d2292a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>acb5258af9c058f1d9589849b3e97a298</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>POINT2D</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>struct_p_o_i_n_t2_d</anchor>
    <member kind="variable">
      <type>COORD_VALUE</type>
      <name>x</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a61bba9fe5b5dd2a5ac89735d6a6eb808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>COORD_VALUE</type>
      <name>y</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a8665192346aa12d4c3d30ae180b86313</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>POINT3D</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>struct_p_o_i_n_t3_d</anchor>
    <member kind="variable">
      <type>COORD_VALUE</type>
      <name>x</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a6cffb2bd3428adb471a6825856375f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>COORD_VALUE</type>
      <name>y</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>acd598b4691d8a1098ac5a5f5d8185533</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>COORD_VALUE</type>
      <name>z</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a3fdfee2da9db0406b7738c8ee26f46ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>QUADTREE</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>struct_q_u_a_d_t_r_e_e</anchor>
    <member kind="variable">
      <type>compare_func</type>
      <name>compare</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a04d806a796a0a85f5d75e59170706fc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>coord_type</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a0f932f4491816e6841dd42ceb3517820</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>print_func</type>
      <name>print</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a036c4bcd4d7515bba1db6f1d181e7717</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>QUADTREE_NODE *</type>
      <name>root</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a5c3cf50dcb376196e0eaabbbd79f099b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>QUADTREE_NODE</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>struct_q_u_a_d_t_r_e_e___n_o_d_e</anchor>
    <member kind="variable">
      <type>void *</type>
      <name>data_ptr</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>aa7b23ca0dd807e767cf9fc164bce2d04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct QUADTREE_NODE *</type>
      <name>ne</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ac9bd3d4e3caf56a1e2952e3f99c255b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct QUADTREE_NODE *</type>
      <name>nw</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a08c90a4c24fbeeb3e463f66a8d7327d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>POINT2D</type>
      <name>point</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a0318bb734aef05078953623f68c6c0e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct QUADTREE_NODE *</type>
      <name>se</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>aac730a9b1aeb764f58da60d72c94b5ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct QUADTREE_NODE *</type>
      <name>sw</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a6beeda7ab265e945da9ad96093345f1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>COORD_VALUE</type>
      <name>x</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ace869a3271ab4a77d4d63e54e3a4cb57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>COORD_VALUE</type>
      <name>y</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a4b50c3918a32fd295a544aa891b98b4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>STACK</name>
    <filename>group___s_t_a_c_k.html</filename>
    <anchor>struct_s_t_a_c_k</anchor>
    <member kind="variable">
      <type>size_t</type>
      <name>head</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a0ad7f63d36bdcfa2032cf3390173f047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nb_items</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a230d0f42daba97d8bb83ab33a4b2221e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a3338e5cdd722f7d018b92f6f42f836c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>STACK_ITEM *</type>
      <name>stack_array</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a2579f5065d3d9bba33b9c2e0379dbbf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>tail</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a0acddcd1833899f504db8d31b8401208</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>STACK_DATA</name>
    <filename>group___s_t_a_c_k.html</filename>
    <anchor>union_s_t_a_c_k___d_a_t_a</anchor>
    <member kind="variable">
      <type>bool</type>
      <name>b</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a930322d5d4a3001e332dcf0a5f5d32e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>c</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a5d9dfd85beec76e71fdde9df086ab0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>d</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a2f586d69083da41f3068f366f07545fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a54e382351fea657cc32a6b8ce72121b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>i32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a5eb00bfb1992bae8b3f235a3729f00bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>i8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a25f5548b47dad372472caa0c3ee67309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>p</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a2e004525006fd504f157af63f4c8e808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ui32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ac12e6c5c5340dfd0da27f644824fb311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ui8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ac8efee971e398f84bdb3ef53dc03ebaf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>STACK_ITEM</name>
    <filename>group___s_t_a_c_k.html</filename>
    <anchor>struct_s_t_a_c_k___i_t_e_m</anchor>
    <member kind="variable">
      <type>union STACK_DATA</type>
      <name>data</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a2c1426000fc7ed72721888a29048ceb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_empty</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a0ace127da5b88bf44f319c5de05abd21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>is_set</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a9e9b9446a4d138064dff0c0063edd089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>p_type</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a29010c3d4427242c052db9a2b9323c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>v_type</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>a86142f2b0f815a91513a0d19653b763b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>THREAD_POOL</name>
    <filename>group___t_h_r_e_a_d_s.html</filename>
    <anchor>struct_t_h_r_e_a_d___p_o_o_l</anchor>
    <member kind="variable">
      <type>pthread_mutex_t</type>
      <name>lock</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>aeb127ec28e1d2dd253c51240af9b98cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>max_threads</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a16bd7b4120077f88fefc97241f7f5946</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nb_actives</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a9d1990e0f25d3507a26ac2c0fcfc114b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nb_max_waiting</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a06263e2d1289f8fa7c58202b5b377ed2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sem_t</type>
      <name>nb_tasks</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ab89ba543ef2377ea6f95cdc105a549d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>THREAD_POOL_NODE **</type>
      <name>thread_list</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a82a4f1f2900076822de004f357ef4e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST *</type>
      <name>waiting_list</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a86b5f24f3379eb4659ac2e6e06e8835d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>THREAD_POOL_NODE</name>
    <filename>group___t_h_r_e_a_d_s.html</filename>
    <anchor>struct_t_h_r_e_a_d___p_o_o_l___n_o_d_e</anchor>
    <member kind="variable">
      <type>void *(*</type>
      <name>func</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a34366b14ed447b68b13afc113589c367</anchor>
      <arglist>)(void *param)</arglist>
    </member>
    <member kind="variable">
      <type>pthread_mutex_t</type>
      <name>lock</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a3ca2e0acbf915da7544ae0b3e25d91fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>param</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>af2c6175edf922b474d70a8e9ba45ff67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>state</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a065b2419124f6d3824a182e3147bab43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sem_t</type>
      <name>th_end</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a3c5a612ab0de7b8b993e467d188166f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>sem_t</type>
      <name>th_start</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a61b83a1d85537e9891c4d176183468f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_t</type>
      <name>thr</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a6e5ec8ba0a3eadfcffbd8d97e0c2ac52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct THREAD_POOL *</type>
      <name>thread_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a5967276250129a50a2238ec5bee7d99e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>thread_state</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>acbfd0602c9f617ee1b8ed54747111a33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>type</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a1671454dbf63472ffa867ca84f0afb0f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>THREAD_WAITING_PROC</name>
    <filename>group___t_h_r_e_a_d_s.html</filename>
    <anchor>struct_t_h_r_e_a_d___w_a_i_t_i_n_g___p_r_o_c</anchor>
    <member kind="variable">
      <type>void *(*</type>
      <name>func</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ab96bd6795664db0829d2ebc3530ea6b8</anchor>
      <arglist>)(void *param)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>param</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>a22f53a970daf642828333cdc303bae37</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TREE</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>struct_t_r_e_e</anchor>
    <member kind="variable">
      <type>size_t</type>
      <name>height</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>af4e1a4e5dba9d8e4df479be03c91d311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nb_nodes</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a2dbc62b8c2602314739e47fe761cab32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TREE_NODE *</type>
      <name>root</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a0578d955e2fd167560aa9601557e6cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_rwlock_t</type>
      <name>rwlock</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a07530bf761421c63a4fe513a150e2578</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TREE_NODE</name>
    <filename>group___t_r_e_e.html</filename>
    <anchor>struct_t_r_e_e___n_o_d_e</anchor>
    <member kind="variable">
      <type>LIST *</type>
      <name>children</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>af563ac1605f5fbef1d8b5e502e21c0e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>NODE_DATA</type>
      <name>data</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>a6a5d3163c0cf36327ad2e713c235f0d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>destroy_func</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ac9d584186aba321fe75017a4fc17644e</anchor>
      <arglist>)(void *ptr)</arglist>
    </member>
    <member kind="variable">
      <type>struct TREE_NODE *</type>
      <name>parent</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>af4c59591ec26563f3c5d0fcff0774ed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LIST_NODE *</type>
      <name>parent_list_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>addbe0a8a22afa63cd9e69b19296dfe5a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>TS_LOG</name>
    <filename>group___l_o_g.html</filename>
    <anchor>struct_t_s___l_o_g</anchor>
    <member kind="variable">
      <type>FILE *</type>
      <name>file</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>a6a76aec4c92f3ec5fe144d43c7598d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>pthread_mutex_t</type>
      <name>LOG_MUTEX</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>a32664ef9397f6cd959979f9778791269</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>AABB3D</name>
    <title>AABB3D: simple space area management API</title>
    <filename>group___a_a_b_b3_d.html</filename>
    <class kind="struct">AABB3D</class>
    <member kind="typedef">
      <type>double</type>
      <name>AABB_VALUE</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga2e8c97586d46ff176f473eceb0e56b2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>AABB3D</type>
      <name>createAABB3D</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga43ab841f201f07c553777742c856fb26</anchor>
      <arglist>(AABB_VALUE xMin, AABB_VALUE yMin, AABB_VALUE zMin, AABB_VALUE xMax, AABB_VALUE yMax, AABB_VALUE zMax)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doAABB3DsIntersect</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga11fb7be12781cebf853e040aa6011877</anchor>
      <arglist>(AABB3D box1, AABB3D box2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPointInsideAABB3D</name>
      <anchorfile>group___a_a_b_b3_d.html</anchorfile>
      <anchor>ga2c1c28d9cb85d4507f492bab1bfa136c</anchor>
      <arglist>(AABB3D box, AABB_VALUE x, AABB_VALUE y, AABB_VALUE z)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ALLEGRO5</name>
    <title>ALLEGRO5: allegro 5 helpers (user input,...)</title>
    <filename>group___a_l_l_e_g_r_o5.html</filename>
    <member kind="function">
      <type>int</type>
      <name>get_keyboard</name>
      <anchorfile>group___a_l_l_e_g_r_o5.html</anchorfile>
      <anchor>ga89b632f62c41b87b68e83a086e302247</anchor>
      <arglist>(ALLEGRO_USTR *str, ALLEGRO_EVENT event)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>COMMONS</name>
    <title>COMMONS: macros, headers, defines, timers, allocators,...</title>
    <filename>group___c_o_m_m_o_n_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>__EXTENSIONS__</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab27cf1abd092548f1c51632e6ae35a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__n_assert</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga4ecf5d80299a4ca1dc13c3a19610db11</anchor>
      <arglist>(__ptr, __ret)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_nstr</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gaf0e29edead3f943a4ac241c5724e1384</anchor>
      <arglist>(__PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_nstrp</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gaab20080a93a62a08872d89824c4bad5d</anchor>
      <arglist>(__PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_str</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga55b9404f7bc9d3a3ead2f0103331a87e</anchor>
      <arglist>(__PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_strp</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga854188aa71e84f7d6222a7489a591e18</anchor>
      <arglist>(__PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_strw</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab4ed0ba398b0b3af910cc20e83be92bc</anchor>
      <arglist>(__PTR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Alloca</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga9b5f7ec4665998fd701e37404b731239</anchor>
      <arglist>(__ptr, __size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BYTEORDER_BIG_ENDIAN</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga92cc12b19b23eb27798b62d2d2f4e59f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BYTEORDER_LITTLE_ENDIAN</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga3188941b4d65de46471a2e1259fc0ca3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CALL_RETRY</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga9961907f2207345d0509e51f44063dcd</anchor>
      <arglist>(__retvar, __expression, __max_tries, __delay)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>checkerror</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gac1ba27872d9628ba6bd9b3f3637c7d91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONCAT</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga88fa737059e67b4b17ec980e5877361e</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONCAT_BUILDER</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab5cf9772871f6212ae61eed9a8085e30</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEFAULT</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga3da44afeba217135a680a7477b5e3ce3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>endif</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gaa0c1167bb311135eecf24a0e7c885b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>equal_if</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga2507d4d96edcb14310f82085f71dbaaa</anchor>
      <arglist>(__a, __cond, __b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALL_THROUGH</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga38dadd06badcc5b7cca444a551604399</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORCE_INLINE</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gac032d233a8ebfcd82fd49d0824eefb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Free</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gae62e40d702e99a7760ba1de7451dff51</anchor>
      <arglist>(__ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FreeNoLog</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga079dc7a6a7e7c54bb714d8bb2afdd022</anchor>
      <arglist>(__ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GET</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga982a66f513611f7f83ebfa4b4ecf1df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>get_error</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga3371dcfcd6c525e34365b24a8fa771b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>htonll</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga9f4bf0773c45ad9a9753a1b784a13fbb</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>iffalse</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga87abdb5c0b624dcece1581948069c7d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ifnull</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gaa5f3b6f21277a9bca948a416513d2ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>iftrue</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gac09d070286c09d3eec91a0d5b6ac934a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ifzero</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga79f7ceea3d6646ba0da25f4c3718b1ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>init_error_check</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gad61c57fd5997c83a0963edee62a8ac8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>init_lock</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga0499ff5244b948781a28466e35282c55</anchor>
      <arglist>(__rwlock_mutex)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Malloc</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga46bf052fc99248347a1dcf89bc0757c6</anchor>
      <arglist>(__ptr, __struct, __size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_CHDIR</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga4bc75ab84b64cc33d9b965464623624d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_CLOSE</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga55dfdd7e9a9821fd5f9625ae41889686</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_DOUBLE_FORK</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga32b3a5b8badb960c65dbe2ef8a25ef59</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_SETSID</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga6ffe0c4d51a62cf699d5a7843f5b974c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_SIGCHLD_HANDLER</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga5dd19041e566b3570809b28a65c9a1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_SIGCHLD_IGN</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga377a043238ac834707be06de92ef0647</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_STD_REDIRECT</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga62a4404f6b93780e7faf838f83b62d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_DAEMON_NO_UMASK</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga0eb2535c92dffb71fa91e4cbb8fdbec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>next_even</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab071667c91455646ba461bab87153182</anchor>
      <arglist>(__val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>next_odd</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga91f8e341935aec2e93df1fc823de9172</anchor>
      <arglist>(__val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ntohll</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga3cfcf123d4ead264289232f91f2c9ca5</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PAUSED</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga734b46dfd78fbf6fc938a6f9115f2cc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>randomize</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga05621aa5175411737c0f4c83fdaabbf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>read_lock</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gaeba0ec63ec0aa6803e9a601b645b5cbf</anchor>
      <arglist>(__rwlock_mutex)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Realloc</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gad648c6926fba90c2f092a5dd93d16a77</anchor>
      <arglist>(__ptr, __struct, __size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Reallocz</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga8b90b68c45c5c6f8d0bfbbabb5dc91ab</anchor>
      <arglist>(__ptr, __struct, __old_size, __size)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RUNNING</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga6fb7181d994ee98e735494be55809708</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>rw_lock_destroy</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga68d60dda02e374e8d2e38deb9aecadcd</anchor>
      <arglist>(__rwlock_mutex)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RWLOCK_LOGLEVEL</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gadc3b03aa67a4fbc1c653968b267ef431</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga59da1d65e87a723efe808dbabb4fc205</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STOPPED</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gae888d76ec9e058aa47eeaaa7917a470d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STOPWANTED</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga727b9108a0176d661faa6f725e9d2769</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>unlock</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga9bbd6f2ada0efec0afcdcaa60cc20474</anchor>
      <arglist>(__rwlock_mutex)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>write_lock</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gabf9cebcdf845c2c9b879a608be4c9dce</anchor>
      <arglist>(__rwlock_mutex)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>file_exist</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gae51b692bea533096e5839a3dc5500780</anchor>
      <arglist>(const char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_computer_name</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga67485891fad679694c6c74285c47c246</anchor>
      <arglist>(char *computer_name, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_prog_dir</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gab277acf7b61b1226c3cbb1811c1359e1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_prog_name</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga121f484b21cd361e6fa84b1720762922</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>log_environment</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga0b2464c1461e1fda88346e99bcbd7a9f</anchor>
      <arglist>(int loglevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_abort</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gacaf9e791d31308d5d43c0322b03ee322</anchor>
      <arglist>(char const *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_daemonize</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gad5e50936af9a3d6e4a23b33a90d7c66c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_daemonize_ex</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gac6d3a290c95fa17ddeea32956cc9b16b</anchor>
      <arglist>(int mode)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>n_get_file_extension</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga846a5d59871d3009ee6a7b158745b804</anchor>
      <arglist>(char path[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>N_HIDE_STR</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga34a5c334f51b8d04689aae82258992b1</anchor>
      <arglist>(char *buf,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sigchld_handler</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga7ec144a9a628442e52b80210bc8364ad</anchor>
      <arglist>(int sig)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sigchld_handler_installer</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>gacc0e695cf13f0eb3a00d5a1304508a73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>pid_t</type>
      <name>system_nb</name>
      <anchorfile>group___c_o_m_m_o_n_s.html</anchorfile>
      <anchor>ga7f94f8b09f7295ebe555617ffdac59db</anchor>
      <arglist>(const char *command, int *infp, int *outfp)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CONFIGFILE</name>
    <title>CONFIGURATIONS: classic config file loading/saving</title>
    <filename>group___c_o_n_f_i_g_f_i_l_e.html</filename>
    <class kind="struct">CONFIG_FILE</class>
    <class kind="struct">CONFIG_FILE_SECTION</class>
    <member kind="define">
      <type>#define</type>
      <name>config_endfor</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga2d2b6213151d9b9c50149149cffea041</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>config_foreach</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>gaa56fa5c30fab08e7145ab2640e12cde5</anchor>
      <arglist>(__config, __section_name, __key, __val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONFIG_SECTION_HASH_TABLE_LEN</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga3ed215f5c5f97f94ae329eca4c35e7cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_CONFIG_LINE_LEN</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga7186273cd88640b740b6333cd98ae243</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_config_file</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga5c6e573bf39871c909dcd71c9bcc13b4</anchor>
      <arglist>(CONFIG_FILE **cfg_file)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>get_config_section_value</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga8a974512566d42e72223876c8af53377</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *section_name, size_t section_position, char *entry, size_t entry_position)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nb_config_file_sections</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>gad45c7fe12c0acb44f6f54befa3e364b9</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *section_name)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>get_nb_config_file_sections_entries</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga1d4b7fa2d464616f3a5ac0641e952804</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *section_name, size_t section_position, char *entry)</arglist>
    </member>
    <member kind="function">
      <type>CONFIG_FILE *</type>
      <name>load_config_file</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga0206fadb78039ac602fc0696b27b85a6</anchor>
      <arglist>(char *filename, int *errors)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_config_file</name>
      <anchorfile>group___c_o_n_f_i_g_f_i_l_e.html</anchorfile>
      <anchor>ga1b22438cb7d7a274b748d49e555f7f50</anchor>
      <arglist>(CONFIG_FILE *cfg_file, char *filename)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CYPHER_BASE64</name>
    <title>CYPHERS: BASE64 (encode / decode) (from / to) a N_STR *string</title>
    <filename>group___c_y_p_h_e_r___b_a_s_e64.html</filename>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_base64_decode</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga24442d2563cc006d307273b236d0e515</anchor>
      <arglist>(N_STR *bufcoded)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_base64_encode</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga8bf1d83b3f1c485357a9ddc6ee5eb7c4</anchor>
      <arglist>(N_STR *string)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>n_isalpha</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga7dfc6b4d37b7a367238da83f2839e9e4</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>n_islower</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga4754b8b773a929548fe2aad386859bb5</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>n_isupper</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga2fd423ac5899e997358227574358a42e</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_tolower</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga06f46dcc4684717a4fcc1b3aa0d43c57</anchor>
      <arglist>(char c)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_toupper</name>
      <anchorfile>group___c_y_p_h_e_r___b_a_s_e64.html</anchorfile>
      <anchor>ga39ec073874feeaf9f85384015acd8a58</anchor>
      <arglist>(char c)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CYPHER_VIGENERE</name>
    <title>CYPHERS: VIGENERE (encode / decode) a (N_STR / file) with a root key or a combination of a question and an answer</title>
    <filename>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>n_mathmod</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga37acef425eff0f48c69ef284bbf9378e</anchor>
      <arglist>(__a, __b)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_decode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga2e26b8c1f8bdf96057904eaa1c7bc92c</anchor>
      <arglist>(N_STR *string, N_STR *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_decode_file</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gaad821764c722b2e469ab5c54278c6023</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *rootkey)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_decode_file_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga1be4bd0f3b4410ebe4cd4240b804338c</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_decode_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga6c11d1e142ec3b1617128d1425f46174</anchor>
      <arglist>(N_STR *input_data, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_encode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga91ad0ccfda4700a5bc1a7a85488d60b2</anchor>
      <arglist>(N_STR *string, N_STR *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_encode_file</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga95f517e677af864def2a14af9196d596</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *rootkey)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_vigenere_encode_file_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga5ed58e0fb772ca9e2a8b9679b29c08d7</anchor>
      <arglist>(N_STR *in, N_STR *out, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_encode_qa</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga08551983c3b919de08ad1c35e0819d28</anchor>
      <arglist>(N_STR *input_data, N_STR *question, N_STR *answer)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_get_answer</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga39a0e0c7d46e5adece091d682fcc87bd</anchor>
      <arglist>(N_STR *root_key, N_STR *question)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_get_question</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gae9d3c2b1247c0c79267521bcfcaf9079</anchor>
      <arglist>(size_t question_size)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_get_rootkey</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gaced1d3aa9c799ea8bde399f864f3c8fa</anchor>
      <arglist>(size_t rootkey_size)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_quick_decode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>gaf9f2b64e60dd5e79279cc32ac7ff8886</anchor>
      <arglist>(N_STR *encoded_question)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>n_vigenere_quick_encode</name>
      <anchorfile>group___c_y_p_h_e_r___v_i_g_e_n_e_r_e.html</anchorfile>
      <anchor>ga26872672f67b7c89b6fa9fa01d59ac00</anchor>
      <arglist>(N_STR *decoded_question)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ENUMS</name>
    <title>ENUMERATIONS: quick and clean enum macro set</title>
    <filename>group___e_n_u_m_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DECLARE_ENUM</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga266b4f5d6f1e76c7eeef977e56cc3bde</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DECLARE_FUNCTION</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga377972fbae05d71dc8fabb1c1877911a</anchor>
      <arglist>(__N_ENUM_FUNCTION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DEFINE_FUNCTION_FROMSTRING</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga964177636600e258e32a8e012d7a007c</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DEFINE_FUNCTION_FROMSTRING_EX</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaaa8085ccfc20546b0018f9b632b0e4f2</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DEFINE_FUNCTION_ISSTRINGVALID</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga2105eb154565384ade84819bacf2887f</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DEFINE_FUNCTION_ISVALID</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gab3b5dd061164258de176f7ffa32fe145</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_DEFINE_FUNCTION_TOSTRING</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gabf6a172751734c61d3a085d2d84ad2c1</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_FUNCTION_FROMSTRING</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga3a40084aa4bdf489237d2437c0d4f68e</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_FUNCTION_FROMSTRING_EX</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaccb1c4c04fcc83762dfb9b97f435e069</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_FUNCTION_ISSTRINGVALID</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga63ef0e997e10478272e01be3e9e79b12</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_FUNCTION_ISVALID</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga457e9b5dfd4600f929d19dbd2677ebae</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_FUNCTION_TOSTRING</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaf27507c501fad25c140309888736763d</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_CASE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga15b8c5b39d53fd3feeec705f26838457</anchor>
      <arglist>(element_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_COMPARE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga611385c769937552a14ddc6844ed1cc9</anchor>
      <arglist>(element_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_COMPARE_EX</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga4976594d1caebbc9650ed6fb2d14b647</anchor>
      <arglist>(element_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_ENUM_ELEMENT</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga44ac43fb5c85d2e40005dbdf51b9a74f</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_FROMSTRING_COMPARE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga3c89e08bc779d815e66dcc9f8870e481</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_FROMSTRING_COMPARE_EX</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga9c316b8c7098a29d612f20fd8af29fca</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_ISSTRINGVALID_COMPARE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gae3044692829a9375b5adf420dc3b2dd8</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_ISVALID_CASE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaa03912305f1c13c17b4a210b86b6640c</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_TO_TOSTRING_CASE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga9b3d5b92ca460075d6c62b4a9050ae4e</anchor>
      <arglist>(element_name, element_value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>__N_ENUM_MACRO_ENTRY_UNKNOWN_VALUE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga84ad941920c5aadc7673145666b830d8</anchor>
      <arglist>(enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_ENUM_DECLARE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>ga5e228b797b1b9eaba4cde8fbd0bf67e6</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_ENUM_DEFINE</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaa8f74897a9d29d0a5e3465a63a532668</anchor>
      <arglist>(MACRO_DEFINITION, enum_name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_ENUM_ENTRY</name>
      <anchorfile>group___e_n_u_m_s.html</anchorfile>
      <anchor>gaea85b76e3e616598be8af94c93581532</anchor>
      <arglist>(class, method)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>EXCEPTIONS</name>
    <title>EXCEPTIONS: C++ style try,catch,endtry,throw</title>
    <filename>group___e_x_c_e_p_t_i_o_n_s.html</filename>
    <class kind="struct">ExceptionContextList</class>
    <member kind="define">
      <type>#define</type>
      <name>ARRAY_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gabc660e09e2c417997846e1cb4dbad16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Catch</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gac211d2a791b3dbdf25ffcaa8f8ab47b8</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CatchAll</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gab41d12224c2a8a71eae37b6fd220e65b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIVZERO_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gadde7ae9cb7a05cd3556323c73255d296</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EndTry</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gafe2b5d1eabd8fc42c0f9b705f7ffd5ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GENERAL_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga7c281c3c51b0c8d457ab24de9e05a40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gabde388354010f32706dda5f3b7877c6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OVERFLOW_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga228aeb917ba34e655f8b33f33ea08df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARSING_EXCEPTION</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gab7d2e60cf7a0d9526792ab07f5ea1d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Throw</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga0193ae08c69e967b76172464d544db04</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Try</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga7a2b8ccf41cff483bac8e86ac7feff9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_exception</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga040ac853d9c68fa155c04bc20c51e3cb</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_exception</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>gad0ba3a133eaeab182a4ed4e64dd44a85</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="variable">
      <type>ExceptionContextList *</type>
      <name>__Exceptions</name>
      <anchorfile>group___e_x_c_e_p_t_i_o_n_s.html</anchorfile>
      <anchor>ga8778d850622ce846f599b34fa2f40cc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>N_FILES</name>
    <title>FILES: files utilies</title>
    <filename>group___n___f_i_l_e_s.html</filename>
    <class kind="struct">N_FILE_INFO</class>
    <member kind="function">
      <type>void</type>
      <name>n_free_file_info</name>
      <anchorfile>group___n___f_i_l_e_s.html</anchorfile>
      <anchor>gaba9ea91ca9b32e1690af2345a0bc1391</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_scan_dir</name>
      <anchorfile>group___n___f_i_l_e_s.html</anchorfile>
      <anchor>gab9ee9adcfef9402898e287664829ceef</anchor>
      <arglist>(const char *dir, LIST *result, const int recurse)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>N_FLUIDS</name>
    <title>FLUIDS: fluid simulation example</title>
    <filename>group___n___f_l_u_i_d_s.html</filename>
    <class kind="struct">N_FLUID</class>
    <class kind="struct">N_FLUID_THREAD_PARAMS</class>
    <member kind="define">
      <type>#define</type>
      <name>_z</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga600f1725bfa6a715da65daeb83d3125f</anchor>
      <arglist>(__fluid, __componant)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_zd</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gad422c2ed5e4306e7f61afbf88e88ab0d</anchor>
      <arglist>(__fluid, __value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_n_fluid</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gaed3b9ded2024759357ae1ba942f978c2</anchor>
      <arglist>(N_FLUID **fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_advectSmoke</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga809d22be5668d07181fb9999b52bf56f</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_advectVel</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gafb7618eec92414d3d74933b4e982fc62</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>n_fluid_avgU</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga6d61b152b1deafabfb977b7d3181f70d</anchor>
      <arglist>(N_FLUID *fluid, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>n_fluid_avgV</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga09cbf3ce58daef2dc1d874d1571d0898</anchor>
      <arglist>(N_FLUID *fluid, size_t i, size_t j)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_draw</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga386df773d1b7d98ffd6c1d2f98cf5091</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_extrapolate</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga7f32b5a83ee253026673b6baef3ab4c3</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>ALLEGRO_COLOR</type>
      <name>n_fluid_getSciColor</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga7f30f7cfedc3a79d484ad155a96f1db0</anchor>
      <arglist>(N_FLUID *fluid, double val, double minVal, double maxVal)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_integrate</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gadfa079fd795393db4c9ed68aa7338ca2</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_resetObstacles</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gacb82683a9afbf14c7b2b043451d4cffa</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>n_fluid_sampleField</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga746c88f5fa990a5d43602d595b587437</anchor>
      <arglist>(N_FLUID *fluid, double x, double y, uint32_t field)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_setObstacle</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gadfddee52df3d3270958f38d8127c6672</anchor>
      <arglist>(N_FLUID *fluid, double x, double y, double vx, double vy, double r)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_simulate</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga690a4558c5b3d5eafdf1d7b64af5858f</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_simulate_threaded</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga580ecc1e497035ce47b272309fcf22c8</anchor>
      <arglist>(N_FLUID *fluid, THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_fluid_solveIncompressibility</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>ga8e25eb0a7b98e8ccc135703f584db37c</anchor>
      <arglist>(N_FLUID *fluid)</arglist>
    </member>
    <member kind="function">
      <type>N_FLUID *</type>
      <name>new_n_fluid</name>
      <anchorfile>group___n___f_l_u_i_d_s.html</anchorfile>
      <anchor>gaff6f6732139e8c294f6affe1d594e8d2</anchor>
      <arglist>(double density, double gravity, size_t numIters, double dt, double overRelaxation, size_t sx, size_t sy)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GAME_ENV</name>
    <title>GAME APPS: game environment management utilities</title>
    <filename>group___g_a_m_e___e_n_v.html</filename>
    <class kind="struct">GAME_ENV</class>
    <member kind="define">
      <type>#define</type>
      <name>CPU_USE_FULL</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ga84d4d6cd71758c35c7aefbb8e3684c22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPU_USE_LESS</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ga5bb1d90aeda09d9646e3c19f632251d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CPU_USE_NICE</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>gaf442dcd3e6a11816794a1150ac94bbde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy_game_env</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>ga47fd0bb7f6db4234af06b5ebafb18837</anchor>
      <arglist>(GAME_ENV **game)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_game_env</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>gab086402feba2e0fe1845453a8d899bf6</anchor>
      <arglist>(GAME_ENV **game)</arglist>
    </member>
    <member kind="function">
      <type>GAME_ENV *</type>
      <name>load_game_config</name>
      <anchorfile>group___g_a_m_e___e_n_v.html</anchorfile>
      <anchor>gaa343f04284422e7cfafa561b82c8f4f3</anchor>
      <arglist>(char *config_name)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PARTICLES</name>
    <title>GRAPHICS: 3D particles utilities</title>
    <filename>group___p_a_r_t_i_c_l_e_s.html</filename>
    <class kind="struct">PARTICLE</class>
    <class kind="struct">PARTICLE_SYSTEM</class>
    <member kind="define">
      <type>#define</type>
      <name>BITMAP_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga3ff8114200b93147ade488aeb96f41a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CIRCLE_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga01868fa6d6e4c79b56fdfe9b4dc80215</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FIRE_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga2aa8d618d2d413883ade289da2e4941a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NORMAL_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga0f1bd6a28afe52df05802230fa440b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PIXEL_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga256f505114d27985957313a4a0b2d9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SINUS_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gaa0ac5e168a8b0aa14dbff01dd569a598</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNOW_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gacbfe2274aa037b8e331b9485e95b1c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STAR_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gafc693964956e87207d950ee952fa2c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEXT_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga7256f319a5807b336a5cd9f83fd03c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRANS_PART</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga661ec824b54dfdf70f6a737ab8bdaef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_particle</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gae8252f1cd818ef45e20e7d4c54351d2e</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, int spr, int mode, int lifetime, int size, ALLEGRO_COLOR color, PHYSICS object)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_particle_ex</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gad8c6a1f791072a6485af0439a3c4d94f</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, int spr, int mode, int off_x, int off_y, int lifetime, int size, ALLEGRO_COLOR color, double vx, double vy, double vz, double ax, double ay, double az)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>draw_particle</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga09e19e83e2251d87db737b6b702a7d70</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, double xpos, double ypos, int w, int h, double range)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_particle_system</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga80e275b9835fae499b29b6082c29970c</anchor>
      <arglist>(PARTICLE_SYSTEM **psys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_particle_system</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>gaf00630a2c4eaa468e124fe4d9557c825</anchor>
      <arglist>(PARTICLE_SYSTEM **psys, int max, double x, double y, double z, int max_sprites)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>manage_particle</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga8a92ddb62fe9f945d5baed9d22938a10</anchor>
      <arglist>(PARTICLE_SYSTEM *psys)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>manage_particle_ex</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga3bd6b6f5b679348fb4d24e0524be4edf</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>move_particles</name>
      <anchorfile>group___p_a_r_t_i_c_l_e_s.html</anchorfile>
      <anchor>ga1a20afdfa79e8cc5ee3f214ab34ca96d</anchor>
      <arglist>(PARTICLE_SYSTEM *psys, double vx, double vy, double vz)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ANIM_LIB</name>
    <title>GRAPHICS: animation library, loading structures and blit funcs</title>
    <filename>group___a_n_i_m___l_i_b.html</filename>
    <class kind="struct">ANIM_DATA</class>
    <class kind="struct">ANIM_FRAME</class>
    <class kind="struct">ANIM_GFX</class>
    <class kind="struct">ANIM_LIB</class>
    <member kind="function">
      <type>int</type>
      <name>add_bmp_to_lib</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga4cf34c94b752318abd8d5b856b062a13</anchor>
      <arglist>(ANIM_LIB *lib, unsigned int pos, char *file, char *resfile)</arglist>
    </member>
    <member kind="function">
      <type>ANIM_LIB *</type>
      <name>create_anim_library</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga81c2c337d299fe619c2fada4e261181d</anchor>
      <arglist>(char *name, unsigned int size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delete_bmp_from_lib</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga358bc55590e5dcdecf5ae5299ffd12dc</anchor>
      <arglist>(ANIM_LIB *lib, unsigned int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_anim_lib</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>gacbbe4efe3e6f10bd7d47e82a11f62b7b</anchor>
      <arglist>(ANIM_LIB **lib)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>draw_anim</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>ga4f778dfddf8d3015fe1be3e5a13a636a</anchor>
      <arglist>(ANIM_DATA *data, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_anim</name>
      <anchorfile>group___a_n_i_m___l_i_b.html</anchorfile>
      <anchor>gab4c26f5aa2303d73fd7b4a4ff4f3899f</anchor>
      <arglist>(ANIM_DATA *data, unsigned int delta_t)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ISOMETRIC_ENGINE</name>
    <title>GRAPHICS: isometric engine, maps, tiles, ...</title>
    <filename>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</filename>
    <class kind="struct">CELL</class>
    <class kind="struct">MAP</class>
    <member kind="define">
      <type>#define</type>
      <name>BLCK</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gae0863acc1b854b0f522caf85f9651f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_ABILITY</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gac3020f81c4af6587694d3068728560db</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_MUSIC</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga86e6af08f2c7a754c9ad414fd17a6e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_OBJECT</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga7300ffd75554bf5829e66684e9d66841</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_TILE</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga942503317c8fd73c07f63baff1f41fa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWIM</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga154a04fc36112a0bbaf49752569165e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WALK</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga4083fcbe80d42575b0336ddbf4ebc622</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>camera_to_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga525e12d4a6810091df368bebfead7432</anchor>
      <arglist>(MAP **map, int tx, int ty, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>camera_to_scr</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga78d7a5ad73f85f937963b3619f65b0d7</anchor>
      <arglist>(MAP **map, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>create_empty_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gafbd6e8d63e4a9bffb9bae939e6f33d95</anchor>
      <arglist>(MAP **map, char *name, int XSIZE, int YSIZE, int TILEW, int TILEH, int nbmaxobjects, int nbmaxgroup, int nbmaxanims, int nbtiles, int nbanims)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>draw_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gadbfcc4dbd27990aa04aa68b3434480ef</anchor>
      <arglist>(MAP *map, BITMAP *bmp, int destx, int desty, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gafa40b1cd0683fd3a0088d759b8f4a57b</anchor>
      <arglist>(MAP **map)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_value</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga2021990e7c7fa6c4589752a771aa48f3</anchor>
      <arglist>(MAP *map, int type, int x, int y)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>load_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga4d6c75959391f3afd98d81a1773ffe84</anchor>
      <arglist>(MAP **map, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>save_map</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga045b27c2f11572951f654b62ede9baa0</anchor>
      <arglist>(MAP *map, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ScreenToMap</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>gadfbec14d5cfbe60a7034d59022a97cb3</anchor>
      <arglist>(int mx, int my, int *Tilex, int *Tiley, BITMAP *mousemap)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_value</name>
      <anchorfile>group___i_s_o_m_e_t_r_i_c___e_n_g_i_n_e.html</anchorfile>
      <anchor>ga8366c42e9ace1872eaad8efda0e9a244</anchor>
      <arglist>(MAP *map, int type, int x, int y, int value)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>GUI</name>
    <title>GUI: macros, headers, defines, timers, allocators,...</title>
    <filename>group___g_u_i.html</filename>
    <class kind="struct">N_GUI_DIALOG</class>
    <class kind="struct">N_GUI_LAYOUT</class>
    <class kind="struct">N_GUI_TOKEN</class>
    <class kind="struct">N_GUI_TOKENIZER</class>
    <class kind="struct">N_GUI_WIDGET</class>
    <member kind="define">
      <type>#define</type>
      <name>N_ENUM_N_GUI_TOKEN</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gaf2afa0b732e332f496e61d1bff2a2f4d</anchor>
      <arglist>(_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_GUI_MAX_TOKEN_SIZE</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gaa28cc091550f66481cc38b9804a83743</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>N_ENUM_DECLARE</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga507018ef1e5fe4e5b5aee8d9fa0a5ec6</anchor>
      <arglist>(N_ENUM_N_GUI_TOKEN, __N_GUI_TOKEN)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_gui_init_tokenizer</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gae99c392c9fb96c015d63b94c85daa1b3</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer, const char *input)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_gui_is_eof</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga8d8625d7ac14319879e0047d7136f3a2</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer)</arglist>
    </member>
    <member kind="function">
      <type>N_GUI_DIALOG *</type>
      <name>n_gui_load_dialog</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gaa001a67d3dfbe86cd0681e7754d3b7c0</anchor>
      <arglist>(char *html, char *css)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_gui_next_char</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga1f0db0c4346487cfd4bd609490ba6d4a</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer)</arglist>
    </member>
    <member kind="function">
      <type>N_GUI_TOKEN</type>
      <name>n_gui_next_token</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>gafcfdcbab5869f058444bb97336349281</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer, bool *inside_open_tag)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>n_gui_peek_char</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga9f1d350ceb9a6bc872de0dc60b4501fe</anchor>
      <arglist>(N_GUI_TOKENIZER *tokenizer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_gui_print_token</name>
      <anchorfile>group___g_u_i.html</anchorfile>
      <anchor>ga32d003db7bacada0232ee36eb8b544d6</anchor>
      <arglist>(N_GUI_TOKEN token)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>HASH_TABLE</name>
    <title>HASH TABLES: classic or trie tree hash_tables</title>
    <filename>group___h_a_s_h___t_a_b_l_e.html</filename>
    <class kind="union">HASH_DATA</class>
    <class kind="struct">HASH_NODE</class>
    <class kind="struct">HASH_TABLE</class>
    <member kind="define">
      <type>#define</type>
      <name>HASH_CLASSIC</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaaf679be9dbe3da9e0b18126584fc276f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_DOUBLE</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga567061089afaa05f04d40a1e076a5705</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_INT</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gae5cab5caf80df2b545b79010e58c930e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_PTR</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga380f9944f2162350b1fc52f1e20cf47c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_STRING</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga610bced429f9d429f9b54d69135e9253</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_TRIE</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gac2850d8278af32c2e76e7ab856902bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_UNKNOWN</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gafd04f4d8463ac67a011caef42b109595</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>hash_val</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaeb031d4f0f896b1802b9c27e62f28d14</anchor>
      <arglist>(node, type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HASH_VAL</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga8e695e90d977acedccfe2e79148cf29e</anchor>
      <arglist>(node, type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ht_foreach</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga072f117e6bd9fdde0d39776764b8784e</anchor>
      <arglist>(__ITEM_, __HASH_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HT_FOREACH</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaf1c2ece096867efb7c26d301f160176c</anchor>
      <arglist>(__ITEM_, __HASH_,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HT_FOREACH_R</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga23715b66af50d3cfa4ca46649274f283</anchor>
      <arglist>(__ITEM_, __HASH_, __ITERATOR,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ht_foreach_r</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2d5dc4bd5bcf119740bd59199cae7a4c</anchor>
      <arglist>(__ITEM_, __HASH_, __ITERATOR_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MurmurHash</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga39d803f4f98826a27d1fb06c547c4038</anchor>
      <arglist>(__key, __len, __seed, __out)</arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>HASH_VALUE</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga6c86061eb14e5e2f9643af9880afd2a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga22a943135dbcdb1611b40ce0547111ce</anchor>
      <arglist>(HASH_TABLE **table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga5d2235e91b2b6b70129246897442f8d5</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>LIST *</type>
      <name>ht_get_completion_list</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga65d64120ef6c7fc1a08e6870b00996db</anchor>
      <arglist>(HASH_TABLE *table, const char *keybud, size_t max_results)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_double</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga502f7dbc79e94de757ef1cab4fb73559</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double *val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_int</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2ad18ed107f9e01ff8c7ef666293034f</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE *val)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>ht_get_node</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gab06eec66b0398db0948d911383816277</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>HASH_NODE *</type>
      <name>ht_get_node_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2defd7b222fb9cf155d0287b56e90c50</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>ht_get_optimal_size</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga77abac901ee0e46a85c45c4203a2e44b</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga009f66a508dcea120e0cd2b34805e5a2</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_ptr_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gafc8e7f91865edfe1cb18639f16e72c46</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value, void **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_string</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga833854027692b398d675388aa548e892</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char **val)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_get_table_collision_percentage</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga484b7c7f330914d21fafbf582713fc07</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>ht_node_type</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga1392981a507905d028136bc0b92aa48b</anchor>
      <arglist>(HASH_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_optimize</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gadf9786c2b5844999ebb011ab56746047</anchor>
      <arglist>(HASH_TABLE **table)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ht_print</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga62ef2a517efcbc464f0103995f28c3e8</anchor>
      <arglist>(HASH_TABLE *table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_double</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga6d77292f765050e2afc7735218ff242b</anchor>
      <arglist>(HASH_TABLE *table, const char *key, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_int</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga97d04c1584c2c3a794143a6362fd96c8</anchor>
      <arglist>(HASH_TABLE *table, const char *key, HASH_INT_TYPE value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gacca20eb3be4375556ac43122405dceda</anchor>
      <arglist>(HASH_TABLE *table, const char *key, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_ptr_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga0ee0ebca02acb68a78c91fc8dfb30ef3</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value, void *val, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_string</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga90fe9fc425a2077cffd1f4aa68cb6c6a</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_put_string_ptr</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaee367d5c4ee2479096ab943cacb1464e</anchor>
      <arglist>(HASH_TABLE *table, const char *key, char *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_remove</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga2dc87273d3e6b3492d88f2bd7288102e</anchor>
      <arglist>(HASH_TABLE *table, const char *key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_remove_ex</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga9fc743323b4302e50c95df26ca57d468</anchor>
      <arglist>(HASH_TABLE *table, HASH_VALUE hash_value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ht_resize</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga941824c3bad16549d062908475ff36a6</anchor>
      <arglist>(HASH_TABLE **table, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>LIST *</type>
      <name>ht_search</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga16446a54727b375dfd0c92704dc39995</anchor>
      <arglist>(HASH_TABLE *table, int(*node_is_matching)(HASH_NODE *node))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MurmurHash3_x64_128</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga9bac809d8768dc7f07d1049be596f931</anchor>
      <arglist>(const void *key, const size_t len, const uint64_t seed, void *out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MurmurHash3_x86_128</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga9485f626bdfb456f4ad53453f635b4e9</anchor>
      <arglist>(const void *key, const size_t len, const uint32_t seed, void *out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MurmurHash3_x86_32</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gaed0f585f6848a774ec3d58a89a7940f0</anchor>
      <arglist>(const void *key, const size_t len, const uint32_t seed, void *out)</arglist>
    </member>
    <member kind="function">
      <type>HASH_TABLE *</type>
      <name>new_ht</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>ga3890b11d41766a859d4e55976ec02acb</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>HASH_TABLE *</type>
      <name>new_ht_trie</name>
      <anchorfile>group___h_a_s_h___t_a_b_l_e.html</anchorfile>
      <anchor>gab4f188252880ce2d4f5b1082775b7385</anchor>
      <arglist>(size_t alphabet_size, size_t alphabet_offset)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>N_KAFKA</name>
    <title>KAFKA: generic event producer and consumer functions</title>
    <filename>group___n___k_a_f_k_a.html</filename>
    <class kind="struct">N_KAFKA</class>
    <class kind="struct">N_KAFKA_EVENT</class>
    <member kind="define">
      <type>#define</type>
      <name>N_KAFKA_EVENT_CREATED</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gade5799ed950dfdd5e090dba268b0e07b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_KAFKA_EVENT_ERROR</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga1b5022c7a65f9c85bbf2804a3da07c2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_KAFKA_EVENT_OK</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga11ab59456abb5928280f41a57eaa833b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_KAFKA_EVENT_QUEUED</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaea95b9288487b68851b20e2d9b5d550e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_KAFKA_EVENT_WAITING_ACK</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga560e6b3170b43d0b31ff794923d4e12f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_add_header</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga9e626e04be1ebeaf66f4690ddf9ab996</anchor>
      <arglist>(N_KAFKA_EVENT *event, N_STR *key, N_STR *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_add_header_ex</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga02c9289324eed7dae0f404f128a2a626</anchor>
      <arglist>(N_KAFKA_EVENT *event, char *key, size_t key_length, char *value, size_t value_length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_kafka_delete</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gafe936c186c71e469556dcdb352d94697</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_dump_unprocessed</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga09d26dcdf88d9ed197b887ac73aac5ec</anchor>
      <arglist>(N_KAFKA *kafka, char *directory)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_event_destroy</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga7a0a6d08bd00098b411d243c65534aa6</anchor>
      <arglist>(N_KAFKA_EVENT **event)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>n_kafka_event_destroy_ptr</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga84613bb586cff1a0584656556b5ad267</anchor>
      <arglist>(void *event)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_get_event</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga0e9dae2d98bf5324af1b460b2599f1c7</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>n_kafka_get_schema_from_char</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga2bc6a0682f46b656bba51e8ee29b43b9</anchor>
      <arglist>(char *string)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>n_kafka_get_schema_from_nstr</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gab21424947e9b6e88a8adcd0488449899</anchor>
      <arglist>(N_STR *string)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_get_status</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gab453f1e6a379817d36d540d41ec377dd</anchor>
      <arglist>(N_KAFKA *kafka, int *nb_queued, int *nb_waiting, int *nb_error)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA *</type>
      <name>n_kafka_load_config</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga4cd1e248364550d5c17f6320ff68d047</anchor>
      <arglist>(char *config_file, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_load_unprocessed</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga85fbd895edbc1e30be58e8c52c33e329</anchor>
      <arglist>(N_KAFKA *kafka, char *directory)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA *</type>
      <name>n_kafka_new</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gae6d98c08b5722169f89ed163da77a610</anchor>
      <arglist>(int64_t poll_timeout, int64_t poll_interval, size_t errstr_len)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gac903845a2fb184abee410a713c3890f9</anchor>
      <arglist>(int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event_from_char</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaaf3a94133f843704a780b74aa03ed7ca</anchor>
      <arglist>(char *string, size_t written, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event_from_file</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gae1089b7890f335af01618cfa736b2022</anchor>
      <arglist>(char *filename, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>N_KAFKA_EVENT *</type>
      <name>n_kafka_new_event_from_string</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaff933a80c25dd942e8363ea19edcf551</anchor>
      <arglist>(N_STR *string, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_new_headers</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga25ac2b613c382318a74e9076b7336349</anchor>
      <arglist>(N_KAFKA_EVENT *event, size_t count)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_poll</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga6553559587621a3667ed71565db20926</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_produce</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaad8abd310e8055d6f99dacc841e5bde8</anchor>
      <arglist>(N_KAFKA *kafka, N_KAFKA_EVENT *event)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_put_schema_in_char</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga6167f6e8b0e9d485797bc524162cbf3f</anchor>
      <arglist>(char *string, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_put_schema_in_nstr</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>ga365ccb4d2d1601cd9d7c11fcf4acc1c9</anchor>
      <arglist>(N_STR *string, int schema_id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_start_pooling_thread</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gab5930c8ff78f4a853b5a5c140414aec0</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>n_kafka_stop_pooling_thread</name>
      <anchorfile>group___n___k_a_f_k_a.html</anchorfile>
      <anchor>gaa5e76f5452306e99a18eb31d59aa4df1</anchor>
      <arglist>(N_KAFKA *kafka)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>LIST</name>
    <title>LISTS: generic type list</title>
    <filename>group___l_i_s_t.html</filename>
    <class kind="struct">LIST</class>
    <class kind="struct">LIST_NODE</class>
    <member kind="define">
      <type>#define</type>
      <name>link_node</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga720a8cd6c95044b33d3c952e5dadebc3</anchor>
      <arglist>(__NODE_1, __NODE_2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>list_foreach</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga55cdaac0dd0f4f4d687607e6679a4634</anchor>
      <arglist>(__ITEM_, __LIST_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>list_pop</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga1b74755b55e46d1f993985b5979029bd</anchor>
      <arglist>(__LIST_, __TYPE_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>list_shift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga1109e1a0b5996fb3c362ad243e2f8f80</anchor>
      <arglist>(__LIST_, __TYPE_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_LIST_ITEMS</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gaeed14812a05ce9c87072e63600bb9169</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>remove_list_node</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga60b976800febfa81b17177509341d6d9</anchor>
      <arglist>(__LIST_, __NODE_, __TYPE_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNLIMITED_LIST_ITEMS</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga0fa05dd93ab10dd6211de4ae51f9ffdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_destroy</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga90d32fef68ce6f3ec0a7b4085690c755</anchor>
      <arglist>(LIST **list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_empty</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga1dafe7a250ddad51fadd375f057287e7</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_empty_with_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gae77e34ac35b77e9d1b3124536aa77722</anchor>
      <arglist>(LIST *list, void(*free_fnct)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_node_pop</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga995d2bd9082e103a8dec39958e3a7eb7</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_node_push</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gafdc5e3efd8a9244161b52fcb24760b0e</anchor>
      <arglist>(LIST *list, LIST_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_node_shift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga65791a797732c74dc66948a014479328</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_node_unshift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga50d70b3c943c22fb97d50801a8bd8381</anchor>
      <arglist>(LIST *list, LIST_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>list_pop_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga0a1ce227da1f0c6bac9cd02e2d6b36c0</anchor>
      <arglist>(LIST *list)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_push</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga4eab319289a83524639ee5e9f0441fdf</anchor>
      <arglist>(LIST *list, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_push_sorted</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gae582df4f7b31ccc5a6a026ffd8ea9555</anchor>
      <arglist>(LIST *list, void *ptr, int(*comparator)(const void *a, const void *b), void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_search</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gae009d6d3c835a2affb99071ea8457803</anchor>
      <arglist>(LIST *list, void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>list_search_with_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gaecb20955816170bab5035b81e98e043d</anchor>
      <arglist>(LIST *list, int(*checkfunk)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>list_shift_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga12076f8c3ab2687b6891bb6ee224a76e</anchor>
      <arglist>(LIST *list, char *file, size_t line)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_unshift</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga65687bd547104e185bad1b7da5cb0d98</anchor>
      <arglist>(LIST *list, void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>list_unshift_sorted</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga98e4e6e168d82f062e987ef578ce8e43</anchor>
      <arglist>(LIST *list, void *ptr, int(*comparator)(const void *a, const void *b), void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>LIST_NODE *</type>
      <name>new_list_node</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>ga678e828550efc8e64a836bb8c713c2f4</anchor>
      <arglist>(void *ptr, void(*destructor)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>remove_list_node_f</name>
      <anchorfile>group___l_i_s_t.html</anchorfile>
      <anchor>gabd7f04c5a1cd8307c0f289dcccdb5a41</anchor>
      <arglist>(LIST *list, LIST_NODE *node)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>LOGNODUP</name>
    <title>LOGGING NODUP: no duplicate logging to console, to file, to syslog</title>
    <filename>group___l_o_g_n_o_d_u_p.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>n_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga31e622f597bb984c82396227807d774c</anchor>
      <arglist>(__LEVEL__,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>n_nodup_log_indexed</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga687f9d1a376aa019c5d4c082dee370ef</anchor>
      <arglist>(__LEVEL__, __PREF__,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_n_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga650828539395216dd2f4f28da5131c42</anchor>
      <arglist>(int LEVEL, const char *file, const char *func, int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_n_nodup_log_indexed</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>gacbf9e2a1400ab6f00a30186d9a5c4683</anchor>
      <arglist>(int LEVEL, const char *prefix, const char *file, const char *func, int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>close_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga46eca069bfff2be6809828df52d1031d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dump_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga38552b9724c76daede8b3c30833e9d09</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_nodup_table</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>ga823d1d2f22f2279e24d4c5bd927ff322</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>init_nodup_log</name>
      <anchorfile>group___l_o_g_n_o_d_u_p.html</anchorfile>
      <anchor>gaf9c9b8e129263da15345f428cd73f19e</anchor>
      <arglist>(int max)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>LOG</name>
    <title>LOGGING: logging to console, to file, to syslog, to event log</title>
    <filename>group___l_o_g.html</filename>
    <class kind="struct">TS_LOG</class>
    <member kind="define">
      <type>#define</type>
      <name>LOG_ALERT</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga12b2a3bb9e3adfeb35b4e5514e7d9043</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_CRIT</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gaaa731313f5c63e855fefb5f6519c3283</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_DEBUG</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga6ff63e8955665c4a58b1598f2b07c51a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_EMERG</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga5c6e8b60c2512dfc0e0224d25a61cb2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_ERR</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga96fad55b3f5adf08c39e4c877cf185e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_FILE</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga69d4676733f5e850f451942b6d901382</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_INFO</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gaeb4f36db01bd128c7afeac5889dac311</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_NOTICE</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gad89ee324d180cdcd7defcc709ff9ca42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_NULL</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gae3b3638575ad43aa2dba40543dcec45c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_STDERR</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gaa6e90002990bd6fe70bf367456dc7d08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_SYSJRNL</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga22d57c47fac1ff91517133741592cc01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_WARNING</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gadf4476a6a4ea6c74231c826e899d7189</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>n_log</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga61355655c6d490cdf201afdfc340df4b</anchor>
      <arglist>(__LEVEL__,...)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>_n_log</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gafbbbfcb9063b9f1454a499dbf98f7a56</anchor>
      <arglist>(int level, const char *file, const char *func, int line, const char *format,...)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>close_safe_logging</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gab0f29a8f3d807e2738376cd0bd657eb0</anchor>
      <arglist>(TS_LOG *log)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close_sysjrnl</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga6b48448b4bb689cc55c6a7267daf77ca</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>FILE *</type>
      <name>get_log_file</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga2ff7ac3ed2362bf2820e1639b4ddaf8f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_log_level</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gafeea44ab08778cbff68e91e831d44112</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>open_safe_logging</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga51d76a6d03860ab048a2f09eabc27f9a</anchor>
      <arglist>(TS_LOG **log, char *pathname, char *opt)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>open_sysjrnl</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga669c0bbf1e87d5531b6432ae87c46648</anchor>
      <arglist>(char *identity)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>set_log_file</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gac83aa9829ddf0d169e2890ef63052b52</anchor>
      <arglist>(char *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_log_level</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>gacad9b2d55788f46ddde811c986ead9ae</anchor>
      <arglist>(const int log_level)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_safe_log</name>
      <anchorfile>group___l_o_g.html</anchorfile>
      <anchor>ga4351d7c5fb7f3464480aebb763b70d69</anchor>
      <arglist>(TS_LOG *log, char *pat,...)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NETWORKING</name>
    <title>NETWORK ENGINE: connect, accept, send and recv wrappers. Network Queue, thread-safe add/get message, ssl/tls secured communications</title>
    <filename>group___n_e_t_w_o_r_k_i_n_g.html</filename>
    <class kind="struct">N_SOCKET</class>
    <class kind="struct">NETWORK</class>
    <class kind="struct">NETWORK_HTTP_INFO</class>
    <class kind="struct">NETWORK_POOL</class>
    <member kind="define">
      <type>#define</type>
      <name>HEAD_CODE</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga72bfa45bed60463a02fe636da854ce9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HEAD_SIZE</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga559af0e5a7ad6c1693c0387eefde89bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>N_ENUM_netw_code_type</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga3513b0e66667d67528aea6235e43386d</anchor>
      <arglist>(_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETW_MAX_RETRIES</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gac2121258336e5f41058bc73f69d167c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETW_SOCKET_DISCONNECTED</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga8fc789e263443a5a5edbb984fee857b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETW_SOCKET_ERROR</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga010f0a5ac05248b8b9ba98c8756dc212</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_CONSECUTIVE_SEND_WAIT</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga7d0cc5bc300c9f167ed1c9535d7ad1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_DEPLETE_QUEUES_TIMEOUT</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaec1d27f444d574de372336a233cf4600</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_DEPLETE_SOCKET_TIMEOUT</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae4bb4a196edb9975875c89a29e4ac4d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_IPALL</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga8c9c7f339ab7d4066257c92c1ce1d1ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_IPV4</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga5f726a9a4d94caeeeff82e4449564d64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_IPV6</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga3f93cb2837a5f8d836804f450415d7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETWORK_WAIT_CLOSE_TIMEOUT</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa361a43b84d75f31b0a96aafc7c2ba48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SOCKET_SIZE_FORMAT</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga6915838bcf8c8963879b309d2c325c58</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ssize_t(*</type>
      <name>netw_func</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga7a1e8d1b12bde55109fb95f5f0fcf5cc</anchor>
      <arglist>)(void *, char *, uint32_t)</arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>SOCKET</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga8dc8083897335125630f1af5dafd5831</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deplete_send_buffer</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab7f9fd903744c66d570b868df5b3a551</anchor>
      <arglist>(int fd, int timeout)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>htonst</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga6b4483c46531db7c0332e747c676beef</anchor>
      <arglist>(size_t value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>N_ENUM_DECLARE</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafac9423e06ba72d88b7d3ce910b25ff1</anchor>
      <arglist>(N_ENUM_netw_code_type, __netw_code_type)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK *</type>
      <name>netw_accept_from</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab99090cbf623f95556ea610e690b50d9</anchor>
      <arglist>(NETWORK *from)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK *</type>
      <name>netw_accept_from_ex</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga87057932b1901f9a91c4db49224087e2</anchor>
      <arglist>(NETWORK *from, size_t send_list_limit, size_t recv_list_limit, int blocking, int *retval)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK *</type>
      <name>netw_accept_nonblock_from</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga32138772c399518190a14e81164fc469</anchor>
      <arglist>(NETWORK *from, int blocking)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_add_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga10429a9fa106b61c38f28635242ce502</anchor>
      <arglist>(NETWORK *netw, N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_add_msg_ex</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafd17b2ed695976a31b4cdee5091e0ef7</anchor>
      <arglist>(NETWORK *netw, char *str, unsigned int length)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_build_http_response</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga618b55172cced563edc4e4f75ea29285</anchor>
      <arglist>(N_STR **http_response, int status_code, const char *server_name, const char *content_type, char *additional_headers, N_STR *body)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>netw_calculate_urlencoded_size</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab463f75281ea4367b77c0aac5b9f87e8</anchor>
      <arglist>(const char *str, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_close</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gac345c1af1935cebb9ee33edd4c32267a</anchor>
      <arglist>(NETWORK **netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_connect</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae18d52a130063ba1fd0a4cf4b6a2da20</anchor>
      <arglist>(NETWORK **netw, char *host, char *port, int ip_version)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_destroy_pool</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga5c0996a0b85b32d296c4e679a6eb86c2</anchor>
      <arglist>(NETWORK_POOL **netw_pool)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK_HTTP_INFO</type>
      <name>netw_extract_http_info</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gadae857ee9151eda07a25f2d9a4a69d11</anchor>
      <arglist>(char *request)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>netw_extract_http_request_type</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga1727d8db9bda334b79e3ea91347d317e</anchor>
      <arglist>(const char *request)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netw_get_http_date</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga7203513a45a5dd830b38ea07b6659e89</anchor>
      <arglist>(char *buffer, size_t buffer_size)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>netw_get_http_status_message</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaccd9f1e940bb4a1e276a6b33a96ad8db</anchor>
      <arglist>(int status_code)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netw_get_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga0d0992b4eac986d7757ecddbc66e3b90</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_queue_status</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga18c9bccb8219d66dfe7320bc0377ccaa</anchor>
      <arglist>(NETWORK *netw, size_t *nb_to_send, size_t *nb_to_read)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_state</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaaacd43329a330a29b5a93cce28c068e5</anchor>
      <arglist>(NETWORK *netw, uint32_t *state, int *thr_engine_status)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netw_get_url_from_http_request</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga9126c0c13477e4ac748aaea5ff984393</anchor>
      <arglist>(const char *request, char *url, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>netw_guess_http_content_type</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaf6513b643e5145f4b5cfbd3fde827873</anchor>
      <arglist>(const char *url)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_info_destroy</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaedf7660c79e8cb0e7521dfa72af2e12e</anchor>
      <arglist>(NETWORK_HTTP_INFO http_request)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_init_wsa</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga22bc4dd5d80c2229c3c43f6d6705dece</anchor>
      <arglist>(int mode, int v1, int v2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_make_listening</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga52afd4f5662c9c8f334d224ae2cdbdf2</anchor>
      <arglist>(NETWORK **netw, char *addr, char *port, int nbpending, int ip_version)</arglist>
    </member>
    <member kind="function">
      <type>NETWORK_POOL *</type>
      <name>netw_new_pool</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga4bf42c45211b2a687c7601da41e667cd</anchor>
      <arglist>(size_t nb_min_element)</arglist>
    </member>
    <member kind="function">
      <type>HASH_TABLE *</type>
      <name>netw_parse_post_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaf5d3a953ec9fbfe90406b00a4d96599c</anchor>
      <arglist>(const char *post_data)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_pool_add</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaed3d4b17261c0ce51cd7671b81b5a007</anchor>
      <arglist>(NETWORK_POOL *netw_pool, NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_pool_broadcast</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga06115ed18a658114104ca6b6823f5d79</anchor>
      <arglist>(NETWORK_POOL *netw_pool, NETWORK *from, N_STR *net_msg)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>netw_pool_nbclients</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga7e971e647011b8e218d2336812fedf67</anchor>
      <arglist>(NETWORK_POOL *netw_pool)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>netw_pool_netw_close</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gab0da745063a55fd79b6252339d5276a4</anchor>
      <arglist>(void *netw_ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_pool_remove</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafc7a91b4be2a997710a2b54037c25168</anchor>
      <arglist>(NETWORK_POOL *netw_pool, NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>netw_recv_func</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga63e06c0450013078c54bb4951e9438ac</anchor>
      <arglist>(void *NET)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>netw_send_func</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga2ef0aab7ff9fb531466a536773b53683</anchor>
      <arglist>(void *NET)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_ident</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae8345266fcf7a23c0e8ffe176b0e086f</anchor>
      <arglist>(NETWORK *netw, int type, int id, N_STR *name, N_STR *passwd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_ping</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gad9588cf27263ecf40f57d3923ccf721a</anchor>
      <arglist>(NETWORK *netw, int type, int id_from, int id_to, int time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_position</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gafaf1202a5f56a9f2285fccfbcacb3a6c</anchor>
      <arglist>(NETWORK *netw, int id, double X, double Y, double vx, double vy, double acc_x, double acc_y, int time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_quit</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gac8b30599c7a5c2cce35ee401d7b9d7f1</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_string_to</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gad3b590da2eb8b594c75d1d5f46ba7b45</anchor>
      <arglist>(NETWORK *netw, int id_to, N_STR *name, N_STR *chan, N_STR *txt, int color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_send_string_to_all</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga02b35de5d3b84e79c4fecbf4cebce603</anchor>
      <arglist>(NETWORK *netw, N_STR *name, N_STR *chan, N_STR *txt, int color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_set</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa8e1fe7978995197f08aa0ef24a76c33</anchor>
      <arglist>(NETWORK *netw, int flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_set_blocking</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gad02f949dd057ae7dd382f03f9364cac0</anchor>
      <arglist>(NETWORK *netw, unsigned long int is_blocking)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_set_user_id</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga4dcf657c3f133ae52d1fa6f2a2e0cd18</anchor>
      <arglist>(NETWORK *netw, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_setsockopt</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa5ed966d8c5844ded549eda41e38c0be</anchor>
      <arglist>(NETWORK *netw, int optname, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_start_thr_engine</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga5ba0555c5ccd261227c3c1216923d563</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_stop_thr_engine</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga29159184519b3129c0154b1a2c2a3e2f</anchor>
      <arglist>(NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>netw_urldecode</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gae94e940f6d1c780563dd246ffdcc5fd6</anchor>
      <arglist>(const char *str)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>netw_urlencode</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga2aa0b402c9e72a7f5ce894bc92c377e7</anchor>
      <arglist>(const char *str, size_t len)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>recv_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga4e2fbd39980f3a1cb7258ec4382f29f7</anchor>
      <arglist>(void *netw, char *buf, uint32_t n)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>recv_php</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaf7a34a0478fe84e296dbdaf9cc618259</anchor>
      <arglist>(SOCKET s, int *_code, char **buf)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>send_data</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>gaa99961114daea113b78c7fc5e545d592</anchor>
      <arglist>(void *netw, char *buf, uint32_t n)</arglist>
    </member>
    <member kind="function">
      <type>ssize_t</type>
      <name>send_php</name>
      <anchorfile>group___n_e_t_w_o_r_k_i_n_g.html</anchorfile>
      <anchor>ga250de7b17e4b2ec68e11c48789bbbe00</anchor>
      <arglist>(SOCKET s, int _code, char *buf, int n)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>NETWORK_MSG</name>
    <title>NETWORK MESSAGES: tools to serialize integers, double, N_STR from and back to a single N_STR *message</title>
    <filename>group___n_e_t_w_o_r_k___m_s_g.html</filename>
    <class kind="struct">NETW_MSG</class>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_BOX</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaa4b51b1c41f36f6ee947958e7b2f461e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_GET_BOX</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gab8dd7be31c5e0e263f81efa4962b38a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_IDENT_REPLY_NOK</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga2c234a6eeea5e8f2fe26573ba2053423</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_IDENT_REPLY_OK</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gacd87327bd5e06b2dbceee860fb93cc90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_IDENT_REQUEST</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga0aba2c6691315fe2da60573c228da4ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_PING_REPLY</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga322dcf158f5f222cb28df2736a533292</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_PING_REQUEST</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga2669f513eb1909d6f1940923f994eaf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_POSITION</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga6be40a0228eaffdc2591bd892801ad6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_QUIT</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga5752ebf119504833871560aaff3142a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NETMSG_STRING</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga2cd8d019ec9563557d35e165c7fd820f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_int_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga9aa63e987d00d99d9a21aec35efecf74</anchor>
      <arglist>(NETW_MSG *msg, int value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_nb_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gae7c4f1b2c58aabda4856a2f5c782b863</anchor>
      <arglist>(NETW_MSG *msg, double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_nstrdup_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga84f36b52e6d9dfe9ca6186c3177f5472</anchor>
      <arglist>(NETW_MSG *msg, N_STR *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_nstrptr_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga53dfbdd3b5d1cfcf387d17b4465e5f3a</anchor>
      <arglist>(NETW_MSG *msg, N_STR *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_strdup_to_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga196134389f2e0b1493154c73a7133df0</anchor>
      <arglist>(NETW_MSG *msg, const char *str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>create_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga62ae674d9de6171bcbd604e68a3b94a9</anchor>
      <arglist>(NETW_MSG **msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>delete_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gadcc2854217553f3a4890973873bdf634</anchor>
      <arglist>(NETW_MSG **msg)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>double_swap</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga4f7b627b47a1ee6976089dc4ab0a91b9</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga425d9f110062f063dc2e9af0212b793d</anchor>
      <arglist>(NETW_MSG **msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_int_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gafc6e48e4853310c09174f5ff3dfed85b</anchor>
      <arglist>(NETW_MSG *msg, int *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_nb_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga56c3f927b3d6249eb5aa37a6d27ed225</anchor>
      <arglist>(NETW_MSG *msg, double *value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_nstr_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga73be780021c7c875f476ef4e02d2bc1c</anchor>
      <arglist>(NETW_MSG *msg, N_STR **str)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get_str_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga12c81c5fd507131d3b73bbe71cb47476</anchor>
      <arglist>(NETW_MSG *msg, char **str)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>htond</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga0cf26e3b1e26847bbd66fbd4b4a1a67c</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>NETW_MSG *</type>
      <name>make_msg_from_str</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga3fd01fccdf5fee20c2f0df7429ab3dd7</anchor>
      <arglist>(N_STR *str)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>make_str_from_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga5145350ad23fa9c0db3057e566d70722</anchor>
      <arglist>(NETW_MSG *msg)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_ident</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga7bae3c3de53204413c7663007ec4a4d7</anchor>
      <arglist>(int type, int id, N_STR *name, N_STR *passwd)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_ping</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaeb5e94070c0ee79ff2d11a707d225c3a</anchor>
      <arglist>(int type, int id_from, int id_to, int time)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_position_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga6d469c5cbc4fdfa266be68a35d10a904</anchor>
      <arglist>(int id, double X, double Y, double vx, double vy, double acc_x, double acc_y, int time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_quit_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaea4cc09810479665c6c7e689dfaecff7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>netmsg_make_string_msg</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gafb91c3ea7bfa93212141fa1fe074fb3d</anchor>
      <arglist>(int id_from, int id_to, N_STR *name, N_STR *chan, N_STR *txt, int color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_ident</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaf2d84e34e50db7b3b7aca16c6bdb06f8</anchor>
      <arglist>(N_STR *msg, int *type, int *ident, N_STR **name, N_STR **passwd)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_ping</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga525ee81a12f526d55b2b380d9338424e</anchor>
      <arglist>(N_STR *msg, int *type, int *from, int *to, int *time)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_position</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga241bf3b1ebc63dd986dfec1b0fe4998b</anchor>
      <arglist>(N_STR *msg, int *id, double *X, double *Y, double *vx, double *vy, double *acc_x, double *acc_y, int *time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_quit</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga601ef18cfe3570caaa81cc43c09004c2</anchor>
      <arglist>(N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_get_string</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gace220d6339bd8085269ecee2b35126fb</anchor>
      <arglist>(N_STR *msg, int *id, N_STR **name, N_STR **chan, N_STR **txt, int *color)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>netw_msg_get_type</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>ga70abef02e9578c21b5707eecb3750fef</anchor>
      <arglist>(N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ntohd</name>
      <anchorfile>group___n_e_t_w_o_r_k___m_s_g.html</anchorfile>
      <anchor>gaaed102598c4379bd1e0dc78f834972b0</anchor>
      <arglist>(double value)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>N_USER</name>
    <title>NETWORK USERS: server side network oriented user handling</title>
    <filename>group___n___u_s_e_r.html</filename>
    <class kind="struct">N_USER</class>
    <class kind="struct">N_USERLIST</class>
    <member kind="define">
      <type>#define</type>
      <name>USERLIST_ALL</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gaa1818df59987698f547d177eb46517a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USERLIST_ALL_EXCEPT</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga83e39582966eb2e63f5c3ddce6cbc6ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>USERLIST_ONE</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga6aa5b8a1350ee4a1ad01d47b4100ea92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga25d7254e2bc5d4c6d4e89dadef9c67cd</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to_all</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gaaf1860e26c4355764ad00e1016547b2c</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to_all_except</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gaec87d76c70852173c2187e4eceb707ee</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_msg_to_ex</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga2f336886f3d5e909c397f1660419701d</anchor>
      <arglist>(N_USERLIST *ulist, N_STR *msg, int mode, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_add_user</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gae10281ac87587e0e876bce8a4b0fd070</anchor>
      <arglist>(N_USERLIST *ulist, NETWORK *netw)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_del_user</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga199e127e979f625ff75a01e45afe0d5b</anchor>
      <arglist>(N_USERLIST *ulist, int id)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_destroy</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gafa7f69dc21b1036e4e7815d8ab88c8d1</anchor>
      <arglist>(N_USERLIST **ulist)</arglist>
    </member>
    <member kind="function">
      <type>N_USERLIST *</type>
      <name>userlist_new</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga9b5ba218fe230aa8fa0934fce44c90be</anchor>
      <arglist>(int max)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_send_waiting_msgs</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gac33945e0ace7b69815c92c2e9ba248a1</anchor>
      <arglist>(N_USERLIST *ulist)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_set_position_behavior</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gad9aae553bc39ca0193be01e70a3858d0</anchor>
      <arglist>(N_USERLIST *ulist, int id, int nb_rec_pos, int only_last_pos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_user_add_waiting_msg</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>gafeb353e9e5f9e0242e9b6d26ab668765</anchor>
      <arglist>(N_USERLIST *ulist, int id, N_STR *netmsg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>userlist_user_send_waiting_msgs</name>
      <anchorfile>group___n___u_s_e_r.html</anchorfile>
      <anchor>ga7b395e123b45d9d9215ea4318d5ff2cc</anchor>
      <arglist>(N_USERLIST *ulist, int id)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PCRE</name>
    <title>PCREs: regex matching helpers</title>
    <filename>group___p_c_r_e.html</filename>
    <class kind="struct">N_PCRE</class>
    <member kind="function">
      <type>int</type>
      <name>npcre_clean_match</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ga89e67d2b218e2138a12aaecc2deab8fc</anchor>
      <arglist>(N_PCRE *pcre)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>npcre_delete</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>gaf198eb0bc8c55ac41cc92af8e538ce04</anchor>
      <arglist>(N_PCRE **pcre)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>npcre_match</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ga605b60ef645cf217bd2b3dc548d1d6c2</anchor>
      <arglist>(char *str, N_PCRE *pcre)</arglist>
    </member>
    <member kind="function">
      <type>N_PCRE *</type>
      <name>npcre_new</name>
      <anchorfile>group___p_c_r_e.html</anchorfile>
      <anchor>ga54f913d2ee09d63de0f06fc1b9439d4a</anchor>
      <arglist>(char *str, int max_cap, int flags)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>PHYSICS</name>
    <title>PHYSICS: simple 3D movement simulation</title>
    <filename>group___p_h_y_s_i_c_s.html</filename>
    <class kind="struct">PHYSICS</class>
    <member kind="define">
      <type>#define</type>
      <name>copy_point</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga55ea8f9ffbf8113d1404c6f497891958</anchor>
      <arglist>(__src_, __dst_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOVE_INTER</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gafd490454081da9fd11b3a8564a1b1e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOVE_SIMU</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gaeca89443b9e6938674997d41a89dd7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MOVE_STOPPED</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga37296420ee4666a035fbc7773e5d63b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR3D_COLLINEAR</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga1553548da310962d8aac7f06896d015a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR3D_DO_INTERSECT</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga4aa4f8e93ec25da82dbef99b4dcca990</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR3D_DONT_INTERSECT</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga6f567ec1eef50b1902b47b3d67b0cece</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VECTOR3D_SET</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga0d342c376c3e3125c8fb97bcbe7f93c0</anchor>
      <arglist>(VECTOR, X, Y, Z)</arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>VECTOR3D</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga4cbdd7084ea2076595f397a969feba63</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>distance</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga436d6582b13cb4a7a52e5814236ae5f0</anchor>
      <arglist>(VECTOR3D *p1, VECTOR3D *p2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gadc7a001ab64c72a43243175e56a86264</anchor>
      <arglist>(PHYSICS *object, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position_nb</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga5a40d51963e17af619b6a3c36c687462</anchor>
      <arglist>(PHYSICS *object, int it, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position_reverse</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga7644cdf589832471424103293b68f77b</anchor>
      <arglist>(PHYSICS *object, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>update_physics_position_reverse_nb</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gaa8021a03baa26410f81f6fcdf77da564</anchor>
      <arglist>(PHYSICS *object, int it, double delta_t)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_angle_between</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga523b38d99b808d695819e5d42c91b182</anchor>
      <arglist>(VECTOR3D *vec1, VECTOR3D *vec2)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_dot_product</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>ga08fa4eb6d167cc941fe6cfd5d21b255d</anchor>
      <arglist>(VECTOR3D *vec1, VECTOR3D *vec2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>vector_intersect</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gafc35e47713f26cce316cc85dd85354b7</anchor>
      <arglist>(VECTOR3D *p0, VECTOR3D *p1, VECTOR3D *p2, VECTOR3D *p3, VECTOR3D *px)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>vector_normalize</name>
      <anchorfile>group___p_h_y_s_i_c_s.html</anchorfile>
      <anchor>gab69467787b1b55290585366a20cf82cb</anchor>
      <arglist>(VECTOR3D *vec)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>SIGNALS</name>
    <title>SIGNALS: signals handling and stack printing</title>
    <filename>group___s_i_g_n_a_l_s.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAX_STACK_FRAMES</name>
      <anchorfile>group___s_i_g_n_a_l_s.html</anchorfile>
      <anchor>ga2ed127ee3fe422f95420f138273e6da7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIGALTSTACK_SIZE</name>
      <anchorfile>group___s_i_g_n_a_l_s.html</anchorfile>
      <anchor>ga00580ffdbc034e7e5f76f7b3936c0229</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_signal_handler</name>
      <anchorfile>group___s_i_g_n_a_l_s.html</anchorfile>
      <anchor>ga439d6a2f0248222f4f7ef75ee00e1d50</anchor>
      <arglist>(const char *progname)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>STACK</name>
    <title>STACKS: generic type stack</title>
    <filename>group___s_t_a_c_k.html</filename>
    <class kind="struct">STACK</class>
    <class kind="union">STACK_DATA</class>
    <class kind="struct">STACK_ITEM</class>
    <member kind="define">
      <type>#define</type>
      <name>STACK_IS_EMPTY</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga869ff87cc211ee0e83f129f1c9efcfbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_IS_FULL</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga948de90938412ca4b03dce14ea8ddf79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_IS_UNDEFINED</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gac0a963b8706cd38e73e6ef35bd1d2ec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_BOOL</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gac017710aef6308f45d83aeb59f86c4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_CHAR</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gaa752297ee75accdafa4fc2b648646ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_DOUBLE</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gaddb68035dc140c9f17a55843621a6027</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_FLOAT</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gae981af9fbdf161b9b14d83a81a48e81d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_INT32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga92d0863b68ebcbdbd31a376fa82adfea</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_INT64</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga8ee57210a2b7ceae67c1fc1e4650afe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_INT8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga56557c8e9a18c147a85f1a210bc7bea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_OK</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gab394a597991192dab26710e244b022f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_PTR</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga77785c08bf56b15428d4a654041ddb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_UINT32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga3f351175d14f2760ce71e547f21ae8c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_UINT64</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga1ac41a9b208a24cb745b5c945cf7c68f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_UINT8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gac3206cdde779008941d5de89bc0d936e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STACK_ITEM_WRONG_TYPE</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gadb9d016dc6de46f58d77ba23a4d12589</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stack_push</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gadcf3ac098aa8c2a46b9425aec7f7337f</anchor>
      <arglist>(__STACK, __VAL)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>delete_stack</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gae10ed44c0747bbb61ff7a4f4fb861a7a</anchor>
      <arglist>(STACK **stack)</arglist>
    </member>
    <member kind="function">
      <type>STACK *</type>
      <name>new_stack</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gaeb9766b80862cfed07804b00e02ca3d9</anchor>
      <arglist>(size_t nb_items)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_is_empty</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga262da05db5ed393ca1af9adee0046315</anchor>
      <arglist>(STACK *stack)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_is_full</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga4aec6e9c9b01255d1131a3f3cc6c2886</anchor>
      <arglist>(STACK *stack)</arglist>
    </member>
    <member kind="function">
      <type>STACK_ITEM *</type>
      <name>stack_peek</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga3fd77da7de03d2d18cdb3600f24db24b</anchor>
      <arglist>(STACK *stack, size_t position)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_pop_b</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga2fb95be3f5f644f46d6d071365ecc8e1</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>stack_pop_c</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga581a47ccfc1da063f2b668a5fc73b315</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>stack_pop_d</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga280e4798f9624d97531a3e5ed3f78fa2</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>stack_pop_f</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga722c00b84620d10288d65675179c33cd</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>stack_pop_i32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gada4b159b3c4dcde56905cd49ac04dcb8</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>stack_pop_i8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga53e34b97087a1177c96c0ce32966cfb3</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>stack_pop_p</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gaf3a5086088b5bb511ba8dc265adfeb39</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>stack_pop_ui32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gab62facdfc1a162b989d78c8caf915bc6</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>stack_pop_ui8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga78a9be2f76ff4e306bfe2d8d1bc08494</anchor>
      <arglist>(STACK *stack, uint8_t *status)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_b</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gaba2d8fcb66acaca628b1be6c575e8541</anchor>
      <arglist>(STACK *stack, bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_c</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga7d9f28e18faf348fd4ab97ea47621ac7</anchor>
      <arglist>(STACK *stack, char c)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_d</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga3458d26b4af8bbceb20d52afab6c4734</anchor>
      <arglist>(STACK *stack, double d)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_f</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga19db9b4bae7a2236355982f518cc8d20</anchor>
      <arglist>(STACK *stack, float f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_i32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gada2ba939444a901d6f801d0399375e43</anchor>
      <arglist>(STACK *stack, int32_t i32)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_i8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gae22319d96be347b2d38d02bdb2af7f34</anchor>
      <arglist>(STACK *stack, int8_t i8)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_p</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>gaf38d5759fa73e191542a6d95781ce7c0</anchor>
      <arglist>(STACK *stack, void *p, uint16_t p_type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_ui32</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga4e555ba13b94ea3cb7453adc54d6067b</anchor>
      <arglist>(STACK *stack, uint32_t ui32)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stack_push_ui8</name>
      <anchorfile>group___s_t_a_c_k.html</anchorfile>
      <anchor>ga35cabbd51b1ee323eef2e068747fd8f7</anchor>
      <arglist>(STACK *stack, uint8_t ui8)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>N_STR</name>
    <title>STRINGS: replacement to char *strings with dynamic resizing and boundary checking</title>
    <filename>group___n___s_t_r.html</filename>
    <class kind="struct">N_STR</class>
    <member kind="define">
      <type>#define</type>
      <name>free_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga113e906d03374ac38e441f1df44095fb</anchor>
      <arglist>(__ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>local_strdup</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga16762ce4107cf926d2dc561b150333a0</anchor>
      <arglist>(__src_)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>n_remove_ending_cr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga54bf16a8b9e09ae99152a5fe0d69199c</anchor>
      <arglist>(__nstr_var)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>n_replace_cr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga277814cf383e1605fa867b5598aec2a1</anchor>
      <arglist>(__nstr_var, __replacement)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nstrcat</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga3e2a6eb0bcc7a4a9cae344a3182523a5</anchor>
      <arglist>(__nstr_dst, __nstr_src)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nstrcat_bytes</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabbbc73a9b341963c39388672be783f2e</anchor>
      <arglist>(__nstr_dst, __void_src)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nstrprintf</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga92cd2a8efba2cd901ec96dfce1601ca6</anchor>
      <arglist>(__nstr_var, __format,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>nstrprintf_cat</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga520338be0790ce65eedbbb18a09399d6</anchor>
      <arglist>(__nstr_var, __format,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>strprintf</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga413e4753210ae76b4231721a2354f06b</anchor>
      <arglist>(__n_var,...)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WILDMAT_ABORT</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga79fa44855e34ba816359656e8bfd841f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WILDMAT_NEGATE_CLASS</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga868c667912754efcf68370278b0aaee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>size_t</type>
      <name>NSTRBYTE</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga0ed4c27dcf5b9db305238d06aae0e450</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>_free_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaca4a7a2dfa962f043cb8f3762ce28761</anchor>
      <arglist>(N_STR **ptr)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>char_to_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga69e5f2dbf75571a73e5a3332929642a4</anchor>
      <arglist>(const char *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>char_to_nstr_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gac4314e9f0ada88300a09d66405d541a8</anchor>
      <arglist>(const char *from, NSTRBYTE nboct, N_STR **to)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>char_to_nstr_nocopy</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gac8a6d1b664609215ee950c105658d86c</anchor>
      <arglist>(char *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>char_to_nstr_nocopy_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga65d9775967814094e82d07e5cb921ca5</anchor>
      <arglist>(char *from, NSTRBYTE nboct, N_STR **to)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>empty_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga7b1c84d10757d1886ed29938f1f65973</anchor>
      <arglist>(N_STR *nstr)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>file_to_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gad2c9b27509a55615e57ef8efd2ca3a02</anchor>
      <arglist>(char *filename)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_nstr_nolog</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabd313699b10bb56e50c45670e479faa7</anchor>
      <arglist>(N_STR **ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_nstr_ptr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga0a864a4ce4997389f2e5e2e16c51a30a</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_nstr_ptr_nolog</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae1af929354e55057c4f134bce8f5b4d6</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>free_split_result</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gad53cff99261e509872a2a4128b1265cf</anchor>
      <arglist>(char ***tab)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>join</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gacdeb6b4760b1e4b22188993f0cd5222f</anchor>
      <arglist>(char **splitresult, char *delim)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>new_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga873edbb1f8787d0a78a13ccbbed9b9f9</anchor>
      <arglist>(NSTRBYTE size)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>nfgets</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga6aafe2498e23778dc91c8ad08167ff24</anchor>
      <arglist>(char *buffer, NSTRBYTE size, FILE *stream)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nstr_to_fd</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaf1ad6fe037290fd52fb91b89dd978b1f</anchor>
      <arglist>(N_STR *str, FILE *out, int lock)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>nstr_to_file</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga287229f34095426806d36c86be764d12</anchor>
      <arglist>(N_STR *n_str, char *filename)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>nstrcat_bytes_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga9394dd9180b28abf28905a8f161043b5</anchor>
      <arglist>(N_STR **dest, void *src, NSTRBYTE size)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>nstrdup</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga3e30a18ec42d0f4cd8651c442bf62651</anchor>
      <arglist>(N_STR *msg)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>resize_nstr</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga640c39561bbd3ba017d57dbfee6c7c5c</anchor>
      <arglist>(N_STR *nstr, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scan_dir</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaa3becc1e523b47d5d53bbbf6b1603520</anchor>
      <arglist>(const char *dir, LIST *result, const int recurse)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scan_dir_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga3257ab0fdf5a36d0dfca480a161d9fbf</anchor>
      <arglist>(const char *dir, const char *pattern, LIST *result, const int recurse, const int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skipu</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae4317ddc09606fcca46265a53bfbfb8b</anchor>
      <arglist>(char *string, char toskip, NSTRBYTE *iterator, int inc)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>skipw</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga783070a793146a860c3651c8434f32e1</anchor>
      <arglist>(char *string, char toskip, NSTRBYTE *iterator, int inc)</arglist>
    </member>
    <member kind="function">
      <type>char **</type>
      <name>split</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gab731024d29b0937615c1cdddeb8d4875</anchor>
      <arglist>(const char *str, const char *delim, int empty)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>split_count</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga194b81c0709d24aef9b6f7e8635d3966</anchor>
      <arglist>(char **split_result)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>str_replace</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga88e865dd8e64f3f3504a99d4d0961c37</anchor>
      <arglist>(const char *string, const char *substr, const char *replacement)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_sanitize</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaaf432cb6330353e306e51ed3d6e9f417</anchor>
      <arglist>(char *string, const char *mask, const char replacement)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_sanitize_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga2386f438e79df60930987a6102e87934</anchor>
      <arglist>(char *string, const NSTRBYTE string_len, const char *mask, const NSTRBYTE masklen, const char replacement)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_int</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae2c2238ae654a58f23570ce58e4d0eb8</anchor>
      <arglist>(const char *s, int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_int_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga55fdc7d1a7bd05f3e3925486e7fc9b9d</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_int_nolog</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga62422c326112e425298de6fb92584067</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, int *i, const int base, N_STR **infos)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabe0231d30f0adca6678adba9ffca328a</anchor>
      <arglist>(const char *s, long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaf2fb09488bdaa0e8662f639ea899627e</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long_long</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga04812d120313b73e6e22493cad0ec75d</anchor>
      <arglist>(const char *s, long long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>str_to_long_long_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga342bfee6550085fdf64e3db3cdd3ecb3</anchor>
      <arglist>(const char *s, NSTRBYTE start, NSTRBYTE end, long long int *i, const int base)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strcpy_u</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga0484a44a99d2ad895e2c111b34ea5e39</anchor>
      <arglist>(char *from, char *to, NSTRBYTE to_size, char split, NSTRBYTE *it)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strlo</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gaeaf9add3ea7a87eeea6e0cc4a81b47e6</anchor>
      <arglist>(char *string, char *dest)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strup</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabb57d0188e78f2520d4ae7cc805579f5</anchor>
      <arglist>(char *string, char *dest)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>trim</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gae5bb0c43f76b886197ee48679f0e8dbc</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>trim_nocopy</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga096b9e0a33d6e0f97e26c86b96415330</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wildmat</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gabcfef0711183d5a9eb5ccb9c72ccaf85</anchor>
      <arglist>(register const char *text, register const char *p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wildmatcase</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga83b7c5c99476048f972ead97468ab7c2</anchor>
      <arglist>(register const char *text, register const char *p)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_and_fit</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>ga4d201326b0adb27713e86af775b3dd35</anchor>
      <arglist>(char **dest, NSTRBYTE *size, NSTRBYTE *written, const char *src)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>write_and_fit_ex</name>
      <anchorfile>group___n___s_t_r.html</anchorfile>
      <anchor>gacc3740a4b0816c80170ba6d6b0ae9eea</anchor>
      <arglist>(char **dest, NSTRBYTE *size, NSTRBYTE *written, const char *src, NSTRBYTE src_size, NSTRBYTE additional_padding)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>THREADS</name>
    <title>THREADS: tools to create and manage a thread pool</title>
    <filename>group___t_h_r_e_a_d_s.html</filename>
    <class kind="struct">THREAD_POOL</class>
    <class kind="struct">THREAD_POOL_NODE</class>
    <class kind="struct">THREAD_WAITING_PROC</class>
    <member kind="define">
      <type>#define</type>
      <name>DIRECT_PROC</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga8c7d9cf88f160af14b39be46a66f8189</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXITED_THREAD</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga1acdd58d4aee3c8453ea124bd862518d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXITING_THREAD</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>gaac52c55616f27d8f95c4435d4b2cf91d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IDLE_PROC</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga7131f70ca662b8211de3586a2a6a5a16</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NO_LOCK</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga993c05b6c403f10fb3627e9e4fc30c83</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NOQUEUE</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>gaa558974d10eb2bf6f6915b6cc2bfea34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RUNNING_PROC</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga928be77c90a9b28e1931431b5eac113b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RUNNING_THREAD</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>gac3966893f43d72bd23c7c3f410df9a48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYNCED_PROC</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga2b400f548be5f43fa27d8f8b18892c08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WAITING_PROC</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>gad1478c0e8f6772bb9673116dd0902e56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>add_threaded_process</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga46497eb81066d0df83dfd07ad0a9f561</anchor>
      <arglist>(THREAD_POOL *thread_pool, void *(*func_ptr)(void *param), void *param, int mode)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>destroy_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga7c1bc4b2165196ae865a5f11a6867a20</anchor>
      <arglist>(THREAD_POOL **thread_pool, unsigned int delay)</arglist>
    </member>
    <member kind="function">
      <type>long int</type>
      <name>get_nb_cpu_cores</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga8957711a73ec71ea58b28df71f4e1e0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>THREAD_POOL *</type>
      <name>new_thread_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga06425285000fa305a3e9eb7d8affa32f</anchor>
      <arglist>(size_t nbmaxthr, size_t nb_max_waiting)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>refresh_thread_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga5d9ce1747e4b7cb58ce3767f7e56cd8b</anchor>
      <arglist>(THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>start_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga0563294cf52eb2b9e4f1d017390ff46c</anchor>
      <arglist>(THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wait_for_synced_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga8207010787895dfc3bf7ba0b94974c26</anchor>
      <arglist>(THREAD_POOL *thread_pool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wait_for_threaded_pool</name>
      <anchorfile>group___t_h_r_e_a_d_s.html</anchorfile>
      <anchor>ga91ced7902ded69f1cdb0a625dbb5f4e9</anchor>
      <arglist>(THREAD_POOL *thread_pool, unsigned int delay)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>N_TIME</name>
    <title>TIMERS: generally used headers, defines, timers, allocators,...</title>
    <filename>group___n___t_i_m_e.html</filename>
    <class kind="struct">N_TIME</class>
    <member kind="function">
      <type>time_t</type>
      <name>get_msec</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gaa71a2f2a65caafed11a79e4317e88b44</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>get_sec</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gab5811f13d7c9699d13752c197d72cb67</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>time_t</type>
      <name>get_usec</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gaa26bb3d464f6def321b9919bf1e9d1f4</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PAUSE</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>gae4029ed3ae38f152bc572933ed1997be</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>start_HiTimer</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>ga83bf99faafa00b4a69f31a589ca712ff</anchor>
      <arglist>(N_TIME *timer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>u_sleep</name>
      <anchorfile>group___n___t_i_m_e.html</anchorfile>
      <anchor>ga690f12dde1a446d47b8bf5f959493003</anchor>
      <arglist>(unsigned int usec)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>TREE</name>
    <title>TREE: various tree with generic support</title>
    <filename>group___t_r_e_e.html</filename>
    <class kind="union">COORD_VALUE</class>
    <class kind="struct">NODE_DATA</class>
    <class kind="union">NODE_DATA_TYPES</class>
    <class kind="struct">OCTREE</class>
    <class kind="struct">OCTREE_NODE</class>
    <class kind="struct">POINT2D</class>
    <class kind="struct">POINT3D</class>
    <class kind="struct">QUADTREE</class>
    <class kind="struct">QUADTREE_NODE</class>
    <class kind="struct">TREE</class>
    <class kind="struct">TREE_NODE</class>
    <member kind="typedef">
      <type>int(*</type>
      <name>compare_func</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga027ae21737f078c4db3834006ade29fd</anchor>
      <arglist>)(COORD_VALUE a, COORD_VALUE b)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>print_func</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga5bbe87be72c5f3b2d96107003c3725ee</anchor>
      <arglist>)(COORD_VALUE val)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>COORD_TYPE</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga7e8fb6192e0a9e61f70e4bcf88dd7800</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>QUADTREE_NODE *</type>
      <name>create_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gaf84bd52723c263a7393dbe58e26ae4c4</anchor>
      <arglist>(COORD_VALUE x, COORD_VALUE y, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>OCTREE *</type>
      <name>create_octree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gab863b9db45fb9ad7b4a1f4b6a0fa4ed4</anchor>
      <arglist>(int type)</arglist>
    </member>
    <member kind="function">
      <type>OCTREE_NODE *</type>
      <name>create_octree_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gaab241e76ec7f58148636b94588632478</anchor>
      <arglist>(POINT3D point, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>QUADTREE *</type>
      <name>create_quadtree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gadbc22319421ed2ae3643e46b713d72a7</anchor>
      <arglist>(int coord_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_octree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga8fe1d2b26c64c6e6a903686add0859ba</anchor>
      <arglist>(OCTREE *OCTREE)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_octree_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga11959698cee9597fd1876b32b3c4aea4</anchor>
      <arglist>(OCTREE_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free_quadtree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga2f00ef1f3055c5dda01588a36ec8bbec</anchor>
      <arglist>(QUADTREE_NODE *root)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gac97d67a9c1e410abfa21c96252151295</anchor>
      <arglist>(QUADTREE *qt, QUADTREE_NODE **root, COORD_VALUE x, COORD_VALUE y, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert_octree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga1fe46d075a192493c755b332a6217660</anchor>
      <arglist>(OCTREE *OCTREE, POINT3D point, void *data_ptr)</arglist>
    </member>
    <member kind="function">
      <type>TREE *</type>
      <name>new_tree</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga49421b368bbf90d858aace6abf08b093</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QUADTREE_NODE *</type>
      <name>search</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga7c0b07a6c3fdbbce8c43090ca197cf52</anchor>
      <arglist>(QUADTREE *qt, QUADTREE_NODE *root, COORD_VALUE x, COORD_VALUE y)</arglist>
    </member>
    <member kind="function">
      <type>TREE_NODE *</type>
      <name>tree_create_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga548b5e1126a451d166a3892c7761ee93</anchor>
      <arglist>(NODE_DATA value, void(*destroy_func)(void *ptr))</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tree_delete_node</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gac6fd5dd947cc80b699600bc734ffb114</anchor>
      <arglist>(TREE *tree, TREE_NODE *node)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tree_destroy</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>gaa2e35447dc7c9b0b6e54aef8d688924e</anchor>
      <arglist>(TREE **tree)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tree_insert_child</name>
      <anchorfile>group___t_r_e_e.html</anchorfile>
      <anchor>ga2a7ac2ac073243ab157638c8d3c8a6cb</anchor>
      <arglist>(TREE_NODE *parent, TREE_NODE *child)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>ZLIB</name>
    <title>ZLIB: shortcuts to easy compress/decompress data</title>
    <filename>group___z_l_i_b.html</filename>
    <member kind="function">
      <type>size_t</type>
      <name>GetMaxCompressedLen</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>ga2b236630816c04de9fae5aa1ac9d2027</anchor>
      <arglist>(size_t nLenSrc)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>UncompressData</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>ga8d9cc906bc624d1a259f305aeca1b24f</anchor>
      <arglist>(unsigned char *abSrc, size_t nLenSrc, unsigned char *abDst, size_t nLenDst)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>unzip_nstr</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>gab434f8d8cbd741ecffd35be2125b66fe</anchor>
      <arglist>(N_STR *src)</arglist>
    </member>
    <member kind="function">
      <type>N_STR *</type>
      <name>zip_nstr</name>
      <anchorfile>group___z_l_i_b.html</anchorfile>
      <anchor>gae1e033816ab406b33b403c687c2d7dea</anchor>
      <arglist>(N_STR *src)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Nilorea C Library</title>
    <filename>index.html</filename>
    <docanchor file="index.html" title="Table Of Contents:">contents</docanchor>
    <docanchor file="index.html" title="About Nilorea Library">aboutlib</docanchor>
    <docanchor file="index.html" title="Requirements">require</docanchor>
    <docanchor file="index.html" title="Installation">install</docanchor>
    <docanchor file="index.html" title="Closing Words">end</docanchor>
  </compound>
</tagfile>
